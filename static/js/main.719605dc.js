/*! For license information please see main.719605dc.js.LICENSE.txt */
(()=>{var e={353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(I){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return N;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(u(n,8)),a=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var d=o(u(n,l));a=a.mul(d).add(o(h))}else a=(a=a.mul(s)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"===typeof e?o(e,t):"string"===typeof e?c(e,t):l(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var v=i(-1);n.NEG_ONE=v;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var N=l(0,-2147483648,!1);n.MIN_VALUE=N;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(N)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(s),c=(a.sub(l.mul(s)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(N)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1===(1&this.low)},S.isEven=function(){return 0===(1&this.low)},S.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(N)?N:this.not().add(b)},S.neg=S.negate,S.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,d+=(p+=s+u)>>>16,c+=(d+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(N))return e.isOdd()?N:g;if(e.eq(N))return this.isOdd()?N:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*p)>>>16,y+=(b+=a*p)>>>16,b&=65535,y+=(b+=i*d)>>>16,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=a*d)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*p+s*d+a*c+i*u,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(N))return e.eq(b)||e.eq(v)?N:e.eq(N)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(N))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=b),a=a.add(d),s=s.sub(p)}return a},S.div=S.divide,S.modulo=function(e){return r(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},730:(e,t,n)=>{"use strict";var r=n(43),s=n(853);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,o={};function l(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(o[e]=t,e=0;e<t.length;e++)i.add(t[e])}var c=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),h=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(e,t,n,r,s,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=s,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function x(e,t,n,r){var s=g.hasOwnProperty(t)?g[t]:null;(null!==s?0!==s.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null===t||"undefined"===typeof t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,s,r)&&(n=null),r||null===s?function(e){return!!h.call(f,e)||!h.call(p,e)&&(d.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):s.mustUseProperty?e[s.propertyName]=null===n?3!==s.type&&"":n:(t=s.attributeName,r=s.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(s=s.type)||4===s&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var v=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),N=Symbol.for("react.fragment"),S=Symbol.for("react.strict_mode"),I=Symbol.for("react.profiler"),T=Symbol.for("react.provider"),C=Symbol.for("react.context"),$=Symbol.for("react.forward_ref"),E=Symbol.for("react.suspense"),R=Symbol.for("react.suspense_list"),A=Symbol.for("react.memo"),_=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var F=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var D=Symbol.iterator;function O(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=D&&e[D]||e["@@iterator"])?e:null}var M,L=Object.assign;function z(e){if(void 0===M)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var P=!1;function B(e,t){if(!e||P)return"";P=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(u){var r=u}Reflect.construct(e,[],t)}else{try{t.call()}catch(u){r=u}e.call(t.prototype)}else{try{throw Error()}catch(u){r=u}e()}}catch(u){if(u&&r&&"string"===typeof u.stack){for(var s=u.stack.split("\n"),a=r.stack.split("\n"),i=s.length-1,o=a.length-1;1<=i&&0<=o&&s[i]!==a[o];)o--;for(;1<=i&&0<=o;i--,o--)if(s[i]!==a[o]){if(1!==i||1!==o)do{if(i--,0>--o||s[i]!==a[o]){var l="\n"+s[i].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=i&&0<=o);break}}}finally{P=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?z(e):""}function W(e){switch(e.tag){case 5:return z(e.type);case 16:return z("Lazy");case 13:return z("Suspense");case 19:return z("SuspenseList");case 0:case 2:case 15:return e=B(e.type,!1);case 11:return e=B(e.type.render,!1);case 1:return e=B(e.type,!0);default:return""}}function V(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case N:return"Fragment";case k:return"Portal";case I:return"Profiler";case S:return"StrictMode";case E:return"Suspense";case R:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case T:return(e._context.displayName||"Context")+".Provider";case $:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case A:return null!==(t=e.displayName||null)?t:V(e.type)||"Memo";case _:t=e._payload,e=e._init;try{return V(e(t))}catch(n){}}return null}function U(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return V(t);case 8:return t===S?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function G(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function j(e){e._valueTracker||(e._valueTracker=function(e){var t=H(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var s=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return s.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=H(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function K(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function X(e,t){var n=t.checked;return L({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Y(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=G(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Q(e,t){null!=(t=t.checked)&&x(e,"checked",t,!1)}function Z(e,t){Q(e,t);var n=G(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,G(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&K(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var s=0;s<n.length;s++)t["$"+n[s]]=!0;for(n=0;n<e.length;n++)s=t.hasOwnProperty("$"+e[n].value),e[n].selected!==s&&(e[n].selected=s),s&&r&&(e[n].defaultSelected=!0)}else{for(n=""+G(n),t=null,s=0;s<e.length;s++){if(e[s].value===n)return e[s].selected=!0,void(r&&(e[s].defaultSelected=!0));null!==t||e[s].disabled||(t=e[s])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return L({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function se(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(te(n)){if(1<n.length)throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:G(n)}}function ae(e,t){var n=G(t.value),r=G(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ue,ce,he=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),s=me(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,s):e[n]=s}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ye=L({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(a(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ve=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Ne=null,Se=null;function Ie(e){if(e=xs(e)){if("function"!==typeof ke)throw Error(a(280));var t=e.stateNode;t&&(t=ws(t),ke(e.stateNode,e.type,t))}}function Te(e){Ne?Se?Se.push(e):Se=[e]:Ne=e}function Ce(){if(Ne){var e=Ne,t=Se;if(Se=Ne=null,Ie(e),t)for(e=0;e<t.length;e++)Ie(t[e])}}function $e(e,t){return e(t)}function Ee(){}var Re=!1;function Ae(e,t,n){if(Re)return e(t,n);Re=!0;try{return $e(e,t,n)}finally{Re=!1,(null!==Ne||null!==Se)&&(Ee(),Ce())}}function _e(e,t){var n=e.stateNode;if(null===n)return null;var r=ws(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(a(231,t,typeof n));return n}var Fe=!1;if(c)try{var De={};Object.defineProperty(De,"passive",{get:function(){Fe=!0}}),window.addEventListener("test",De,De),window.removeEventListener("test",De,De)}catch(ce){Fe=!1}function Oe(e,t,n,r,s,a,i,o,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(c){this.onError(c)}}var Me=!1,Le=null,ze=!1,Pe=null,Be={onError:function(e){Me=!0,Le=e}};function We(e,t,n,r,s,a,i,o,l){Me=!1,Le=null,Oe.apply(Be,arguments)}function Ve(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ue(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Ge(e){if(Ve(e)!==e)throw Error(a(188))}function He(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ve(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var s=n.return;if(null===s)break;var i=s.alternate;if(null===i){if(null!==(r=s.return)){n=r;continue}break}if(s.child===i.child){for(i=s.child;i;){if(i===n)return Ge(s),e;if(i===r)return Ge(s),t;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=s,r=i;else{for(var o=!1,l=s.child;l;){if(l===n){o=!0,n=s,r=i;break}if(l===r){o=!0,r=s,n=i;break}l=l.sibling}if(!o){for(l=i.child;l;){if(l===n){o=!0,n=i,r=s;break}if(l===r){o=!0,r=i,n=s;break}l=l.sibling}if(!o)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e))?je(e):null}function je(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=je(e);if(null!==t)return t;e=e.sibling}return null}var qe=s.unstable_scheduleCallback,Ke=s.unstable_cancelCallback,Xe=s.unstable_shouldYield,Ye=s.unstable_requestPaint,Qe=s.unstable_now,Ze=s.unstable_getCurrentPriorityLevel,Je=s.unstable_ImmediatePriority,et=s.unstable_UserBlockingPriority,tt=s.unstable_NormalPriority,nt=s.unstable_LowPriority,rt=s.unstable_IdlePriority,st=null,at=null;var it=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(ot(e)/lt|0)|0},ot=Math.log,lt=Math.LN2;var ut=64,ct=4194304;function ht(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,s=e.suspendedLanes,a=e.pingedLanes,i=268435455&n;if(0!==i){var o=i&~s;0!==o?r=ht(o):0!==(a&=i)&&(r=ht(a))}else 0!==(i=n&~s)?r=ht(i):0!==a&&(r=ht(a));if(0===r)return 0;if(0!==t&&t!==r&&0===(t&s)&&((s=r&-r)>=(a=t&-t)||16===s&&0!==(4194240&a)))return t;if(0!==(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)s=1<<(n=31-it(t)),r|=e[n],t&=~s;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=ut;return 0===(4194240&(ut<<=1))&&(ut=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-it(n),s=1<<r;s&t|e[r]&t&&(e[r]|=t),n&=~s}}var xt=0;function vt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,kt,Nt,St,It,Tt=!1,Ct=[],$t=null,Et=null,Rt=null,At=new Map,_t=new Map,Ft=[],Dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ot(e,t){switch(e){case"focusin":case"focusout":$t=null;break;case"dragenter":case"dragleave":Et=null;break;case"mouseover":case"mouseout":Rt=null;break;case"pointerover":case"pointerout":At.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":_t.delete(t.pointerId)}}function Mt(e,t,n,r,s,a){return null===e||e.nativeEvent!==a?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:a,targetContainers:[s]},null!==t&&(null!==(t=xs(t))&&kt(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==s&&-1===t.indexOf(s)&&t.push(s),e)}function Lt(e){var t=bs(e.target);if(null!==t){var n=Ve(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ue(n)))return e.blockedOn=t,void It(e.priority,(function(){Nt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function zt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=xs(n))&&kt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);ve=r,n.target.dispatchEvent(r),ve=null,t.shift()}return!0}function Pt(e,t,n){zt(e)&&n.delete(t)}function Bt(){Tt=!1,null!==$t&&zt($t)&&($t=null),null!==Et&&zt(Et)&&(Et=null),null!==Rt&&zt(Rt)&&(Rt=null),At.forEach(Pt),_t.forEach(Pt)}function Wt(e,t){e.blockedOn===t&&(e.blockedOn=null,Tt||(Tt=!0,s.unstable_scheduleCallback(s.unstable_NormalPriority,Bt)))}function Vt(e){function t(t){return Wt(t,e)}if(0<Ct.length){Wt(Ct[0],e);for(var n=1;n<Ct.length;n++){var r=Ct[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==$t&&Wt($t,e),null!==Et&&Wt(Et,e),null!==Rt&&Wt(Rt,e),At.forEach(t),_t.forEach(t),n=0;n<Ft.length;n++)(r=Ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Ft.length&&null===(n=Ft[0]).blockedOn;)Lt(n),null===n.blockedOn&&Ft.shift()}var Ut=v.ReactCurrentBatchConfig,Gt=!0;function Ht(e,t,n,r){var s=xt,a=Ut.transition;Ut.transition=null;try{xt=1,qt(e,t,n,r)}finally{xt=s,Ut.transition=a}}function jt(e,t,n,r){var s=xt,a=Ut.transition;Ut.transition=null;try{xt=4,qt(e,t,n,r)}finally{xt=s,Ut.transition=a}}function qt(e,t,n,r){if(Gt){var s=Xt(e,t,n,r);if(null===s)Gr(e,t,r,Kt,n),Ot(e,r);else if(function(e,t,n,r,s){switch(t){case"focusin":return $t=Mt($t,e,t,n,r,s),!0;case"dragenter":return Et=Mt(Et,e,t,n,r,s),!0;case"mouseover":return Rt=Mt(Rt,e,t,n,r,s),!0;case"pointerover":var a=s.pointerId;return At.set(a,Mt(At.get(a)||null,e,t,n,r,s)),!0;case"gotpointercapture":return a=s.pointerId,_t.set(a,Mt(_t.get(a)||null,e,t,n,r,s)),!0}return!1}(s,e,t,n,r))r.stopPropagation();else if(Ot(e,r),4&t&&-1<Dt.indexOf(e)){for(;null!==s;){var a=xs(s);if(null!==a&&wt(a),null===(a=Xt(e,t,n,r))&&Gr(e,t,r,Kt,n),a===s)break;s=a}null!==s&&r.stopPropagation()}else Gr(e,t,r,null,n)}}var Kt=null;function Xt(e,t,n,r){if(Kt=null,null!==(e=bs(e=we(r))))if(null===(t=Ve(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ue(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Kt=e,null}function Yt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ze()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Qt=null,Zt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Zt,r=n.length,s="value"in Qt?Qt.value:Qt.textContent,a=s.length;for(e=0;e<r&&n[e]===s[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===s[a-t];t++);return Jt=s.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function sn(e){function t(t,n,r,s,a){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=s,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(s):s[i]);return this.isDefaultPrevented=(null!=s.defaultPrevented?s.defaultPrevented:!1===s.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return L(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var an,on,ln,un={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=sn(un),hn=L({},un,{view:0,detail:0}),dn=sn(hn),pn=L({},hn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:In,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ln&&(ln&&"mousemove"===e.type?(an=e.screenX-ln.screenX,on=e.screenY-ln.screenY):on=an=0,ln=e),an)},movementY:function(e){return"movementY"in e?e.movementY:on}}),fn=sn(pn),mn=sn(L({},pn,{dataTransfer:0})),gn=sn(L({},hn,{relatedTarget:0})),yn=sn(L({},un,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=L({},un,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),xn=sn(bn),vn=sn(L({},un,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Nn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Sn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Nn[e])&&!!t[e]}function In(){return Sn}var Tn=L({},hn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:In,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Cn=sn(Tn),$n=sn(L({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),En=sn(L({},hn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:In})),Rn=sn(L({},un,{propertyName:0,elapsedTime:0,pseudoElement:0})),An=L({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),_n=sn(An),Fn=[9,13,27,32],Dn=c&&"CompositionEvent"in window,On=null;c&&"documentMode"in document&&(On=document.documentMode);var Mn=c&&"TextEvent"in window&&!On,Ln=c&&(!Dn||On&&8<On&&11>=On),zn=String.fromCharCode(32),Pn=!1;function Bn(e,t){switch(e){case"keyup":return-1!==Fn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Wn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Vn=!1;var Un={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Gn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Un[e.type]:"textarea"===t}function Hn(e,t,n,r){Te(r),0<(t=jr(t,"onChange")).length&&(n=new cn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var jn=null,qn=null;function Kn(e){zr(e,0)}function Xn(e){if(q(vs(e)))return e}function Yn(e,t){if("change"===e)return t}var Qn=!1;if(c){var Zn;if(c){var Jn="oninput"in document;if(!Jn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jn="function"===typeof er.oninput}Zn=Jn}else Zn=!1;Qn=Zn&&(!document.documentMode||9<document.documentMode)}function tr(){jn&&(jn.detachEvent("onpropertychange",nr),qn=jn=null)}function nr(e){if("value"===e.propertyName&&Xn(qn)){var t=[];Hn(t,qn,e,we(e)),Ae(Kn,t)}}function rr(e,t,n){"focusin"===e?(tr(),qn=n,(jn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function sr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xn(qn)}function ar(e,t){if("click"===e)return Xn(t)}function ir(e,t){if("input"===e||"change"===e)return Xn(t)}var or="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function lr(e,t){if(or(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var s=n[r];if(!h.call(t,s)||!or(e[s],t[s]))return!1}return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function hr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?hr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=K((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fr(e){var t=dr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&hr(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var s=n.textContent.length,a=Math.min(r.start,s);r=void 0===r.end?a:Math.min(r.end,s),!e.extend&&a>r&&(s=r,r=a,a=s),s=cr(n,a);var i=cr(n,r);s&&i&&(1!==e.rangeCount||e.anchorNode!==s.node||e.anchorOffset!==s.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(s.node,s.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mr=c&&"documentMode"in document&&11>=document.documentMode,gr=null,yr=null,br=null,xr=!1;function vr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;xr||null==gr||gr!==K(r)||("selectionStart"in(r=gr)&&pr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},br&&lr(br,r)||(br=r,0<(r=jr(yr,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}function wr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var kr={animationend:wr("Animation","AnimationEnd"),animationiteration:wr("Animation","AnimationIteration"),animationstart:wr("Animation","AnimationStart"),transitionend:wr("Transition","TransitionEnd")},Nr={},Sr={};function Ir(e){if(Nr[e])return Nr[e];if(!kr[e])return e;var t,n=kr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Sr)return Nr[e]=n[t];return e}c&&(Sr=document.createElement("div").style,"AnimationEvent"in window||(delete kr.animationend.animation,delete kr.animationiteration.animation,delete kr.animationstart.animation),"TransitionEvent"in window||delete kr.transitionend.transition);var Tr=Ir("animationend"),Cr=Ir("animationiteration"),$r=Ir("animationstart"),Er=Ir("transitionend"),Rr=new Map,Ar="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function _r(e,t){Rr.set(e,t),l(t,[e])}for(var Fr=0;Fr<Ar.length;Fr++){var Dr=Ar[Fr];_r(Dr.toLowerCase(),"on"+(Dr[0].toUpperCase()+Dr.slice(1)))}_r(Tr,"onAnimationEnd"),_r(Cr,"onAnimationIteration"),_r($r,"onAnimationStart"),_r("dblclick","onDoubleClick"),_r("focusin","onFocus"),_r("focusout","onBlur"),_r(Er,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Or="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Mr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Or));function Lr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,s,i,o,l,u){if(We.apply(this,arguments),Me){if(!Me)throw Error(a(198));var c=Le;Me=!1,Le=null,ze||(ze=!0,Pe=c)}}(r,t,void 0,e),e.currentTarget=null}function zr(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var r=e[n],s=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var i=r.length-1;0<=i;i--){var o=r[i],l=o.instance,u=o.currentTarget;if(o=o.listener,l!==a&&s.isPropagationStopped())break e;Lr(s,o,u),a=l}else for(i=0;i<r.length;i++){if(l=(o=r[i]).instance,u=o.currentTarget,o=o.listener,l!==a&&s.isPropagationStopped())break e;Lr(s,o,u),a=l}}}if(ze)throw e=Pe,ze=!1,Pe=null,e}function Pr(e,t){var n=t[ms];void 0===n&&(n=t[ms]=new Set);var r=e+"__bubble";n.has(r)||(Ur(t,e,2,!1),n.add(r))}function Br(e,t,n){var r=0;t&&(r|=4),Ur(n,e,r,t)}var Wr="_reactListening"+Math.random().toString(36).slice(2);function Vr(e){if(!e[Wr]){e[Wr]=!0,i.forEach((function(t){"selectionchange"!==t&&(Mr.has(t)||Br(t,!1,e),Br(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Wr]||(t[Wr]=!0,Br("selectionchange",!1,t))}}function Ur(e,t,n,r){switch(Yt(t)){case 1:var s=Ht;break;case 4:s=jt;break;default:s=qt}n=s.bind(null,t,n,e),s=void 0,!Fe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(s=!0),r?void 0!==s?e.addEventListener(t,n,{capture:!0,passive:s}):e.addEventListener(t,n,!0):void 0!==s?e.addEventListener(t,n,{passive:s}):e.addEventListener(t,n,!1)}function Gr(e,t,n,r,s){var a=r;if(0===(1&t)&&0===(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var o=r.stateNode.containerInfo;if(o===s||8===o.nodeType&&o.parentNode===s)break;if(4===i)for(i=r.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===s||8===l.nodeType&&l.parentNode===s))return;i=i.return}for(;null!==o;){if(null===(i=bs(o)))return;if(5===(l=i.tag)||6===l){r=a=i;continue e}o=o.parentNode}}r=r.return}Ae((function(){var r=a,s=we(n),i=[];e:{var o=Rr.get(e);if(void 0!==o){var l=cn,u=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":l=Cn;break;case"focusin":u="focus",l=gn;break;case"focusout":u="blur",l=gn;break;case"beforeblur":case"afterblur":l=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=En;break;case Tr:case Cr:case $r:l=yn;break;case Er:l=Rn;break;case"scroll":l=dn;break;case"wheel":l=_n;break;case"copy":case"cut":case"paste":l=xn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=$n}var c=0!==(4&t),h=!c&&"scroll"===e,d=c?null!==o?o+"Capture":null:o;c=[];for(var p,f=r;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&(null!=(m=_e(f,d))&&c.push(Hr(f,m,p)))),h)break;f=f.return}0<c.length&&(o=new l(o,u,null,n,s),i.push({event:o,listeners:c}))}}if(0===(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||n===ve||!(u=n.relatedTarget||n.fromElement)||!bs(u)&&!u[fs])&&(l||o)&&(o=s.window===s?s:(o=s.ownerDocument)?o.defaultView||o.parentWindow:window,l?(l=r,null!==(u=(u=n.relatedTarget||n.toElement)?bs(u):null)&&(u!==(h=Ve(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(l=null,u=r),l!==u)){if(c=fn,m="onMouseLeave",d="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(c=$n,m="onPointerLeave",d="onPointerEnter",f="pointer"),h=null==l?o:vs(l),p=null==u?o:vs(u),(o=new c(m,f+"leave",l,n,s)).target=h,o.relatedTarget=p,m=null,bs(s)===r&&((c=new c(d,f+"enter",u,n,s)).target=p,c.relatedTarget=h,m=c),h=m,l&&u)e:{for(d=u,f=0,p=c=l;p;p=qr(p))f++;for(p=0,m=d;m;m=qr(m))p++;for(;0<f-p;)c=qr(c),f--;for(;0<p-f;)d=qr(d),p--;for(;f--;){if(c===d||null!==d&&c===d.alternate)break e;c=qr(c),d=qr(d)}c=null}else c=null;null!==l&&Kr(i,o,l,c,!1),null!==u&&null!==h&&Kr(i,h,u,c,!0)}if("select"===(l=(o=r?vs(r):window).nodeName&&o.nodeName.toLowerCase())||"input"===l&&"file"===o.type)var g=Yn;else if(Gn(o))if(Qn)g=ir;else{g=sr;var y=rr}else(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(g=ar);switch(g&&(g=g(e,r))?Hn(i,g,n,s):(y&&y(e,o,r),"focusout"===e&&(y=o._wrapperState)&&y.controlled&&"number"===o.type&&ee(o,"number",o.value)),y=r?vs(r):window,e){case"focusin":(Gn(y)||"true"===y.contentEditable)&&(gr=y,yr=r,br=null);break;case"focusout":br=yr=gr=null;break;case"mousedown":xr=!0;break;case"contextmenu":case"mouseup":case"dragend":xr=!1,vr(i,n,s);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":vr(i,n,s)}var b;if(Dn)e:{switch(e){case"compositionstart":var x="onCompositionStart";break e;case"compositionend":x="onCompositionEnd";break e;case"compositionupdate":x="onCompositionUpdate";break e}x=void 0}else Vn?Bn(e,n)&&(x="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(x="onCompositionStart");x&&(Ln&&"ko"!==n.locale&&(Vn||"onCompositionStart"!==x?"onCompositionEnd"===x&&Vn&&(b=en()):(Zt="value"in(Qt=s)?Qt.value:Qt.textContent,Vn=!0)),0<(y=jr(r,x)).length&&(x=new vn(x,e,null,n,s),i.push({event:x,listeners:y}),b?x.data=b:null!==(b=Wn(n))&&(x.data=b))),(b=Mn?function(e,t){switch(e){case"compositionend":return Wn(t);case"keypress":return 32!==t.which?null:(Pn=!0,zn);case"textInput":return(e=t.data)===zn&&Pn?null:e;default:return null}}(e,n):function(e,t){if(Vn)return"compositionend"===e||!Dn&&Bn(e,t)?(e=en(),Jt=Zt=Qt=null,Vn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ln&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(r=jr(r,"onBeforeInput")).length&&(s=new vn("onBeforeInput","beforeinput",null,n,s),i.push({event:s,listeners:r}),s.data=b))}zr(i,t)}))}function Hr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function jr(e,t){for(var n=t+"Capture",r=[];null!==e;){var s=e,a=s.stateNode;5===s.tag&&null!==a&&(s=a,null!=(a=_e(e,n))&&r.unshift(Hr(e,a,s)),null!=(a=_e(e,t))&&r.push(Hr(e,a,s))),e=e.return}return r}function qr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Kr(e,t,n,r,s){for(var a=t._reactName,i=[];null!==n&&n!==r;){var o=n,l=o.alternate,u=o.stateNode;if(null!==l&&l===r)break;5===o.tag&&null!==u&&(o=u,s?null!=(l=_e(n,a))&&i.unshift(Hr(n,l,o)):s||null!=(l=_e(n,a))&&i.push(Hr(n,l,o))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var Xr=/\r\n?/g,Yr=/\u0000|\uFFFD/g;function Qr(e){return("string"===typeof e?e:""+e).replace(Xr,"\n").replace(Yr,"")}function Zr(e,t,n){if(t=Qr(t),Qr(e)!==t&&n)throw Error(a(425))}function Jr(){}var es=null,ts=null;function ns(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var rs="function"===typeof setTimeout?setTimeout:void 0,ss="function"===typeof clearTimeout?clearTimeout:void 0,as="function"===typeof Promise?Promise:void 0,is="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof as?function(e){return as.resolve(null).then(e).catch(os)}:rs;function os(e){setTimeout((function(){throw e}))}function ls(e,t){var n=t,r=0;do{var s=n.nextSibling;if(e.removeChild(n),s&&8===s.nodeType)if("/$"===(n=s.data)){if(0===r)return e.removeChild(s),void Vt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=s}while(n);Vt(t)}function us(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function cs(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var hs=Math.random().toString(36).slice(2),ds="__reactFiber$"+hs,ps="__reactProps$"+hs,fs="__reactContainer$"+hs,ms="__reactEvents$"+hs,gs="__reactListeners$"+hs,ys="__reactHandles$"+hs;function bs(e){var t=e[ds];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fs]||n[ds]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=cs(e);null!==e;){if(n=e[ds])return n;e=cs(e)}return t}n=(e=n).parentNode}return null}function xs(e){return!(e=e[ds]||e[fs])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function vs(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function ws(e){return e[ps]||null}var ks=[],Ns=-1;function Ss(e){return{current:e}}function Is(e){0>Ns||(e.current=ks[Ns],ks[Ns]=null,Ns--)}function Ts(e,t){Ns++,ks[Ns]=e.current,e.current=t}var Cs={},$s=Ss(Cs),Es=Ss(!1),Rs=Cs;function As(e,t){var n=e.type.contextTypes;if(!n)return Cs;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var s,a={};for(s in n)a[s]=t[s];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function _s(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Fs(){Is(Es),Is($s)}function Ds(e,t,n){if($s.current!==Cs)throw Error(a(168));Ts($s,t),Ts(Es,n)}function Os(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!==typeof r.getChildContext)return n;for(var s in r=r.getChildContext())if(!(s in t))throw Error(a(108,U(e)||"Unknown",s));return L({},n,r)}function Ms(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Cs,Rs=$s.current,Ts($s,e),Ts(Es,Es.current),!0}function Ls(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=Os(e,t,Rs),r.__reactInternalMemoizedMergedChildContext=e,Is(Es),Is($s),Ts($s,e)):Is(Es),Ts(Es,n)}var zs=null,Ps=!1,Bs=!1;function Ws(e){null===zs?zs=[e]:zs.push(e)}function Vs(){if(!Bs&&null!==zs){Bs=!0;var e=0,t=xt;try{var n=zs;for(xt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}zs=null,Ps=!1}catch(s){throw null!==zs&&(zs=zs.slice(e+1)),qe(Je,Vs),s}finally{xt=t,Bs=!1}}return null}var Us=[],Gs=0,Hs=null,js=0,qs=[],Ks=0,Xs=null,Ys=1,Qs="";function Zs(e,t){Us[Gs++]=js,Us[Gs++]=Hs,Hs=e,js=t}function Js(e,t,n){qs[Ks++]=Ys,qs[Ks++]=Qs,qs[Ks++]=Xs,Xs=e;var r=Ys;e=Qs;var s=32-it(r)-1;r&=~(1<<s),n+=1;var a=32-it(t)+s;if(30<a){var i=s-s%5;a=(r&(1<<i)-1).toString(32),r>>=i,s-=i,Ys=1<<32-it(t)+s|n<<s|r,Qs=a+e}else Ys=1<<a|n<<s|r,Qs=e}function ea(e){null!==e.return&&(Zs(e,1),Js(e,1,0))}function ta(e){for(;e===Hs;)Hs=Us[--Gs],Us[Gs]=null,js=Us[--Gs],Us[Gs]=null;for(;e===Xs;)Xs=qs[--Ks],qs[Ks]=null,Qs=qs[--Ks],qs[Ks]=null,Ys=qs[--Ks],qs[Ks]=null}var na=null,ra=null,sa=!1,aa=null;function ia(e,t){var n=Au(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function oa(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,na=e,ra=us(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,na=e,ra=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Xs?{id:Ys,overflow:Qs}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Au(18,null,null,0)).stateNode=t,n.return=e,e.child=n,na=e,ra=null,!0);default:return!1}}function la(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ua(e){if(sa){var t=ra;if(t){var n=t;if(!oa(e,t)){if(la(e))throw Error(a(418));t=us(n.nextSibling);var r=na;t&&oa(e,t)?ia(r,n):(e.flags=-4097&e.flags|2,sa=!1,na=e)}}else{if(la(e))throw Error(a(418));e.flags=-4097&e.flags|2,sa=!1,na=e}}}function ca(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;na=e}function ha(e){if(e!==na)return!1;if(!sa)return ca(e),sa=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!ns(e.type,e.memoizedProps)),t&&(t=ra)){if(la(e))throw da(),Error(a(418));for(;t;)ia(e,t),t=us(t.nextSibling)}if(ca(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ra=us(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ra=null}}else ra=na?us(e.stateNode.nextSibling):null;return!0}function da(){for(var e=ra;e;)e=us(e.nextSibling)}function pa(){ra=na=null,sa=!1}function fa(e){null===aa?aa=[e]:aa.push(e)}var ma=v.ReactCurrentBatchConfig;function ga(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var s=r,i=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=s.refs;null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!==typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function ya(e,t){throw e=Object.prototype.toString.call(t),Error(a(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function ba(e){return(0,e._init)(e._payload)}function xa(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function s(e,t){return(e=Fu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Lu(n,e.mode,r)).return=e,t):((t=s(t,n)).return=e,t)}function u(e,t,n,r){var a=n.type;return a===N?h(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===a||"object"===typeof a&&null!==a&&a.$$typeof===_&&ba(a)===t.type)?((r=s(t,n.props)).ref=ga(e,t,n),r.return=e,r):((r=Du(n.type,n.key,n.props,null,e.mode,r)).ref=ga(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=zu(n,e.mode,r)).return=e,t):((t=s(t,n.children||[])).return=e,t)}function h(e,t,n,r,a){return null===t||7!==t.tag?((t=Ou(n,e.mode,r,a)).return=e,t):((t=s(t,n)).return=e,t)}function d(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Lu(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Du(t.type,t.key,t.props,null,e.mode,n)).ref=ga(e,null,t),n.return=e,n;case k:return(t=zu(t,e.mode,n)).return=e,t;case _:return d(e,(0,t._init)(t._payload),n)}if(te(t)||O(t))return(t=Ou(t,e.mode,n,null)).return=e,t;ya(e,t)}return null}function p(e,t,n,r){var s=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==s?null:l(e,t,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===s?u(e,t,n,r):null;case k:return n.key===s?c(e,t,n,r):null;case _:return p(e,t,(s=n._init)(n._payload),r)}if(te(n)||O(n))return null!==s?null:h(e,t,n,r,null);ya(e,n)}return null}function f(e,t,n,r,s){if("string"===typeof r&&""!==r||"number"===typeof r)return l(t,e=e.get(n)||null,""+r,s);if("object"===typeof r&&null!==r){switch(r.$$typeof){case w:return u(t,e=e.get(null===r.key?n:r.key)||null,r,s);case k:return c(t,e=e.get(null===r.key?n:r.key)||null,r,s);case _:return f(e,t,n,(0,r._init)(r._payload),s)}if(te(r)||O(r))return h(t,e=e.get(n)||null,r,s,null);ya(t,r)}return null}function m(s,a,o,l){for(var u=null,c=null,h=a,m=a=0,g=null;null!==h&&m<o.length;m++){h.index>m?(g=h,h=null):g=h.sibling;var y=p(s,h,o[m],l);if(null===y){null===h&&(h=g);break}e&&h&&null===y.alternate&&t(s,h),a=i(y,a,m),null===c?u=y:c.sibling=y,c=y,h=g}if(m===o.length)return n(s,h),sa&&Zs(s,m),u;if(null===h){for(;m<o.length;m++)null!==(h=d(s,o[m],l))&&(a=i(h,a,m),null===c?u=h:c.sibling=h,c=h);return sa&&Zs(s,m),u}for(h=r(s,h);m<o.length;m++)null!==(g=f(h,s,m,o[m],l))&&(e&&null!==g.alternate&&h.delete(null===g.key?m:g.key),a=i(g,a,m),null===c?u=g:c.sibling=g,c=g);return e&&h.forEach((function(e){return t(s,e)})),sa&&Zs(s,m),u}function g(s,o,l,u){var c=O(l);if("function"!==typeof c)throw Error(a(150));if(null==(l=c.call(l)))throw Error(a(151));for(var h=c=null,m=o,g=o=0,y=null,b=l.next();null!==m&&!b.done;g++,b=l.next()){m.index>g?(y=m,m=null):y=m.sibling;var x=p(s,m,b.value,u);if(null===x){null===m&&(m=y);break}e&&m&&null===x.alternate&&t(s,m),o=i(x,o,g),null===h?c=x:h.sibling=x,h=x,m=y}if(b.done)return n(s,m),sa&&Zs(s,g),c;if(null===m){for(;!b.done;g++,b=l.next())null!==(b=d(s,b.value,u))&&(o=i(b,o,g),null===h?c=b:h.sibling=b,h=b);return sa&&Zs(s,g),c}for(m=r(s,m);!b.done;g++,b=l.next())null!==(b=f(m,s,g,b.value,u))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),o=i(b,o,g),null===h?c=b:h.sibling=b,h=b);return e&&m.forEach((function(e){return t(s,e)})),sa&&Zs(s,g),c}return function e(r,a,i,l){if("object"===typeof i&&null!==i&&i.type===N&&null===i.key&&(i=i.props.children),"object"===typeof i&&null!==i){switch(i.$$typeof){case w:e:{for(var u=i.key,c=a;null!==c;){if(c.key===u){if((u=i.type)===N){if(7===c.tag){n(r,c.sibling),(a=s(c,i.props.children)).return=r,r=a;break e}}else if(c.elementType===u||"object"===typeof u&&null!==u&&u.$$typeof===_&&ba(u)===c.type){n(r,c.sibling),(a=s(c,i.props)).ref=ga(r,c,i),a.return=r,r=a;break e}n(r,c);break}t(r,c),c=c.sibling}i.type===N?((a=Ou(i.props.children,r.mode,l,i.key)).return=r,r=a):((l=Du(i.type,i.key,i.props,null,r.mode,l)).ref=ga(r,a,i),l.return=r,r=l)}return o(r);case k:e:{for(c=i.key;null!==a;){if(a.key===c){if(4===a.tag&&a.stateNode.containerInfo===i.containerInfo&&a.stateNode.implementation===i.implementation){n(r,a.sibling),(a=s(a,i.children||[])).return=r,r=a;break e}n(r,a);break}t(r,a),a=a.sibling}(a=zu(i,r.mode,l)).return=r,r=a}return o(r);case _:return e(r,a,(c=i._init)(i._payload),l)}if(te(i))return m(r,a,i,l);if(O(i))return g(r,a,i,l);ya(r,i)}return"string"===typeof i&&""!==i||"number"===typeof i?(i=""+i,null!==a&&6===a.tag?(n(r,a.sibling),(a=s(a,i)).return=r,r=a):(n(r,a),(a=Lu(i,r.mode,l)).return=r,r=a),o(r)):n(r,a)}}var va=xa(!0),wa=xa(!1),ka=Ss(null),Na=null,Sa=null,Ia=null;function Ta(){Ia=Sa=Na=null}function Ca(e){var t=ka.current;Is(ka),e._currentValue=t}function $a(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Ea(e,t){Na=e,Ia=Sa=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(xo=!0),e.firstContext=null)}function Ra(e){var t=e._currentValue;if(Ia!==e)if(e={context:e,memoizedValue:t,next:null},null===Sa){if(null===Na)throw Error(a(308));Sa=e,Na.dependencies={lanes:0,firstContext:e}}else Sa=Sa.next=e;return t}var Aa=null;function _a(e){null===Aa?Aa=[e]:Aa.push(e)}function Fa(e,t,n,r){var s=t.interleaved;return null===s?(n.next=n,_a(t)):(n.next=s.next,s.next=n),t.interleaved=n,Da(e,r)}function Da(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Oa=!1;function Ma(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function La(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function za(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Pa(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!==(2&$l)){var s=r.pending;return null===s?t.next=t:(t.next=s.next,s.next=t),r.pending=t,Da(e,n)}return null===(s=r.interleaved)?(t.next=t,_a(r)):(t.next=s.next,s.next=t),r.interleaved=t,Da(e,n)}function Ba(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Wa(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var s=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?s=a=i:a=a.next=i,n=n.next}while(null!==n);null===a?s=a=t:a=a.next=t}else s=a=t;return n={baseState:r.baseState,firstBaseUpdate:s,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Va(e,t,n,r){var s=e.updateQueue;Oa=!1;var a=s.firstBaseUpdate,i=s.lastBaseUpdate,o=s.shared.pending;if(null!==o){s.shared.pending=null;var l=o,u=l.next;l.next=null,null===i?a=u:i.next=u,i=l;var c=e.alternate;null!==c&&((o=(c=c.updateQueue).lastBaseUpdate)!==i&&(null===o?c.firstBaseUpdate=u:o.next=u,c.lastBaseUpdate=l))}if(null!==a){var h=s.baseState;for(i=0,c=u=l=null,o=a;;){var d=o.lane,p=o.eventTime;if((r&d)===d){null!==c&&(c=c.next={eventTime:p,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var f=e,m=o;switch(d=t,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){h=f.call(p,h,d);break e}h=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(d="function"===typeof(f=m.payload)?f.call(p,h,d):f)||void 0===d)break e;h=L({},h,d);break e;case 2:Oa=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(d=s.effects)?s.effects=[o]:d.push(o))}else p={eventTime:p,lane:d,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===c?(u=c=p,l=h):c=c.next=p,i|=d;if(null===(o=o.next)){if(null===(o=s.shared.pending))break;o=(d=o).next,d.next=null,s.lastBaseUpdate=d,s.shared.pending=null}}if(null===c&&(l=h),s.baseState=l,s.firstBaseUpdate=u,s.lastBaseUpdate=c,null!==(t=s.shared.interleaved)){s=t;do{i|=s.lane,s=s.next}while(s!==t)}else null===a&&(s.shared.lanes=0);Ml|=i,e.lanes=i,e.memoizedState=h}}function Ua(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],s=r.callback;if(null!==s){if(r.callback=null,r=n,"function"!==typeof s)throw Error(a(191,s));s.call(r)}}}var Ga={},Ha=Ss(Ga),ja=Ss(Ga),qa=Ss(Ga);function Ka(e){if(e===Ga)throw Error(a(174));return e}function Xa(e,t){switch(Ts(qa,t),Ts(ja,e),Ts(Ha,Ga),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Is(Ha),Ts(Ha,t)}function Ya(){Is(Ha),Is(ja),Is(qa)}function Qa(e){Ka(qa.current);var t=Ka(Ha.current),n=le(t,e.type);t!==n&&(Ts(ja,e),Ts(Ha,n))}function Za(e){ja.current===e&&(Is(Ha),Is(ja))}var Ja=Ss(0);function ei(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ti=[];function ni(){for(var e=0;e<ti.length;e++)ti[e]._workInProgressVersionPrimary=null;ti.length=0}var ri=v.ReactCurrentDispatcher,si=v.ReactCurrentBatchConfig,ai=0,ii=null,oi=null,li=null,ui=!1,ci=!1,hi=0,di=0;function pi(){throw Error(a(321))}function fi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!or(e[n],t[n]))return!1;return!0}function mi(e,t,n,r,s,i){if(ai=i,ii=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ri.current=null===e||null===e.memoizedState?Zi:Ji,e=n(r,s),ci){i=0;do{if(ci=!1,hi=0,25<=i)throw Error(a(301));i+=1,li=oi=null,t.updateQueue=null,ri.current=eo,e=n(r,s)}while(ci)}if(ri.current=Qi,t=null!==oi&&null!==oi.next,ai=0,li=oi=ii=null,ui=!1,t)throw Error(a(300));return e}function gi(){var e=0!==hi;return hi=0,e}function yi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===li?ii.memoizedState=li=e:li=li.next=e,li}function bi(){if(null===oi){var e=ii.alternate;e=null!==e?e.memoizedState:null}else e=oi.next;var t=null===li?ii.memoizedState:li.next;if(null!==t)li=t,oi=e;else{if(null===e)throw Error(a(310));e={memoizedState:(oi=e).memoizedState,baseState:oi.baseState,baseQueue:oi.baseQueue,queue:oi.queue,next:null},null===li?ii.memoizedState=li=e:li=li.next=e}return li}function xi(e,t){return"function"===typeof t?t(e):t}function vi(e){var t=bi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=oi,s=r.baseQueue,i=n.pending;if(null!==i){if(null!==s){var o=s.next;s.next=i.next,i.next=o}r.baseQueue=s=i,n.pending=null}if(null!==s){i=s.next,r=r.baseState;var l=o=null,u=null,c=i;do{var h=c.lane;if((ai&h)===h)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var d={lane:h,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(l=u=d,o=r):u=u.next=d,ii.lanes|=h,Ml|=h}c=c.next}while(null!==c&&c!==i);null===u?o=r:u.next=l,or(r,t.memoizedState)||(xo=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}if(null!==(e=n.interleaved)){s=e;do{i=s.lane,ii.lanes|=i,Ml|=i,s=s.next}while(s!==e)}else null===s&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function wi(e){var t=bi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,s=n.pending,i=t.memoizedState;if(null!==s){n.pending=null;var o=s=s.next;do{i=e(i,o.action),o=o.next}while(o!==s);or(i,t.memoizedState)||(xo=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function ki(){}function Ni(e,t){var n=ii,r=bi(),s=t(),i=!or(r.memoizedState,s);if(i&&(r.memoizedState=s,xo=!0),r=r.queue,Oi(Ti.bind(null,n,r,e),[e]),r.getSnapshot!==t||i||null!==li&&1&li.memoizedState.tag){if(n.flags|=2048,Ri(9,Ii.bind(null,n,r,s,t),void 0,null),null===El)throw Error(a(349));0!==(30&ai)||Si(n,t,s)}return s}function Si(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=ii.updateQueue)?(t={lastEffect:null,stores:null},ii.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ii(e,t,n,r){t.value=n,t.getSnapshot=r,Ci(t)&&$i(e)}function Ti(e,t,n){return n((function(){Ci(t)&&$i(e)}))}function Ci(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!or(e,n)}catch(r){return!0}}function $i(e){var t=Da(e,1);null!==t&&nu(t,e,1,-1)}function Ei(e){var t=yi();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:xi,lastRenderedState:e},t.queue=e,e=e.dispatch=qi.bind(null,ii,e),[t.memoizedState,e]}function Ri(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=ii.updateQueue)?(t={lastEffect:null,stores:null},ii.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Ai(){return bi().memoizedState}function _i(e,t,n,r){var s=yi();ii.flags|=e,s.memoizedState=Ri(1|t,n,void 0,void 0===r?null:r)}function Fi(e,t,n,r){var s=bi();r=void 0===r?null:r;var a=void 0;if(null!==oi){var i=oi.memoizedState;if(a=i.destroy,null!==r&&fi(r,i.deps))return void(s.memoizedState=Ri(t,n,a,r))}ii.flags|=e,s.memoizedState=Ri(1|t,n,a,r)}function Di(e,t){return _i(8390656,8,e,t)}function Oi(e,t){return Fi(2048,8,e,t)}function Mi(e,t){return Fi(4,2,e,t)}function Li(e,t){return Fi(4,4,e,t)}function zi(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Pi(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Fi(4,4,zi.bind(null,t,e),n)}function Bi(){}function Wi(e,t){var n=bi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&fi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Vi(e,t){var n=bi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&fi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Ui(e,t,n){return 0===(21&ai)?(e.baseState&&(e.baseState=!1,xo=!0),e.memoizedState=n):(or(n,t)||(n=mt(),ii.lanes|=n,Ml|=n,e.baseState=!0),t)}function Gi(e,t){var n=xt;xt=0!==n&&4>n?n:4,e(!0);var r=si.transition;si.transition={};try{e(!1),t()}finally{xt=n,si.transition=r}}function Hi(){return bi().memoizedState}function ji(e,t,n){var r=tu(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},Ki(e))Xi(t,n);else if(null!==(n=Fa(e,t,n,r))){nu(n,e,r,eu()),Yi(n,t,r)}}function qi(e,t,n){var r=tu(e),s={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(Ki(e))Xi(t,s);else{var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var i=t.lastRenderedState,o=a(i,n);if(s.hasEagerState=!0,s.eagerState=o,or(o,i)){var l=t.interleaved;return null===l?(s.next=s,_a(t)):(s.next=l.next,l.next=s),void(t.interleaved=s)}}catch(u){}null!==(n=Fa(e,t,s,r))&&(nu(n,e,r,s=eu()),Yi(n,t,r))}}function Ki(e){var t=e.alternate;return e===ii||null!==t&&t===ii}function Xi(e,t){ci=ui=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Yi(e,t,n){if(0!==(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}var Qi={readContext:Ra,useCallback:pi,useContext:pi,useEffect:pi,useImperativeHandle:pi,useInsertionEffect:pi,useLayoutEffect:pi,useMemo:pi,useReducer:pi,useRef:pi,useState:pi,useDebugValue:pi,useDeferredValue:pi,useTransition:pi,useMutableSource:pi,useSyncExternalStore:pi,useId:pi,unstable_isNewReconciler:!1},Zi={readContext:Ra,useCallback:function(e,t){return yi().memoizedState=[e,void 0===t?null:t],e},useContext:Ra,useEffect:Di,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,_i(4194308,4,zi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return _i(4194308,4,e,t)},useInsertionEffect:function(e,t){return _i(4,2,e,t)},useMemo:function(e,t){var n=yi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=yi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=ji.bind(null,ii,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},yi().memoizedState=e},useState:Ei,useDebugValue:Bi,useDeferredValue:function(e){return yi().memoizedState=e},useTransition:function(){var e=Ei(!1),t=e[0];return e=Gi.bind(null,e[1]),yi().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=ii,s=yi();if(sa){if(void 0===n)throw Error(a(407));n=n()}else{if(n=t(),null===El)throw Error(a(349));0!==(30&ai)||Si(r,t,n)}s.memoizedState=n;var i={value:n,getSnapshot:t};return s.queue=i,Di(Ti.bind(null,r,i,e),[e]),r.flags|=2048,Ri(9,Ii.bind(null,r,i,n,t),void 0,null),n},useId:function(){var e=yi(),t=El.identifierPrefix;if(sa){var n=Qs;t=":"+t+"R"+(n=(Ys&~(1<<32-it(Ys)-1)).toString(32)+n),0<(n=hi++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=di++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},Ji={readContext:Ra,useCallback:Wi,useContext:Ra,useEffect:Oi,useImperativeHandle:Pi,useInsertionEffect:Mi,useLayoutEffect:Li,useMemo:Vi,useReducer:vi,useRef:Ai,useState:function(){return vi(xi)},useDebugValue:Bi,useDeferredValue:function(e){return Ui(bi(),oi.memoizedState,e)},useTransition:function(){return[vi(xi)[0],bi().memoizedState]},useMutableSource:ki,useSyncExternalStore:Ni,useId:Hi,unstable_isNewReconciler:!1},eo={readContext:Ra,useCallback:Wi,useContext:Ra,useEffect:Oi,useImperativeHandle:Pi,useInsertionEffect:Mi,useLayoutEffect:Li,useMemo:Vi,useReducer:wi,useRef:Ai,useState:function(){return wi(xi)},useDebugValue:Bi,useDeferredValue:function(e){var t=bi();return null===oi?t.memoizedState=e:Ui(t,oi.memoizedState,e)},useTransition:function(){return[wi(xi)[0],bi().memoizedState]},useMutableSource:ki,useSyncExternalStore:Ni,useId:Hi,unstable_isNewReconciler:!1};function to(e,t){if(e&&e.defaultProps){for(var n in t=L({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function no(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:L({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ro={isMounted:function(e){return!!(e=e._reactInternals)&&Ve(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=eu(),s=tu(e),a=za(r,s);a.payload=t,void 0!==n&&null!==n&&(a.callback=n),null!==(t=Pa(e,a,s))&&(nu(t,e,s,r),Ba(t,e,s))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=eu(),s=tu(e),a=za(r,s);a.tag=1,a.payload=t,void 0!==n&&null!==n&&(a.callback=n),null!==(t=Pa(e,a,s))&&(nu(t,e,s,r),Ba(t,e,s))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=eu(),r=tu(e),s=za(n,r);s.tag=2,void 0!==t&&null!==t&&(s.callback=t),null!==(t=Pa(e,s,r))&&(nu(t,e,r,n),Ba(t,e,r))}};function so(e,t,n,r,s,a,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!lr(n,r)||!lr(s,a))}function ao(e,t,n){var r=!1,s=Cs,a=t.contextType;return"object"===typeof a&&null!==a?a=Ra(a):(s=_s(t)?Rs:$s.current,a=(r=null!==(r=t.contextTypes)&&void 0!==r)?As(e,s):Cs),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ro,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=s,e.__reactInternalMemoizedMaskedChildContext=a),t}function io(e,t,n,r){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ro.enqueueReplaceState(t,t.state,null)}function oo(e,t,n,r){var s=e.stateNode;s.props=n,s.state=e.memoizedState,s.refs={},Ma(e);var a=t.contextType;"object"===typeof a&&null!==a?s.context=Ra(a):(a=_s(t)?Rs:$s.current,s.context=As(e,a)),s.state=e.memoizedState,"function"===typeof(a=t.getDerivedStateFromProps)&&(no(e,t,a,n),s.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof s.getSnapshotBeforeUpdate||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||(t=s.state,"function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount(),t!==s.state&&ro.enqueueReplaceState(s,s.state,null),Va(e,n,s,r),s.state=e.memoizedState),"function"===typeof s.componentDidMount&&(e.flags|=4194308)}function lo(e,t){try{var n="",r=t;do{n+=W(r),r=r.return}while(r);var s=n}catch(a){s="\nError generating stack: "+a.message+"\n"+a.stack}return{value:e,source:t,stack:s,digest:null}}function uo(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function co(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var ho="function"===typeof WeakMap?WeakMap:Map;function po(e,t,n){(n=za(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Gl||(Gl=!0,Hl=r),co(0,t)},n}function fo(e,t,n){(n=za(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var s=t.value;n.payload=function(){return r(s)},n.callback=function(){co(0,t)}}var a=e.stateNode;return null!==a&&"function"===typeof a.componentDidCatch&&(n.callback=function(){co(0,t),"function"!==typeof r&&(null===jl?jl=new Set([this]):jl.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function mo(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new ho;var s=new Set;r.set(t,s)}else void 0===(s=r.get(t))&&(s=new Set,r.set(t,s));s.has(n)||(s.add(n),e=Iu.bind(null,e,t,n),t.then(e,e))}function go(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yo(e,t,n,r,s){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=za(-1,1)).tag=2,Pa(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=s,e)}var bo=v.ReactCurrentOwner,xo=!1;function vo(e,t,n,r){t.child=null===e?wa(t,null,n,r):va(t,e.child,n,r)}function wo(e,t,n,r,s){n=n.render;var a=t.ref;return Ea(t,s),r=mi(e,t,n,r,a,s),n=gi(),null===e||xo?(sa&&n&&ea(t),t.flags|=1,vo(e,t,r,s),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,Go(e,t,s))}function ko(e,t,n,r,s){if(null===e){var a=n.type;return"function"!==typeof a||_u(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Du(n.type,null,r,t,t.mode,s)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,No(e,t,a,r,s))}if(a=e.child,0===(e.lanes&s)){var i=a.memoizedProps;if((n=null!==(n=n.compare)?n:lr)(i,r)&&e.ref===t.ref)return Go(e,t,s)}return t.flags|=1,(e=Fu(a,r)).ref=t.ref,e.return=t,t.child=e}function No(e,t,n,r,s){if(null!==e){var a=e.memoizedProps;if(lr(a,r)&&e.ref===t.ref){if(xo=!1,t.pendingProps=r=a,0===(e.lanes&s))return t.lanes=e.lanes,Go(e,t,s);0!==(131072&e.flags)&&(xo=!0)}}return To(e,t,n,r,s)}function So(e,t,n){var r=t.pendingProps,s=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ts(Fl,_l),_l|=n;else{if(0===(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Ts(Fl,_l),_l|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==a?a.baseLanes:n,Ts(Fl,_l),_l|=r}else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,Ts(Fl,_l),_l|=r;return vo(e,t,s,n),t.child}function Io(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function To(e,t,n,r,s){var a=_s(n)?Rs:$s.current;return a=As(t,a),Ea(t,s),n=mi(e,t,n,r,a,s),r=gi(),null===e||xo?(sa&&r&&ea(t),t.flags|=1,vo(e,t,n,s),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,Go(e,t,s))}function Co(e,t,n,r,s){if(_s(n)){var a=!0;Ms(t)}else a=!1;if(Ea(t,s),null===t.stateNode)Uo(e,t),ao(t,n,r),oo(t,n,r,s),r=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var l=i.context,u=n.contextType;"object"===typeof u&&null!==u?u=Ra(u):u=As(t,u=_s(n)?Rs:$s.current);var c=n.getDerivedStateFromProps,h="function"===typeof c||"function"===typeof i.getSnapshotBeforeUpdate;h||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(o!==r||l!==u)&&io(t,i,r,u),Oa=!1;var d=t.memoizedState;i.state=d,Va(t,r,i,s),l=t.memoizedState,o!==r||d!==l||Es.current||Oa?("function"===typeof c&&(no(t,n,c,r),l=t.memoizedState),(o=Oa||so(t,n,o,r,d,l,u))?(h||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.flags|=4194308)):("function"===typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=l),i.props=r,i.state=l,i.context=u,r=o):("function"===typeof i.componentDidMount&&(t.flags|=4194308),r=!1)}else{i=t.stateNode,La(e,t),o=t.memoizedProps,u=t.type===t.elementType?o:to(t.type,o),i.props=u,h=t.pendingProps,d=i.context,"object"===typeof(l=n.contextType)&&null!==l?l=Ra(l):l=As(t,l=_s(n)?Rs:$s.current);var p=n.getDerivedStateFromProps;(c="function"===typeof p||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(o!==h||d!==l)&&io(t,i,r,l),Oa=!1,d=t.memoizedState,i.state=d,Va(t,r,i,s);var f=t.memoizedState;o!==h||d!==f||Es.current||Oa?("function"===typeof p&&(no(t,n,p,r),f=t.memoizedState),(u=Oa||so(t,n,u,r,d,f,l)||!1)?(c||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(r,f,l),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,f,l)),"function"===typeof i.componentDidUpdate&&(t.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof i.componentDidUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=f),i.props=r,i.state=f,i.context=l,r=u):("function"!==typeof i.componentDidUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),r=!1)}return $o(e,t,n,r,a,s)}function $o(e,t,n,r,s,a){Io(e,t);var i=0!==(128&t.flags);if(!r&&!i)return s&&Ls(t,n,!1),Go(e,t,a);r=t.stateNode,bo.current=t;var o=i&&"function"!==typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=va(t,e.child,null,a),t.child=va(t,null,o,a)):vo(e,t,o,a),t.memoizedState=r.state,s&&Ls(t,n,!0),t.child}function Eo(e){var t=e.stateNode;t.pendingContext?Ds(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ds(0,t.context,!1),Xa(e,t.containerInfo)}function Ro(e,t,n,r,s){return pa(),fa(s),t.flags|=256,vo(e,t,n,r),t.child}var Ao,_o,Fo,Do,Oo={dehydrated:null,treeContext:null,retryLane:0};function Mo(e){return{baseLanes:e,cachePool:null,transitions:null}}function Lo(e,t,n){var r,s=t.pendingProps,i=Ja.current,o=!1,l=0!==(128&t.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&0!==(2&i)),r?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),Ts(Ja,1&i),null===e)return ua(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=s.children,e=s.fallback,o?(s=t.mode,o=t.child,l={mode:"hidden",children:l},0===(1&s)&&null!==o?(o.childLanes=0,o.pendingProps=l):o=Mu(l,s,0,null),e=Ou(e,s,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Mo(n),t.memoizedState=Oo,e):zo(t,l));if(null!==(i=e.memoizedState)&&null!==(r=i.dehydrated))return function(e,t,n,r,s,i,o){if(n)return 256&t.flags?(t.flags&=-257,Po(e,t,o,r=uo(Error(a(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(i=r.fallback,s=t.mode,r=Mu({mode:"visible",children:r.children},s,0,null),(i=Ou(i,s,o,null)).flags|=2,r.return=t,i.return=t,r.sibling=i,t.child=r,0!==(1&t.mode)&&va(t,e.child,null,o),t.child.memoizedState=Mo(o),t.memoizedState=Oo,i);if(0===(1&t.mode))return Po(e,t,o,null);if("$!"===s.data){if(r=s.nextSibling&&s.nextSibling.dataset)var l=r.dgst;return r=l,Po(e,t,o,r=uo(i=Error(a(419)),r,void 0))}if(l=0!==(o&e.childLanes),xo||l){if(null!==(r=El)){switch(o&-o){case 4:s=2;break;case 16:s=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:s=32;break;case 536870912:s=268435456;break;default:s=0}0!==(s=0!==(s&(r.suspendedLanes|o))?0:s)&&s!==i.retryLane&&(i.retryLane=s,Da(e,s),nu(r,e,s,-1))}return mu(),Po(e,t,o,r=uo(Error(a(421))))}return"$?"===s.data?(t.flags|=128,t.child=e.child,t=Cu.bind(null,e),s._reactRetry=t,null):(e=i.treeContext,ra=us(s.nextSibling),na=t,sa=!0,aa=null,null!==e&&(qs[Ks++]=Ys,qs[Ks++]=Qs,qs[Ks++]=Xs,Ys=e.id,Qs=e.overflow,Xs=t),t=zo(t,r.children),t.flags|=4096,t)}(e,t,l,s,r,i,n);if(o){o=s.fallback,l=t.mode,r=(i=e.child).sibling;var u={mode:"hidden",children:s.children};return 0===(1&l)&&t.child!==i?((s=t.child).childLanes=0,s.pendingProps=u,t.deletions=null):(s=Fu(i,u)).subtreeFlags=14680064&i.subtreeFlags,null!==r?o=Fu(r,o):(o=Ou(o,l,n,null)).flags|=2,o.return=t,s.return=t,s.sibling=o,t.child=s,s=o,o=t.child,l=null===(l=e.child.memoizedState)?Mo(n):{baseLanes:l.baseLanes|n,cachePool:null,transitions:l.transitions},o.memoizedState=l,o.childLanes=e.childLanes&~n,t.memoizedState=Oo,s}return e=(o=e.child).sibling,s=Fu(o,{mode:"visible",children:s.children}),0===(1&t.mode)&&(s.lanes=n),s.return=t,s.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=s,t.memoizedState=null,s}function zo(e,t){return(t=Mu({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Po(e,t,n,r){return null!==r&&fa(r),va(t,e.child,null,n),(e=zo(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Bo(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),$a(e.return,t,n)}function Wo(e,t,n,r,s){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:s}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailMode=s)}function Vo(e,t,n){var r=t.pendingProps,s=r.revealOrder,a=r.tail;if(vo(e,t,r.children,n),0!==(2&(r=Ja.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bo(e,n,t);else if(19===e.tag)Bo(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Ts(Ja,r),0===(1&t.mode))t.memoizedState=null;else switch(s){case"forwards":for(n=t.child,s=null;null!==n;)null!==(e=n.alternate)&&null===ei(e)&&(s=n),n=n.sibling;null===(n=s)?(s=t.child,t.child=null):(s=n.sibling,n.sibling=null),Wo(t,!1,s,n,a);break;case"backwards":for(n=null,s=t.child,t.child=null;null!==s;){if(null!==(e=s.alternate)&&null===ei(e)){t.child=s;break}e=s.sibling,s.sibling=n,n=s,s=e}Wo(t,!0,n,null,a);break;case"together":Wo(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Uo(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Go(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ml|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Fu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Fu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ho(e,t){if(!sa)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function jo(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var s=e.child;null!==s;)n|=s.lanes|s.childLanes,r|=14680064&s.subtreeFlags,r|=14680064&s.flags,s.return=e,s=s.sibling;else for(s=e.child;null!==s;)n|=s.lanes|s.childLanes,r|=s.subtreeFlags,r|=s.flags,s.return=e,s=s.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function qo(e,t,n){var r=t.pendingProps;switch(ta(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return jo(t),null;case 1:case 17:return _s(t.type)&&Fs(),jo(t),null;case 3:return r=t.stateNode,Ya(),Is(Es),Is($s),ni(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(ha(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==aa&&(iu(aa),aa=null))),_o(e,t),jo(t),null;case 5:Za(t);var s=Ka(qa.current);if(n=t.type,null!==e&&null!=t.stateNode)Fo(e,t,n,r,s),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(a(166));return jo(t),null}if(e=Ka(Ha.current),ha(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[ds]=t,r[ps]=i,e=0!==(1&t.mode),n){case"dialog":Pr("cancel",r),Pr("close",r);break;case"iframe":case"object":case"embed":Pr("load",r);break;case"video":case"audio":for(s=0;s<Or.length;s++)Pr(Or[s],r);break;case"source":Pr("error",r);break;case"img":case"image":case"link":Pr("error",r),Pr("load",r);break;case"details":Pr("toggle",r);break;case"input":Y(r,i),Pr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Pr("invalid",r);break;case"textarea":se(r,i),Pr("invalid",r)}for(var l in be(n,i),s=null,i)if(i.hasOwnProperty(l)){var u=i[l];"children"===l?"string"===typeof u?r.textContent!==u&&(!0!==i.suppressHydrationWarning&&Zr(r.textContent,u,e),s=["children",u]):"number"===typeof u&&r.textContent!==""+u&&(!0!==i.suppressHydrationWarning&&Zr(r.textContent,u,e),s=["children",""+u]):o.hasOwnProperty(l)&&null!=u&&"onScroll"===l&&Pr("scroll",r)}switch(n){case"input":j(r),J(r,i,!0);break;case"textarea":j(r),ie(r);break;case"select":case"option":break;default:"function"===typeof i.onClick&&(r.onclick=Jr)}r=s,t.updateQueue=r,null!==r&&(t.flags|=4)}else{l=9===s.nodeType?s:s.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=oe(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof r.is?e=l.createElement(n,{is:r.is}):(e=l.createElement(n),"select"===n&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,n),e[ds]=t,e[ps]=r,Ao(e,t,!1,!1),t.stateNode=e;e:{switch(l=xe(n,r),n){case"dialog":Pr("cancel",e),Pr("close",e),s=r;break;case"iframe":case"object":case"embed":Pr("load",e),s=r;break;case"video":case"audio":for(s=0;s<Or.length;s++)Pr(Or[s],e);s=r;break;case"source":Pr("error",e),s=r;break;case"img":case"image":case"link":Pr("error",e),Pr("load",e),s=r;break;case"details":Pr("toggle",e),s=r;break;case"input":Y(e,r),s=X(e,r),Pr("invalid",e);break;case"option":default:s=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},s=L({},r,{value:void 0}),Pr("invalid",e);break;case"textarea":se(e,r),s=re(e,r),Pr("invalid",e)}for(i in be(n,s),u=s)if(u.hasOwnProperty(i)){var c=u[i];"style"===i?ge(e,c):"dangerouslySetInnerHTML"===i?null!=(c=c?c.__html:void 0)&&he(e,c):"children"===i?"string"===typeof c?("textarea"!==n||""!==c)&&de(e,c):"number"===typeof c&&de(e,""+c):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(o.hasOwnProperty(i)?null!=c&&"onScroll"===i&&Pr("scroll",e):null!=c&&x(e,i,c,l))}switch(n){case"input":j(e),J(e,r,!1);break;case"textarea":j(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+G(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?ne(e,!!r.multiple,i,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof s.onClick&&(e.onclick=Jr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return jo(t),null;case 6:if(e&&null!=t.stateNode)Do(e,t,e.memoizedProps,r);else{if("string"!==typeof r&&null===t.stateNode)throw Error(a(166));if(n=Ka(qa.current),Ka(Ha.current),ha(t)){if(r=t.stateNode,n=t.memoizedProps,r[ds]=t,(i=r.nodeValue!==n)&&null!==(e=na))switch(e.tag){case 3:Zr(r.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Zr(r.nodeValue,n,0!==(1&e.mode))}i&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[ds]=t,t.stateNode=r}return jo(t),null;case 13:if(Is(Ja),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(sa&&null!==ra&&0!==(1&t.mode)&&0===(128&t.flags))da(),pa(),t.flags|=98560,i=!1;else if(i=ha(t),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(a(318));if(!(i=null!==(i=t.memoizedState)?i.dehydrated:null))throw Error(a(317));i[ds]=t}else pa(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;jo(t),i=!1}else null!==aa&&(iu(aa),aa=null),i=!0;if(!i)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((r=null!==r)!==(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&Ja.current)?0===Dl&&(Dl=3):mu())),null!==t.updateQueue&&(t.flags|=4),jo(t),null);case 4:return Ya(),_o(e,t),null===e&&Vr(t.stateNode.containerInfo),jo(t),null;case 10:return Ca(t.type._context),jo(t),null;case 19:if(Is(Ja),null===(i=t.memoizedState))return jo(t),null;if(r=0!==(128&t.flags),null===(l=i.rendering))if(r)Ho(i,!1);else{if(0!==Dl||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=ei(e))){for(t.flags|=128,Ho(i,!1),null!==(r=l.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=14680066,null===(l=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=l.childLanes,i.lanes=l.lanes,i.child=l.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=l.memoizedProps,i.memoizedState=l.memoizedState,i.updateQueue=l.updateQueue,i.type=l.type,e=l.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Ts(Ja,1&Ja.current|2),t.child}e=e.sibling}null!==i.tail&&Qe()>Vl&&(t.flags|=128,r=!0,Ho(i,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ei(l))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Ho(i,!0),null===i.tail&&"hidden"===i.tailMode&&!l.alternate&&!sa)return jo(t),null}else 2*Qe()-i.renderingStartTime>Vl&&1073741824!==n&&(t.flags|=128,r=!0,Ho(i,!1),t.lanes=4194304);i.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=i.last)?n.sibling=l:t.child=l,i.last=l)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Qe(),t.sibling=null,n=Ja.current,Ts(Ja,r?1&n|2:1&n),t):(jo(t),null);case 22:case 23:return hu(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!==(1&t.mode)?0!==(1073741824&_l)&&(jo(t),6&t.subtreeFlags&&(t.flags|=8192)):jo(t),null;case 24:case 25:return null}throw Error(a(156,t.tag))}function Ko(e,t){switch(ta(t),t.tag){case 1:return _s(t.type)&&Fs(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Ya(),Is(Es),Is($s),ni(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Za(t),null;case 13:if(Is(Ja),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(a(340));pa()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Is(Ja),null;case 4:return Ya(),null;case 10:return Ca(t.type._context),null;case 22:case 23:return hu(),null;default:return null}}Ao=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},_o=function(){},Fo=function(e,t,n,r){var s=e.memoizedProps;if(s!==r){e=t.stateNode,Ka(Ha.current);var a,i=null;switch(n){case"input":s=X(e,s),r=X(e,r),i=[];break;case"select":s=L({},s,{value:void 0}),r=L({},r,{value:void 0}),i=[];break;case"textarea":s=re(e,s),r=re(e,r),i=[];break;default:"function"!==typeof s.onClick&&"function"===typeof r.onClick&&(e.onclick=Jr)}for(c in be(n,r),n=null,s)if(!r.hasOwnProperty(c)&&s.hasOwnProperty(c)&&null!=s[c])if("style"===c){var l=s[c];for(a in l)l.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(o.hasOwnProperty(c)?i||(i=[]):(i=i||[]).push(c,null));for(c in r){var u=r[c];if(l=null!=s?s[c]:void 0,r.hasOwnProperty(c)&&u!==l&&(null!=u||null!=l))if("style"===c)if(l){for(a in l)!l.hasOwnProperty(a)||u&&u.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in u)u.hasOwnProperty(a)&&l[a]!==u[a]&&(n||(n={}),n[a]=u[a])}else n||(i||(i=[]),i.push(c,n)),n=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,l=l?l.__html:void 0,null!=u&&l!==u&&(i=i||[]).push(c,u)):"children"===c?"string"!==typeof u&&"number"!==typeof u||(i=i||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(o.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&Pr("scroll",e),i||l===u||(i=[])):(i=i||[]).push(c,u))}n&&(i=i||[]).push("style",n);var c=i;(t.updateQueue=c)&&(t.flags|=4)}},Do=function(e,t,n,r){n!==r&&(t.flags|=4)};var Xo=!1,Yo=!1,Qo="function"===typeof WeakSet?WeakSet:Set,Zo=null;function Jo(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(r){Su(e,t,r)}else n.current=null}function el(e,t,n){try{n()}catch(r){Su(e,t,r)}}var tl=!1;function nl(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var s=r=r.next;do{if((s.tag&e)===e){var a=s.destroy;s.destroy=void 0,void 0!==a&&el(t,n,a)}s=s.next}while(s!==r)}}function rl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function sl(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function al(e){var t=e.alternate;null!==t&&(e.alternate=null,al(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[ds],delete t[ps],delete t[ms],delete t[gs],delete t[ys])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function il(e){return 5===e.tag||3===e.tag||4===e.tag}function ol(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||il(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ll(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(ll(e,t,n),e=e.sibling;null!==e;)ll(e,t,n),e=e.sibling}function ul(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ul(e,t,n),e=e.sibling;null!==e;)ul(e,t,n),e=e.sibling}var cl=null,hl=!1;function dl(e,t,n){for(n=n.child;null!==n;)pl(e,t,n),n=n.sibling}function pl(e,t,n){if(at&&"function"===typeof at.onCommitFiberUnmount)try{at.onCommitFiberUnmount(st,n)}catch(o){}switch(n.tag){case 5:Yo||Jo(n,t);case 6:var r=cl,s=hl;cl=null,dl(e,t,n),hl=s,null!==(cl=r)&&(hl?(e=cl,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):cl.removeChild(n.stateNode));break;case 18:null!==cl&&(hl?(e=cl,n=n.stateNode,8===e.nodeType?ls(e.parentNode,n):1===e.nodeType&&ls(e,n),Vt(e)):ls(cl,n.stateNode));break;case 4:r=cl,s=hl,cl=n.stateNode.containerInfo,hl=!0,dl(e,t,n),cl=r,hl=s;break;case 0:case 11:case 14:case 15:if(!Yo&&(null!==(r=n.updateQueue)&&null!==(r=r.lastEffect))){s=r=r.next;do{var a=s,i=a.destroy;a=a.tag,void 0!==i&&(0!==(2&a)||0!==(4&a))&&el(n,t,i),s=s.next}while(s!==r)}dl(e,t,n);break;case 1:if(!Yo&&(Jo(n,t),"function"===typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(o){Su(n,t,o)}dl(e,t,n);break;case 21:dl(e,t,n);break;case 22:1&n.mode?(Yo=(r=Yo)||null!==n.memoizedState,dl(e,t,n),Yo=r):dl(e,t,n);break;default:dl(e,t,n)}}function fl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Qo),t.forEach((function(t){var r=$u.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function ml(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var s=n[r];try{var i=e,o=t,l=o;e:for(;null!==l;){switch(l.tag){case 5:cl=l.stateNode,hl=!1;break e;case 3:case 4:cl=l.stateNode.containerInfo,hl=!0;break e}l=l.return}if(null===cl)throw Error(a(160));pl(i,o,s),cl=null,hl=!1;var u=s.alternate;null!==u&&(u.return=null),s.return=null}catch(c){Su(s,t,c)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gl(t,e),t=t.sibling}function gl(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ml(t,e),yl(e),4&r){try{nl(3,e,e.return),rl(3,e)}catch(g){Su(e,e.return,g)}try{nl(5,e,e.return)}catch(g){Su(e,e.return,g)}}break;case 1:ml(t,e),yl(e),512&r&&null!==n&&Jo(n,n.return);break;case 5:if(ml(t,e),yl(e),512&r&&null!==n&&Jo(n,n.return),32&e.flags){var s=e.stateNode;try{de(s,"")}catch(g){Su(e,e.return,g)}}if(4&r&&null!=(s=e.stateNode)){var i=e.memoizedProps,o=null!==n?n.memoizedProps:i,l=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===l&&"radio"===i.type&&null!=i.name&&Q(s,i),xe(l,o);var c=xe(l,i);for(o=0;o<u.length;o+=2){var h=u[o],d=u[o+1];"style"===h?ge(s,d):"dangerouslySetInnerHTML"===h?he(s,d):"children"===h?de(s,d):x(s,h,d,c)}switch(l){case"input":Z(s,i);break;case"textarea":ae(s,i);break;case"select":var p=s._wrapperState.wasMultiple;s._wrapperState.wasMultiple=!!i.multiple;var f=i.value;null!=f?ne(s,!!i.multiple,f,!1):p!==!!i.multiple&&(null!=i.defaultValue?ne(s,!!i.multiple,i.defaultValue,!0):ne(s,!!i.multiple,i.multiple?[]:"",!1))}s[ps]=i}catch(g){Su(e,e.return,g)}}break;case 6:if(ml(t,e),yl(e),4&r){if(null===e.stateNode)throw Error(a(162));s=e.stateNode,i=e.memoizedProps;try{s.nodeValue=i}catch(g){Su(e,e.return,g)}}break;case 3:if(ml(t,e),yl(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Vt(t.containerInfo)}catch(g){Su(e,e.return,g)}break;case 4:default:ml(t,e),yl(e);break;case 13:ml(t,e),yl(e),8192&(s=e.child).flags&&(i=null!==s.memoizedState,s.stateNode.isHidden=i,!i||null!==s.alternate&&null!==s.alternate.memoizedState||(Wl=Qe())),4&r&&fl(e);break;case 22:if(h=null!==n&&null!==n.memoizedState,1&e.mode?(Yo=(c=Yo)||h,ml(t,e),Yo=c):ml(t,e),yl(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!h&&0!==(1&e.mode))for(Zo=e,h=e.child;null!==h;){for(d=Zo=h;null!==Zo;){switch(f=(p=Zo).child,p.tag){case 0:case 11:case 14:case 15:nl(4,p,p.return);break;case 1:Jo(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){r=p,n=p.return;try{t=r,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Su(r,n,g)}}break;case 5:Jo(p,p.return);break;case 22:if(null!==p.memoizedState){wl(d);continue}}null!==f?(f.return=p,Zo=f):wl(d)}h=h.sibling}e:for(h=null,d=e;;){if(5===d.tag){if(null===h){h=d;try{s=d.stateNode,c?"function"===typeof(i=s.style).setProperty?i.setProperty("display","none","important"):i.display="none":(l=d.stateNode,o=void 0!==(u=d.memoizedProps.style)&&null!==u&&u.hasOwnProperty("display")?u.display:null,l.style.display=me("display",o))}catch(g){Su(e,e.return,g)}}}else if(6===d.tag){if(null===h)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(g){Su(e,e.return,g)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;h===d&&(h=null),d=d.return}h===d&&(h=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:ml(t,e),yl(e),4&r&&fl(e);case 21:}}function yl(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(il(n)){var r=n;break e}n=n.return}throw Error(a(160))}switch(r.tag){case 5:var s=r.stateNode;32&r.flags&&(de(s,""),r.flags&=-33),ul(e,ol(e),s);break;case 3:case 4:var i=r.stateNode.containerInfo;ll(e,ol(e),i);break;default:throw Error(a(161))}}catch(o){Su(e,e.return,o)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bl(e,t,n){Zo=e,xl(e,t,n)}function xl(e,t,n){for(var r=0!==(1&e.mode);null!==Zo;){var s=Zo,a=s.child;if(22===s.tag&&r){var i=null!==s.memoizedState||Xo;if(!i){var o=s.alternate,l=null!==o&&null!==o.memoizedState||Yo;o=Xo;var u=Yo;if(Xo=i,(Yo=l)&&!u)for(Zo=s;null!==Zo;)l=(i=Zo).child,22===i.tag&&null!==i.memoizedState?kl(s):null!==l?(l.return=i,Zo=l):kl(s);for(;null!==a;)Zo=a,xl(a,t,n),a=a.sibling;Zo=s,Xo=o,Yo=u}vl(e)}else 0!==(8772&s.subtreeFlags)&&null!==a?(a.return=s,Zo=a):vl(e)}}function vl(e){for(;null!==Zo;){var t=Zo;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Yo||rl(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Yo)if(null===n)r.componentDidMount();else{var s=t.elementType===t.type?n.memoizedProps:to(t.type,n.memoizedProps);r.componentDidUpdate(s,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&Ua(t,i,r);break;case 3:var o=t.updateQueue;if(null!==o){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Ua(t,o,n)}break;case 5:var l=t.stateNode;if(null===n&&4&t.flags){n=l;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var h=c.memoizedState;if(null!==h){var d=h.dehydrated;null!==d&&Vt(d)}}}break;default:throw Error(a(163))}Yo||512&t.flags&&sl(t)}catch(p){Su(t,t.return,p)}}if(t===e){Zo=null;break}if(null!==(n=t.sibling)){n.return=t.return,Zo=n;break}Zo=t.return}}function wl(e){for(;null!==Zo;){var t=Zo;if(t===e){Zo=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Zo=n;break}Zo=t.return}}function kl(e){for(;null!==Zo;){var t=Zo;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{rl(4,t)}catch(l){Su(t,n,l)}break;case 1:var r=t.stateNode;if("function"===typeof r.componentDidMount){var s=t.return;try{r.componentDidMount()}catch(l){Su(t,s,l)}}var a=t.return;try{sl(t)}catch(l){Su(t,a,l)}break;case 5:var i=t.return;try{sl(t)}catch(l){Su(t,i,l)}}}catch(l){Su(t,t.return,l)}if(t===e){Zo=null;break}var o=t.sibling;if(null!==o){o.return=t.return,Zo=o;break}Zo=t.return}}var Nl,Sl=Math.ceil,Il=v.ReactCurrentDispatcher,Tl=v.ReactCurrentOwner,Cl=v.ReactCurrentBatchConfig,$l=0,El=null,Rl=null,Al=0,_l=0,Fl=Ss(0),Dl=0,Ol=null,Ml=0,Ll=0,zl=0,Pl=null,Bl=null,Wl=0,Vl=1/0,Ul=null,Gl=!1,Hl=null,jl=null,ql=!1,Kl=null,Xl=0,Yl=0,Ql=null,Zl=-1,Jl=0;function eu(){return 0!==(6&$l)?Qe():-1!==Zl?Zl:Zl=Qe()}function tu(e){return 0===(1&e.mode)?1:0!==(2&$l)&&0!==Al?Al&-Al:null!==ma.transition?(0===Jl&&(Jl=mt()),Jl):0!==(e=xt)?e:e=void 0===(e=window.event)?16:Yt(e.type)}function nu(e,t,n,r){if(50<Yl)throw Yl=0,Ql=null,Error(a(185));yt(e,n,r),0!==(2&$l)&&e===El||(e===El&&(0===(2&$l)&&(Ll|=n),4===Dl&&ou(e,Al)),ru(e,r),1===n&&0===$l&&0===(1&t.mode)&&(Vl=Qe()+500,Ps&&Vs()))}function ru(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,s=e.expirationTimes,a=e.pendingLanes;0<a;){var i=31-it(a),o=1<<i,l=s[i];-1===l?0!==(o&n)&&0===(o&r)||(s[i]=pt(o,t)):l<=t&&(e.expiredLanes|=o),a&=~o}}(e,t);var r=dt(e,e===El?Al:0);if(0===r)null!==n&&Ke(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ke(n),1===t)0===e.tag?function(e){Ps=!0,Ws(e)}(lu.bind(null,e)):Ws(lu.bind(null,e)),is((function(){0===(6&$l)&&Vs()})),n=null;else{switch(vt(r)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Eu(n,su.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function su(e,t){if(Zl=-1,Jl=0,0!==(6&$l))throw Error(a(327));var n=e.callbackNode;if(ku()&&e.callbackNode!==n)return null;var r=dt(e,e===El?Al:0);if(0===r)return null;if(0!==(30&r)||0!==(r&e.expiredLanes)||t)t=gu(e,r);else{t=r;var s=$l;$l|=2;var i=fu();for(El===e&&Al===t||(Ul=null,Vl=Qe()+500,du(e,t));;)try{bu();break}catch(l){pu(e,l)}Ta(),Il.current=i,$l=s,null!==Rl?t=0:(El=null,Al=0,t=Dl)}if(0!==t){if(2===t&&(0!==(s=ft(e))&&(r=s,t=au(e,s))),1===t)throw n=Ol,du(e,0),ou(e,r),ru(e,Qe()),n;if(6===t)ou(e,r);else{if(s=e.current.alternate,0===(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var s=n[r],a=s.getSnapshot;s=s.value;try{if(!or(a(),s))return!1}catch(o){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(s)&&(2===(t=gu(e,r))&&(0!==(i=ft(e))&&(r=i,t=au(e,i))),1===t))throw n=Ol,du(e,0),ou(e,r),ru(e,Qe()),n;switch(e.finishedWork=s,e.finishedLanes=r,t){case 0:case 1:throw Error(a(345));case 2:case 5:wu(e,Bl,Ul);break;case 3:if(ou(e,r),(130023424&r)===r&&10<(t=Wl+500-Qe())){if(0!==dt(e,0))break;if(((s=e.suspendedLanes)&r)!==r){eu(),e.pingedLanes|=e.suspendedLanes&s;break}e.timeoutHandle=rs(wu.bind(null,e,Bl,Ul),t);break}wu(e,Bl,Ul);break;case 4:if(ou(e,r),(4194240&r)===r)break;for(t=e.eventTimes,s=-1;0<r;){var o=31-it(r);i=1<<o,(o=t[o])>s&&(s=o),r&=~i}if(r=s,10<(r=(120>(r=Qe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Sl(r/1960))-r)){e.timeoutHandle=rs(wu.bind(null,e,Bl,Ul),r);break}wu(e,Bl,Ul);break;default:throw Error(a(329))}}}return ru(e,Qe()),e.callbackNode===n?su.bind(null,e):null}function au(e,t){var n=Pl;return e.current.memoizedState.isDehydrated&&(du(e,t).flags|=256),2!==(e=gu(e,t))&&(t=Bl,Bl=n,null!==t&&iu(t)),e}function iu(e){null===Bl?Bl=e:Bl.push.apply(Bl,e)}function ou(e,t){for(t&=~zl,t&=~Ll,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-it(t),r=1<<n;e[n]=-1,t&=~r}}function lu(e){if(0!==(6&$l))throw Error(a(327));ku();var t=dt(e,0);if(0===(1&t))return ru(e,Qe()),null;var n=gu(e,t);if(0!==e.tag&&2===n){var r=ft(e);0!==r&&(t=r,n=au(e,r))}if(1===n)throw n=Ol,du(e,0),ou(e,t),ru(e,Qe()),n;if(6===n)throw Error(a(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,wu(e,Bl,Ul),ru(e,Qe()),null}function uu(e,t){var n=$l;$l|=1;try{return e(t)}finally{0===($l=n)&&(Vl=Qe()+500,Ps&&Vs())}}function cu(e){null!==Kl&&0===Kl.tag&&0===(6&$l)&&ku();var t=$l;$l|=1;var n=Cl.transition,r=xt;try{if(Cl.transition=null,xt=1,e)return e()}finally{xt=r,Cl.transition=n,0===(6&($l=t))&&Vs()}}function hu(){_l=Fl.current,Is(Fl)}function du(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,ss(n)),null!==Rl)for(n=Rl.return;null!==n;){var r=n;switch(ta(r),r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&Fs();break;case 3:Ya(),Is(Es),Is($s),ni();break;case 5:Za(r);break;case 4:Ya();break;case 13:case 19:Is(Ja);break;case 10:Ca(r.type._context);break;case 22:case 23:hu()}n=n.return}if(El=e,Rl=e=Fu(e.current,null),Al=_l=t,Dl=0,Ol=null,zl=Ll=Ml=0,Bl=Pl=null,null!==Aa){for(t=0;t<Aa.length;t++)if(null!==(r=(n=Aa[t]).interleaved)){n.interleaved=null;var s=r.next,a=n.pending;if(null!==a){var i=a.next;a.next=s,r.next=i}n.pending=r}Aa=null}return e}function pu(e,t){for(;;){var n=Rl;try{if(Ta(),ri.current=Qi,ui){for(var r=ii.memoizedState;null!==r;){var s=r.queue;null!==s&&(s.pending=null),r=r.next}ui=!1}if(ai=0,li=oi=ii=null,ci=!1,hi=0,Tl.current=null,null===n||null===n.return){Dl=1,Ol=t,Rl=null;break}e:{var i=e,o=n.return,l=n,u=t;if(t=Al,l.flags|=32768,null!==u&&"object"===typeof u&&"function"===typeof u.then){var c=u,h=l,d=h.tag;if(0===(1&h.mode)&&(0===d||11===d||15===d)){var p=h.alternate;p?(h.updateQueue=p.updateQueue,h.memoizedState=p.memoizedState,h.lanes=p.lanes):(h.updateQueue=null,h.memoizedState=null)}var f=go(o);if(null!==f){f.flags&=-257,yo(f,o,l,0,t),1&f.mode&&mo(i,c,t),u=c;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(u),t.updateQueue=g}else m.add(u);break e}if(0===(1&t)){mo(i,c,t),mu();break e}u=Error(a(426))}else if(sa&&1&l.mode){var y=go(o);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),yo(y,o,l,0,t),fa(lo(u,l));break e}}i=u=lo(u,l),4!==Dl&&(Dl=2),null===Pl?Pl=[i]:Pl.push(i),i=o;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t,Wa(i,po(0,u,t));break e;case 1:l=u;var b=i.type,x=i.stateNode;if(0===(128&i.flags)&&("function"===typeof b.getDerivedStateFromError||null!==x&&"function"===typeof x.componentDidCatch&&(null===jl||!jl.has(x)))){i.flags|=65536,t&=-t,i.lanes|=t,Wa(i,fo(i,l,t));break e}}i=i.return}while(null!==i)}vu(n)}catch(v){t=v,Rl===n&&null!==n&&(Rl=n=n.return);continue}break}}function fu(){var e=Il.current;return Il.current=Qi,null===e?Qi:e}function mu(){0!==Dl&&3!==Dl&&2!==Dl||(Dl=4),null===El||0===(268435455&Ml)&&0===(268435455&Ll)||ou(El,Al)}function gu(e,t){var n=$l;$l|=2;var r=fu();for(El===e&&Al===t||(Ul=null,du(e,t));;)try{yu();break}catch(s){pu(e,s)}if(Ta(),$l=n,Il.current=r,null!==Rl)throw Error(a(261));return El=null,Al=0,Dl}function yu(){for(;null!==Rl;)xu(Rl)}function bu(){for(;null!==Rl&&!Xe();)xu(Rl)}function xu(e){var t=Nl(e.alternate,e,_l);e.memoizedProps=e.pendingProps,null===t?vu(e):Rl=t,Tl.current=null}function vu(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=qo(n,t,_l)))return void(Rl=n)}else{if(null!==(n=Ko(n,t)))return n.flags&=32767,void(Rl=n);if(null===e)return Dl=6,void(Rl=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Rl=t);Rl=t=e}while(null!==t);0===Dl&&(Dl=5)}function wu(e,t,n){var r=xt,s=Cl.transition;try{Cl.transition=null,xt=1,function(e,t,n,r){do{ku()}while(null!==Kl);if(0!==(6&$l))throw Error(a(327));n=e.finishedWork;var s=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var s=31-it(n),a=1<<s;t[s]=0,r[s]=-1,e[s]=-1,n&=~a}}(e,i),e===El&&(Rl=El=null,Al=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||ql||(ql=!0,Eu(tt,(function(){return ku(),null}))),i=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||i){i=Cl.transition,Cl.transition=null;var o=xt;xt=1;var l=$l;$l|=4,Tl.current=null,function(e,t){if(es=Gt,pr(e=dr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var s=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{n.nodeType,i.nodeType}catch(w){n=null;break e}var o=0,l=-1,u=-1,c=0,h=0,d=e,p=null;t:for(;;){for(var f;d!==n||0!==s&&3!==d.nodeType||(l=o+s),d!==i||0!==r&&3!==d.nodeType||(u=o+r),3===d.nodeType&&(o+=d.nodeValue.length),null!==(f=d.firstChild);)p=d,d=f;for(;;){if(d===e)break t;if(p===n&&++c===s&&(l=o),p===i&&++h===r&&(u=o),null!==(f=d.nextSibling))break;p=(d=p).parentNode}d=f}n=-1===l||-1===u?null:{start:l,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(ts={focusedElem:e,selectionRange:n},Gt=!1,Zo=t;null!==Zo;)if(e=(t=Zo).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Zo=e;else for(;null!==Zo;){t=Zo;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,x=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:to(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var v=t.stateNode.containerInfo;1===v.nodeType?v.textContent="":9===v.nodeType&&v.documentElement&&v.removeChild(v.documentElement);break;default:throw Error(a(163))}}catch(w){Su(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,Zo=e;break}Zo=t.return}m=tl,tl=!1}(e,n),gl(n,e),fr(ts),Gt=!!es,ts=es=null,e.current=n,bl(n,e,s),Ye(),$l=l,xt=o,Cl.transition=i}else e.current=n;if(ql&&(ql=!1,Kl=e,Xl=s),i=e.pendingLanes,0===i&&(jl=null),function(e){if(at&&"function"===typeof at.onCommitFiberRoot)try{at.onCommitFiberRoot(st,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),ru(e,Qe()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)s=t[n],r(s.value,{componentStack:s.stack,digest:s.digest});if(Gl)throw Gl=!1,e=Hl,Hl=null,e;0!==(1&Xl)&&0!==e.tag&&ku(),i=e.pendingLanes,0!==(1&i)?e===Ql?Yl++:(Yl=0,Ql=e):Yl=0,Vs()}(e,t,n,r)}finally{Cl.transition=s,xt=r}return null}function ku(){if(null!==Kl){var e=vt(Xl),t=Cl.transition,n=xt;try{if(Cl.transition=null,xt=16>e?16:e,null===Kl)var r=!1;else{if(e=Kl,Kl=null,Xl=0,0!==(6&$l))throw Error(a(331));var s=$l;for($l|=4,Zo=e.current;null!==Zo;){var i=Zo,o=i.child;if(0!==(16&Zo.flags)){var l=i.deletions;if(null!==l){for(var u=0;u<l.length;u++){var c=l[u];for(Zo=c;null!==Zo;){var h=Zo;switch(h.tag){case 0:case 11:case 15:nl(8,h,i)}var d=h.child;if(null!==d)d.return=h,Zo=d;else for(;null!==Zo;){var p=(h=Zo).sibling,f=h.return;if(al(h),h===c){Zo=null;break}if(null!==p){p.return=f,Zo=p;break}Zo=f}}}var m=i.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}Zo=i}}if(0!==(2064&i.subtreeFlags)&&null!==o)o.return=i,Zo=o;else e:for(;null!==Zo;){if(0!==(2048&(i=Zo).flags))switch(i.tag){case 0:case 11:case 15:nl(9,i,i.return)}var b=i.sibling;if(null!==b){b.return=i.return,Zo=b;break e}Zo=i.return}}var x=e.current;for(Zo=x;null!==Zo;){var v=(o=Zo).child;if(0!==(2064&o.subtreeFlags)&&null!==v)v.return=o,Zo=v;else e:for(o=x;null!==Zo;){if(0!==(2048&(l=Zo).flags))try{switch(l.tag){case 0:case 11:case 15:rl(9,l)}}catch(k){Su(l,l.return,k)}if(l===o){Zo=null;break e}var w=l.sibling;if(null!==w){w.return=l.return,Zo=w;break e}Zo=l.return}}if($l=s,Vs(),at&&"function"===typeof at.onPostCommitFiberRoot)try{at.onPostCommitFiberRoot(st,e)}catch(k){}r=!0}return r}finally{xt=n,Cl.transition=t}}return!1}function Nu(e,t,n){e=Pa(e,t=po(0,t=lo(n,t),1),1),t=eu(),null!==e&&(yt(e,1,t),ru(e,t))}function Su(e,t,n){if(3===e.tag)Nu(e,e,n);else for(;null!==t;){if(3===t.tag){Nu(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===jl||!jl.has(r))){t=Pa(t,e=fo(t,e=lo(n,e),1),1),e=eu(),null!==t&&(yt(t,1,e),ru(t,e));break}}t=t.return}}function Iu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=eu(),e.pingedLanes|=e.suspendedLanes&n,El===e&&(Al&n)===n&&(4===Dl||3===Dl&&(130023424&Al)===Al&&500>Qe()-Wl?du(e,0):zl|=n),ru(e,t)}function Tu(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ct,0===(130023424&(ct<<=1))&&(ct=4194304)));var n=eu();null!==(e=Da(e,t))&&(yt(e,t,n),ru(e,n))}function Cu(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Tu(e,n)}function $u(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,s=e.memoizedState;null!==s&&(n=s.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(a(314))}null!==r&&r.delete(t),Tu(e,n)}function Eu(e,t){return qe(e,t)}function Ru(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Au(e,t,n,r){return new Ru(e,t,n,r)}function _u(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Fu(e,t){var n=e.alternate;return null===n?((n=Au(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Du(e,t,n,r,s,i){var o=2;if(r=e,"function"===typeof e)_u(e)&&(o=1);else if("string"===typeof e)o=5;else e:switch(e){case N:return Ou(n.children,s,i,t);case S:o=8,s|=8;break;case I:return(e=Au(12,n,t,2|s)).elementType=I,e.lanes=i,e;case E:return(e=Au(13,n,t,s)).elementType=E,e.lanes=i,e;case R:return(e=Au(19,n,t,s)).elementType=R,e.lanes=i,e;case F:return Mu(n,s,i,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case T:o=10;break e;case C:o=9;break e;case $:o=11;break e;case A:o=14;break e;case _:o=16,r=null;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Au(o,n,t,s)).elementType=e,t.type=r,t.lanes=i,t}function Ou(e,t,n,r){return(e=Au(7,e,r,t)).lanes=n,e}function Mu(e,t,n,r){return(e=Au(22,e,r,t)).elementType=F,e.lanes=n,e.stateNode={isHidden:!1},e}function Lu(e,t,n){return(e=Au(6,e,null,t)).lanes=n,e}function zu(e,t,n){return(t=Au(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Pu(e,t,n,r,s){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=r,this.onRecoverableError=s,this.mutableSourceEagerHydrationData=null}function Bu(e,t,n,r,s,a,i,o,l){return e=new Pu(e,t,n,o,l),1===t?(t=1,!0===a&&(t|=8)):t=0,a=Au(3,null,null,t),e.current=a,a.stateNode=e,a.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ma(a),e}function Wu(e){if(!e)return Cs;e:{if(Ve(e=e._reactInternals)!==e||1!==e.tag)throw Error(a(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(_s(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(a(171))}if(1===e.tag){var n=e.type;if(_s(n))return Os(e,n,t)}return t}function Vu(e,t,n,r,s,a,i,o,l){return(e=Bu(n,r,!0,e,0,a,0,o,l)).context=Wu(null),n=e.current,(a=za(r=eu(),s=tu(n))).callback=void 0!==t&&null!==t?t:null,Pa(n,a,s),e.current.lanes=s,yt(e,s,r),ru(e,r),e}function Uu(e,t,n,r){var s=t.current,a=eu(),i=tu(s);return n=Wu(n),null===t.context?t.context=n:t.pendingContext=n,(t=za(a,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=Pa(s,t,i))&&(nu(e,s,i,a),Ba(e,s,i)),i}function Gu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Hu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function ju(e,t){Hu(e,t),(e=e.alternate)&&Hu(e,t)}Nl=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Es.current)xo=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return xo=!1,function(e,t,n){switch(t.tag){case 3:Eo(t),pa();break;case 5:Qa(t);break;case 1:_s(t.type)&&Ms(t);break;case 4:Xa(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,s=t.memoizedProps.value;Ts(ka,r._currentValue),r._currentValue=s;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(Ts(Ja,1&Ja.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Lo(e,t,n):(Ts(Ja,1&Ja.current),null!==(e=Go(e,t,n))?e.sibling:null);Ts(Ja,1&Ja.current);break;case 19:if(r=0!==(n&t.childLanes),0!==(128&e.flags)){if(r)return Vo(e,t,n);t.flags|=128}if(null!==(s=t.memoizedState)&&(s.rendering=null,s.tail=null,s.lastEffect=null),Ts(Ja,Ja.current),r)break;return null;case 22:case 23:return t.lanes=0,So(e,t,n)}return Go(e,t,n)}(e,t,n);xo=0!==(131072&e.flags)}else xo=!1,sa&&0!==(1048576&t.flags)&&Js(t,js,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Uo(e,t),e=t.pendingProps;var s=As(t,$s.current);Ea(t,n),s=mi(null,t,r,e,s,n);var i=gi();return t.flags|=1,"object"===typeof s&&null!==s&&"function"===typeof s.render&&void 0===s.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,_s(r)?(i=!0,Ms(t)):i=!1,t.memoizedState=null!==s.state&&void 0!==s.state?s.state:null,Ma(t),s.updater=ro,t.stateNode=s,s._reactInternals=t,oo(t,r,e,n),t=$o(null,t,r,!0,i,n)):(t.tag=0,sa&&i&&ea(t),vo(null,t,s,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Uo(e,t),e=t.pendingProps,r=(s=r._init)(r._payload),t.type=r,s=t.tag=function(e){if("function"===typeof e)return _u(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===$)return 11;if(e===A)return 14}return 2}(r),e=to(r,e),s){case 0:t=To(null,t,r,e,n);break e;case 1:t=Co(null,t,r,e,n);break e;case 11:t=wo(null,t,r,e,n);break e;case 14:t=ko(null,t,r,to(r.type,e),n);break e}throw Error(a(306,r,""))}return t;case 0:return r=t.type,s=t.pendingProps,To(e,t,r,s=t.elementType===r?s:to(r,s),n);case 1:return r=t.type,s=t.pendingProps,Co(e,t,r,s=t.elementType===r?s:to(r,s),n);case 3:e:{if(Eo(t),null===e)throw Error(a(387));r=t.pendingProps,s=(i=t.memoizedState).element,La(e,t),Va(t,r,null,n);var o=t.memoizedState;if(r=o.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=Ro(e,t,r,n,s=lo(Error(a(423)),t));break e}if(r!==s){t=Ro(e,t,r,n,s=lo(Error(a(424)),t));break e}for(ra=us(t.stateNode.containerInfo.firstChild),na=t,sa=!0,aa=null,n=wa(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(pa(),r===s){t=Go(e,t,n);break e}vo(e,t,r,n)}t=t.child}return t;case 5:return Qa(t),null===e&&ua(t),r=t.type,s=t.pendingProps,i=null!==e?e.memoizedProps:null,o=s.children,ns(r,s)?o=null:null!==i&&ns(r,i)&&(t.flags|=32),Io(e,t),vo(e,t,o,n),t.child;case 6:return null===e&&ua(t),null;case 13:return Lo(e,t,n);case 4:return Xa(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=va(t,null,r,n):vo(e,t,r,n),t.child;case 11:return r=t.type,s=t.pendingProps,wo(e,t,r,s=t.elementType===r?s:to(r,s),n);case 7:return vo(e,t,t.pendingProps,n),t.child;case 8:case 12:return vo(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,s=t.pendingProps,i=t.memoizedProps,o=s.value,Ts(ka,r._currentValue),r._currentValue=o,null!==i)if(or(i.value,o)){if(i.children===s.children&&!Es.current){t=Go(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var l=i.dependencies;if(null!==l){o=i.child;for(var u=l.firstContext;null!==u;){if(u.context===r){if(1===i.tag){(u=za(-1,n&-n)).tag=2;var c=i.updateQueue;if(null!==c){var h=(c=c.shared).pending;null===h?u.next=u:(u.next=h.next,h.next=u),c.pending=u}}i.lanes|=n,null!==(u=i.alternate)&&(u.lanes|=n),$a(i.return,n,t),l.lanes|=n;break}u=u.next}}else if(10===i.tag)o=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(o=i.return))throw Error(a(341));o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),$a(o,n,t),o=i.sibling}else o=i.child;if(null!==o)o.return=i;else for(o=i;null!==o;){if(o===t){o=null;break}if(null!==(i=o.sibling)){i.return=o.return,o=i;break}o=o.return}i=o}vo(e,t,s.children,n),t=t.child}return t;case 9:return s=t.type,r=t.pendingProps.children,Ea(t,n),r=r(s=Ra(s)),t.flags|=1,vo(e,t,r,n),t.child;case 14:return s=to(r=t.type,t.pendingProps),ko(e,t,r,s=to(r.type,s),n);case 15:return No(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,s=t.pendingProps,s=t.elementType===r?s:to(r,s),Uo(e,t),t.tag=1,_s(r)?(e=!0,Ms(t)):e=!1,Ea(t,n),ao(t,r,s),oo(t,r,s,n),$o(null,t,r,!0,e,n);case 19:return Vo(e,t,n);case 22:return So(e,t,n)}throw Error(a(156,t.tag))};var qu="function"===typeof reportError?reportError:function(e){console.error(e)};function Ku(e){this._internalRoot=e}function Xu(e){this._internalRoot=e}function Yu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Qu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Zu(){}function Ju(e,t,n,r,s){var a=n._reactRootContainer;if(a){var i=a;if("function"===typeof s){var o=s;s=function(){var e=Gu(i);o.call(e)}}Uu(t,i,e,s)}else i=function(e,t,n,r,s){if(s){if("function"===typeof r){var a=r;r=function(){var e=Gu(i);a.call(e)}}var i=Vu(t,r,e,0,null,!1,0,"",Zu);return e._reactRootContainer=i,e[fs]=i.current,Vr(8===e.nodeType?e.parentNode:e),cu(),i}for(;s=e.lastChild;)e.removeChild(s);if("function"===typeof r){var o=r;r=function(){var e=Gu(l);o.call(e)}}var l=Bu(e,0,!1,null,0,!1,0,"",Zu);return e._reactRootContainer=l,e[fs]=l.current,Vr(8===e.nodeType?e.parentNode:e),cu((function(){Uu(t,l,n,r)})),l}(n,t,e,s,r);return Gu(i)}Xu.prototype.render=Ku.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(a(409));Uu(e,t,null,null)},Xu.prototype.unmount=Ku.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;cu((function(){Uu(null,e,null,null)})),t[fs]=null}},Xu.prototype.unstable_scheduleHydration=function(e){if(e){var t=St();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Ft.length&&0!==t&&t<Ft[n].priority;n++);Ft.splice(n,0,e),0===n&&Lt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ht(t.pendingLanes);0!==n&&(bt(t,1|n),ru(t,Qe()),0===(6&$l)&&(Vl=Qe()+500,Vs()))}break;case 13:cu((function(){var t=Da(e,1);if(null!==t){var n=eu();nu(t,e,1,n)}})),ju(e,1)}},kt=function(e){if(13===e.tag){var t=Da(e,134217728);if(null!==t)nu(t,e,134217728,eu());ju(e,134217728)}},Nt=function(e){if(13===e.tag){var t=tu(e),n=Da(e,t);if(null!==n)nu(n,e,t,eu());ju(e,t)}},St=function(){return xt},It=function(e,t){var n=xt;try{return xt=e,t()}finally{xt=n}},ke=function(e,t,n){switch(t){case"input":if(Z(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var s=ws(r);if(!s)throw Error(a(90));q(r),Z(r,s)}}}break;case"textarea":ae(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},$e=uu,Ee=cu;var ec={usingClientEntryPoint:!1,Events:[xs,vs,ws,Te,Ce,uu]},tc={findFiberByHostInstance:bs,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nc={bundleType:tc.bundleType,version:tc.version,rendererPackageName:tc.rendererPackageName,rendererConfig:tc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:v.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:tc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var rc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!rc.isDisabled&&rc.supportsFiber)try{st=rc.inject(nc),at=rc}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ec,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Yu(t))throw Error(a(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Yu(e))throw Error(a(299));var n=!1,r="",s=qu;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(s=t.onRecoverableError)),t=Bu(e,1,!1,null,0,n,0,r,s),e[fs]=t.current,Vr(8===e.nodeType?e.parentNode:e),new Ku(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(a(188));throw e=Object.keys(e).join(","),Error(a(268,e))}return e=null===(e=He(t))?null:e.stateNode},t.flushSync=function(e){return cu(e)},t.hydrate=function(e,t,n){if(!Qu(t))throw Error(a(200));return Ju(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Yu(e))throw Error(a(405));var r=null!=n&&n.hydratedSources||null,s=!1,i="",o=qu;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(s=!0),void 0!==n.identifierPrefix&&(i=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),t=Vu(t,null,e,1,null!=n?n:null,s,0,i,o),e[fs]=t.current,Vr(e),r)for(e=0;e<r.length;e++)s=(s=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,s]:t.mutableSourceEagerHydrationData.push(n,s);return new Xu(t)},t.render=function(e,t,n){if(!Qu(t))throw Error(a(200));return Ju(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Qu(e))throw Error(a(40));return!!e._reactRootContainer&&(cu((function(){Ju(null,null,e,!1,(function(){e._reactRootContainer=null,e[fs]=null}))})),!0)},t.unstable_batchedUpdates=uu,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Qu(n))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return Ju(e,t,n,!1,r)},t.version="18.3.1-next-f1338f8080-20240426"},391:(e,t,n)=>{"use strict";var r=n(950);t.createRoot=r.createRoot,t.hydrateRoot=r.hydrateRoot},950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(730)},153:(e,t,n)=>{"use strict";var r=n(43),s=Symbol.for("react.element"),a=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,o=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function u(e,t,n){var r,a={},u=null,c=null;for(r in void 0!==n&&(u=""+n),void 0!==t.key&&(u=""+t.key),void 0!==t.ref&&(c=t.ref),t)i.call(t,r)&&!l.hasOwnProperty(r)&&(a[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===a[r]&&(a[r]=t[r]);return{$$typeof:s,type:e,key:u,ref:c,props:a,_owner:o.current}}t.jsx=u,t.jsxs=u},202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),s=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),l=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function x(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var v=x.prototype=new b;v.constructor=x,m(v,y.prototype),v.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,N={current:null},S={key:!0,ref:!0,__self:!0,__source:!0};function I(e,t,r){var s,a={},i=null,o=null;if(null!=t)for(s in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,s)&&!S.hasOwnProperty(s)&&(a[s]=t[s]);var l=arguments.length-2;if(1===l)a.children=r;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];a.children=u}if(e&&e.defaultProps)for(s in l=e.defaultProps)void 0===a[s]&&(a[s]=l[s]);return{$$typeof:n,type:e,key:i,ref:o,props:a,_owner:N.current}}function T(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var C=/\/+/g;function $(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function E(e,t,s,a,i){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case r:l=!0}}if(l)return i=i(l=e),e=""===a?"."+$(l,0):a,w(i)?(s="",null!=e&&(s=e.replace(C,"$&/")+"/"),E(i,t,s,"",(function(e){return e}))):null!=i&&(T(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,s+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(C,"$&/")+"/")+e)),t.push(i)),1;if(l=0,a=""===a?".":a+":",w(e))for(var u=0;u<e.length;u++){var c=a+$(o=e[u],u);l+=E(o,t,s,c,i)}else if(c=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof c)for(e=c.call(e),u=0;!(o=e.next()).done;)l+=E(o=o.value,t,s,c=a+$(o,u++),i);else if("object"===o)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function R(e,t,n){if(null==e)return e;var r=[],s=0;return E(e,r,"","",(function(e){return t.call(n,e,s++)})),r}function A(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var _={current:null},F={transition:null},D={ReactCurrentDispatcher:_,ReactCurrentBatchConfig:F,ReactCurrentOwner:N};function O(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:R,forEach:function(e,t,n){R(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return R(e,(function(){t++})),t},toArray:function(e){return R(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=s,t.Profiler=i,t.PureComponent=x,t.StrictMode=a,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=D,t.act=O,t.cloneElement=function(e,t,r){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var s=m({},e.props),a=e.key,i=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,o=N.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(u in t)k.call(t,u)&&!S.hasOwnProperty(u)&&(s[u]=void 0===t[u]&&void 0!==l?l[u]:t[u])}var u=arguments.length-2;if(1===u)s.children=r;else if(1<u){l=Array(u);for(var c=0;c<u;c++)l[c]=arguments[c+2];s.children=l}return{$$typeof:n,type:e.type,key:a,ref:i,props:s,_owner:o}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=I,t.createFactory=function(e){var t=I.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:A}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=F.transition;F.transition={};try{e()}finally{F.transition=t}},t.unstable_act=O,t.useCallback=function(e,t){return _.current.useCallback(e,t)},t.useContext=function(e){return _.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return _.current.useDeferredValue(e)},t.useEffect=function(e,t){return _.current.useEffect(e,t)},t.useId=function(){return _.current.useId()},t.useImperativeHandle=function(e,t,n){return _.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return _.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return _.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return _.current.useMemo(e,t)},t.useReducer=function(e,t,n){return _.current.useReducer(e,t,n)},t.useRef=function(e){return _.current.useRef(e)},t.useState=function(e){return _.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return _.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return _.current.useTransition()},t.version="18.3.1"},43:(e,t,n)=>{"use strict";e.exports=n(202)},579:(e,t,n)=>{"use strict";e.exports=n(153)},234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,s=e[r];if(!(0<a(s,t)))break e;e[r]=t,e[n]=s,n=r}}function r(e){return 0===e.length?null:e[0]}function s(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,s=e.length,i=s>>>1;r<i;){var o=2*(r+1)-1,l=e[o],u=o+1,c=e[u];if(0>a(l,n))u<s&&0>a(c,l)?(e[r]=c,e[u]=n,r=u):(e[r]=l,e[o]=n,r=o);else{if(!(u<s&&0>a(c,n)))break e;e[r]=c,e[u]=n,r=u}}}return t}function a(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var o=Date,l=o.now();t.unstable_now=function(){return o.now()-l}}var u=[],c=[],h=1,d=null,p=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,x="undefined"!==typeof setImmediate?setImmediate:null;function v(e){for(var t=r(c);null!==t;){if(null===t.callback)s(c);else{if(!(t.startTime<=e))break;s(c),t.sortIndex=t.expirationTime,n(u,t)}t=r(c)}}function w(e){if(g=!1,v(e),!m)if(null!==r(u))m=!0,F(k);else{var t=r(c);null!==t&&D(w,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,b(T),T=-1),f=!0;var a=p;try{for(v(n),d=r(u);null!==d&&(!(d.expirationTime>n)||e&&!E());){var i=d.callback;if("function"===typeof i){d.callback=null,p=d.priorityLevel;var o=i(d.expirationTime<=n);n=t.unstable_now(),"function"===typeof o?d.callback=o:d===r(u)&&s(u),v(n)}else s(u);d=r(u)}if(null!==d)var l=!0;else{var h=r(c);null!==h&&D(w,h.startTime-n),l=!1}return l}finally{d=null,p=a,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var N,S=!1,I=null,T=-1,C=5,$=-1;function E(){return!(t.unstable_now()-$<C)}function R(){if(null!==I){var e=t.unstable_now();$=e;var n=!0;try{n=I(!0,e)}finally{n?N():(S=!1,I=null)}}else S=!1}if("function"===typeof x)N=function(){x(R)};else if("undefined"!==typeof MessageChannel){var A=new MessageChannel,_=A.port2;A.port1.onmessage=R,N=function(){_.postMessage(null)}}else N=function(){y(R,0)};function F(e){I=e,S||(S=!0,N())}function D(e,n){T=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,F(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(u)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,s,a){var i=t.unstable_now();switch("object"===typeof a&&null!==a?a="number"===typeof(a=a.delay)&&0<a?i+a:i:a=i,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:h++,callback:s,priorityLevel:e,startTime:a,expirationTime:o=a+o,sortIndex:-1},a>i?(e.sortIndex=a,n(c,e),null===r(u)&&e===r(c)&&(g?(b(T),T=-1):g=!0,D(w,a-i))):(e.sortIndex=o,n(u,e),m||f||(m=!0,F(k))),e},t.unstable_shouldYield=E,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},853:(e,t,n)=>{"use strict";e.exports=n(234)},334:(e,t,n)=>{var r=n(359),s=n(66),a=n(16),i=n(538),o=n(288),l=n(262),u=n(430);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},359:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new a(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},262:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},66:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},288:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},538:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},16:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},430:function(e,t,n){var r;!function(s,a,i){var o,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(s.crypto||s.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,b(a)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(i.random=e,t):e})(x,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(a){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(i.random(),a),e.exports){e.exports=p;try{o=n(996)}catch(x){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!==typeof self?self:this,[],Math)},817:()=>{},590:()=>{},530:()=>{},108:()=>{},551:()=>{},996:()=>{}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,r)=>(n.f[r](e,t),t)),[])),n.u=e=>"static/js/"+e+".255b6589.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="segmentation_tf:";n.l=(r,s,a,i)=>{if(e[r])e[r].push(s);else{var o,l;if(void 0!==a)for(var u=document.getElementsByTagName("script"),c=0;c<u.length;c++){var h=u[c];if(h.getAttribute("src")==r||h.getAttribute("data-webpack")==t+a){o=h;break}}o||(l=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,n.nc&&o.setAttribute("nonce",n.nc),o.setAttribute("data-webpack",t+a),o.src=r),e[r]=[s];var d=(t,n)=>{o.onerror=o.onload=null,clearTimeout(p);var s=e[r];if(delete e[r],o.parentNode&&o.parentNode.removeChild(o),s&&s.forEach((e=>e(n))),t)return t(n)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=d.bind(null,o.onerror),o.onload=d.bind(null,o.onload),l&&document.head.appendChild(o)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/segment/",(()=>{var e={792:0};n.f.j=(t,r)=>{var s=n.o(e,t)?e[t]:void 0;if(0!==s)if(s)r.push(s[2]);else{var a=new Promise(((n,r)=>s=e[t]=[n,r]));r.push(s[2]=a);var i=n.p+n.u(t),o=new Error;n.l(i,(r=>{if(n.o(e,t)&&(0!==(s=e[t])&&(e[t]=void 0),s)){var a=r&&("load"===r.type?"missing":r.type),i=r&&r.target&&r.target.src;o.message="Loading chunk "+t+" failed.\n("+a+": "+i+")",o.name="ChunkLoadError",o.type=a,o.request=i,s[1](o)}}),"chunk-"+t,t)}};var t=(t,r)=>{var s,a,i=r[0],o=r[1],l=r[2],u=0;if(i.some((t=>0!==e[t]))){for(s in o)n.o(o,s)&&(n.m[s]=o[s]);if(l)l(n)}for(t&&t(r);u<i.length;u++)a=i[u],n.o(e,a)&&e[a]&&e[a][0](),e[a]=0},r=self.webpackChunksegmentation_tf=self.webpackChunksegmentation_tf||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})(),(()=>{"use strict";var e={};n.r(e),n.d(e,{CompositeArrayBuffer:()=>oa,browserFiles:()=>to,browserHTTPRequest:()=>co,concatenateArrayBuffers:()=>Ta,copyModel:()=>hi,decodeWeights:()=>ya,decodeWeightsStream:()=>ka,encodeWeights:()=>ga,fromMemory:()=>mo,fromMemorySync:()=>go,getLoadHandlers:()=>La,getModelArtifactsForJSON:()=>Ra,getModelArtifactsForJSONSync:()=>Ea,getModelArtifactsInfoForJSON:()=>Aa,getSaveHandlers:()=>Ma,getWeightSpecs:()=>_a,http:()=>uo,isHTTPScheme:()=>oo,listModels:()=>ui,loadWeights:()=>so,moveModel:()=>di,registerLoadRouter:()=>Oa,registerSaveRouter:()=>Da,removeModel:()=>ci,weightsLoaderFactory:()=>ao,withSaveHandler:()=>yo,withSaveHandlerSync:()=>bo});var t={};n.r(t),n.d(t,{assertParamsValid:()=>$o,computeFlatOffset:()=>Wo,computeOutShape:()=>Ro,getNormalizedAxes:()=>Do,isSliceContinous:()=>Bo,maskToAxes:()=>Eo,parseSliceParams:()=>Vo,sliceInfo:()=>Uo,startForAxis:()=>zo,startIndicesWithElidedDims:()=>Oo,stopForAxis:()=>Po,stopIndicesWithElidedDims:()=>Mo,stridesForAxis:()=>Lo,stridesWithElidedDims:()=>Ao});var r={};n.r(r),n.d(r,{conv2d:()=>nd,depthwiseConv2d:()=>ad,matMul:()=>id});var s={};n.r(s),n.d(s,{collectGatherOpShapeInfo:()=>bf,computeOutShape:()=>yf,segOpComputeOptimalWindowSize:()=>gf});var a={};n.r(a),n.d(a,{ERF_A1:()=>Fp,ERF_A2:()=>Dp,ERF_A3:()=>Op,ERF_A4:()=>Mp,ERF_A5:()=>Lp,ERF_P:()=>_p,PARALLELIZE_THRESHOLD:()=>wp,RowPartitionType:()=>gp,SELU_SCALE:()=>Ap,SELU_SCALEALPHA:()=>Rp,applyActivation:()=>ed,assertAndGetBroadcastShape:()=>Hi,assertAxesAreInnerMostDims:()=>gu,assertParamsConsistent:()=>fp,assignToTypedArray:()=>Up,axesAreInnerMostDims:()=>du,calculateShapes:()=>Rh,checkEinsumDimSizes:()=>Zp,checkPadOnDimRoundingMode:()=>yl,combineLocations:()=>pu,combineRaggedTensorToTensorShapes:()=>yp,complexWithEvenIndex:()=>Bp,complexWithOddIndex:()=>Wp,computeConv2DInfo:()=>il,computeConv3DInfo:()=>ol,computeDefaultPad:()=>ll,computeDilation2DInfo:()=>rl,computeOptimalWindowSize:()=>kp,computeOutAndReduceShapes:()=>fu,computeOutShape:()=>mp,computePool2DInfo:()=>sl,computePool3DInfo:()=>al,convertConv2DDataFormat:()=>gl,decodeEinsumEquation:()=>Yp,eitherStridesOrDilationsAreOne:()=>fl,expandShapeToKeepDim:()=>mu,exponent:()=>Hp,exponents:()=>Gp,fromStringArrayToUint8:()=>vf,fromUint8ToStringArray:()=>xf,getAxesPermutation:()=>yu,getBroadcastDims:()=>Ui,getComplexWithIndex:()=>Vp,getEinsumComputePath:()=>Jp,getEinsumPermutation:()=>Qp,getFusedBiasGradient:()=>Jh,getFusedDyActivation:()=>Zh,getImageCenter:()=>Np,getInnerMostAxes:()=>xu,getPermuted:()=>Ip,getRaggedRank:()=>xp,getReductionAxes:()=>Gi,getReshaped:()=>Sp,getReshapedPermuted:()=>Tp,getRowPartitionTypesHelper:()=>bp,getSliceBeginCoords:()=>Cp,getSliceSize:()=>$p,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>rf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>sf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>af,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>uf,getSparseReshapeInputOutputMismatchErrorMessage:()=>hf,getSparseReshapeInputOutputMultipleErrorMessage:()=>cf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>of,getSparseReshapeNegativeOutputDimErrorMessage:()=>lf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>mf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>df,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>pf,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>ff,getUndoAxesPermutation:()=>bu,isIdentityPermutation:()=>ef,log:()=>Dr,mergeRealAndImagArrays:()=>zp,prepareAndValidate:()=>Ep,prepareSplitSize:()=>nf,segment_util:()=>s,shouldFuse:()=>td,slice_util:()=>t,splitRealAndImagArrays:()=>Pp,stridesOrDilationsArePositive:()=>ml,tupleValuesAreOne:()=>pl,upcastType:()=>_s,validateDefaultValueShape:()=>vp,validateInput:()=>Eh,validateUpdateShape:()=>$h,warn:()=>Fr});var i={};n.r(i),n.d(i,{json:()=>Zw});var o={};n.r(o),n.d(o,{json:()=>Jw});var l={};n.r(l),n.d(l,{json:()=>ek});var u={};n.r(u),n.d(u,{json:()=>tk});var c={};n.r(c),n.d(c,{json:()=>nk});var h={};n.r(h),n.d(h,{json:()=>rk});var d={};n.r(d),n.d(d,{json:()=>sk});var p={};n.r(p),n.d(p,{json:()=>ak});var f={};n.r(f),n.d(f,{json:()=>ik});var m={};n.r(m),n.d(m,{json:()=>ok});var g={};n.r(g),n.d(g,{json:()=>lk});var y={};n.r(y),n.d(y,{json:()=>uk});var b={};n.r(b),n.d(b,{json:()=>ck});var x={};n.r(x),n.d(x,{json:()=>hk});var v={};n.r(v),n.d(v,{json:()=>dk});var w={};n.r(w),n.d(w,{json:()=>pk});var k={};n.r(k),n.d(k,{json:()=>fk});var N={};n.r(N),n.d(N,{json:()=>mk});var S={};n.r(S),n.d(S,{json:()=>gk});var I={};n.r(I),n.d(I,{OP_SCOPE_SUFFIX:()=>ta,abs:()=>Vi,acos:()=>Ho,acosh:()=>jo,add:()=>wi,addN:()=>qo,all:()=>Ko,any:()=>Xo,argMax:()=>Yo,argMin:()=>Qo,asin:()=>Zo,asinh:()=>Jo,atan:()=>el,atan2:()=>tl,atanh:()=>nl,avgPool:()=>xl,avgPool3d:()=>vl,basicLSTMCell:()=>Tl,batchNorm:()=>$l,batchNorm2d:()=>El,batchNorm3d:()=>Rl,batchNorm4d:()=>Al,batchToSpaceND:()=>Cl,bincount:()=>_l,bitwiseAnd:()=>Fl,booleanMaskAsync:()=>Wh,broadcastArgs:()=>Dl,broadcastTo:()=>Ol,buffer:()=>yi,cast:()=>bi,ceil:()=>Ml,clipByValue:()=>Ll,clone:()=>xi,complex:()=>ra,concat:()=>wl,concat1d:()=>zl,concat2d:()=>Pl,concat3d:()=>Bl,concat4d:()=>Wl,conv1d:()=>Ul,conv2d:()=>Vl,conv2dTranspose:()=>Hl,conv3d:()=>jl,conv3dTranspose:()=>Kl,cos:()=>Xl,cosh:()=>Yl,cosineWindow:()=>Xh,cumprod:()=>Ql,cumsum:()=>Zl,denseBincount:()=>Jl,depthToSpace:()=>eu,depthwiseConv2d:()=>tu,diag:()=>nu,dilation2d:()=>ru,div:()=>Ni,divNoNan:()=>iu,dot:()=>ou,dropout:()=>qh,einsum:()=>lu,elu:()=>uu,enclosingPowerOfTwo:()=>Kh,ensureShape:()=>cu,equal:()=>su,erf:()=>hu,euclideanNorm:()=>Iu,exp:()=>Tu,expandDims:()=>Cu,expm1:()=>$u,eye:()=>Ru,fft:()=>dh,fill:()=>Li,floor:()=>Au,floorDiv:()=>ki,fused:()=>r,gather:()=>_u,gatherND:()=>jh,greater:()=>Fu,greaterEqual:()=>Du,ifft:()=>ph,imag:()=>Ou,image:()=>ip,inTopKAsync:()=>Yh,irfft:()=>fh,isFinite:()=>Mu,isInf:()=>Lu,isNaN:()=>zu,leakyRelu:()=>Pu,less:()=>Bu,lessEqual:()=>Wu,linalg:()=>op,linspace:()=>Vu,localResponseNormalization:()=>Uu,log:()=>Gu,log1p:()=>Hu,logSigmoid:()=>Ku,logSoftmax:()=>Xu,logSumExp:()=>Yu,logicalAnd:()=>Qu,logicalNot:()=>Zu,logicalOr:()=>Ju,logicalXor:()=>ec,losses:()=>lp,lowerBound:()=>rc,matMul:()=>kl,max:()=>vu,maxPool:()=>sc,maxPool3d:()=>ac,maxPoolWithArgmax:()=>ic,maximum:()=>ji,mean:()=>oc,meshgrid:()=>cc,min:()=>wu,minimum:()=>hc,mirrorPad:()=>dc,mod:()=>pc,moments:()=>fc,movingAverage:()=>Uh,mul:()=>Si,multiRNNCell:()=>mc,multinomial:()=>gc,neg:()=>ju,norm:()=>Su,notEqual:()=>yc,oneHot:()=>bc,ones:()=>uc,onesLike:()=>xc,op:()=>na,outerProduct:()=>vc,pad:()=>wc,pad1d:()=>kc,pad2d:()=>Nc,pad3d:()=>Sc,pad4d:()=>Ic,pool:()=>Cc,pow:()=>Pi,prelu:()=>$c,print:()=>vi,prod:()=>Ec,raggedGather:()=>Rc,raggedRange:()=>Ac,raggedTensorToTensor:()=>_c,rand:()=>Fc,randomGamma:()=>zc,randomNormal:()=>Pc,randomStandardNormal:()=>Bc,randomUniform:()=>Wc,randomUniformInt:()=>Vc,range:()=>Uc,real:()=>Gc,reciprocal:()=>Hc,relu:()=>jc,relu6:()=>qc,reshape:()=>bl,reverse:()=>Kc,reverse1d:()=>Xc,reverse2d:()=>Yc,reverse3d:()=>Qc,reverse4d:()=>Zc,rfft:()=>gh,round:()=>Jc,rsqrt:()=>eh,scalar:()=>Ei,scatterND:()=>Gh,searchSorted:()=>nc,selu:()=>th,separableConv2d:()=>nh,setdiff1dAsync:()=>rh,sigmoid:()=>Nl,sign:()=>sh,signal:()=>ap,sin:()=>ah,sinh:()=>ih,slice:()=>Sl,slice1d:()=>oh,slice2d:()=>lh,slice3d:()=>uh,slice4d:()=>ch,softmax:()=>hh,softplus:()=>qu,spaceToBatchND:()=>Tc,sparse:()=>up,sparseToDense:()=>Hh,spectral:()=>sp,split:()=>mh,sqrt:()=>Ii,square:()=>Ti,squaredDifference:()=>yh,squeeze:()=>bh,stack:()=>xh,step:()=>vh,stridedSlice:()=>wh,string:()=>cp,sub:()=>Bi,sum:()=>ku,tan:()=>kh,tanh:()=>Il,tensor:()=>aa,tensor1d:()=>Nh,tensor2d:()=>Sh,tensor3d:()=>xo,tensor4d:()=>Ih,tensor5d:()=>Th,tensor6d:()=>Ch,tensorScatterUpdate:()=>Ah,tile:()=>Eu,topk:()=>_h,transpose:()=>Vh,truncatedNormal:()=>Fh,unique:()=>Dh,unsortedSegmentSum:()=>Oh,unstack:()=>Mh,upperBound:()=>Lh,variable:()=>zh,where:()=>au,whereAsync:()=>Bh,zeros:()=>lc,zerosLike:()=>Ci});var T={};n.r(T),n.d(T,{mx:()=>yS,XI:()=>uI,Nk:()=>cI,f6:()=>dI,ct:()=>dS,YG:()=>gI,hH:()=>kI,z3:()=>iT,sG:()=>yT,uM:()=>kT,vS:()=>PT,qB:()=>qT,GG:()=>XT,lg:()=>eC,rq:()=>QT,cu:()=>pC,WR:()=>cC,GE:()=>gC,px:()=>bC,jC:()=>FC,He:()=>MC,hE:()=>jC,BF:()=>ZI,Dk:()=>n$,cl:()=>c$,_B:()=>N$,ub:()=>$$,_f:()=>A$,Ku:()=>L$,qy:()=>P$,Zy:()=>Q$,bu:()=>eE,zv:()=>rS,dH:()=>TS,HS:()=>aI,yH:()=>vE,l3:()=>kE,z9:()=>SE,x6:()=>EE,_m:()=>ME,eW:()=>WE,GK:()=>GE,SP:()=>qE,yr:()=>XE,dl:()=>$T,Dw:()=>tR,xT:()=>aR,_X:()=>FS,wz:()=>dR});var C=n(43),$=n(391);class E{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class R{refCount(e){return A("refCount")}incRef(e){return A("incRef")}timerAvailable(){return!0}time(e){return A("time")}read(e){return A("read")}readSync(e){return A("readSync")}readToGPU(e,t){return A("readToGPU")}numDataIds(){return A("numDataIds")}disposeData(e,t){return A("disposeData")}write(e,t,n){return A("write")}move(e,t,n,r,s){return A("move")}createTensorFromGPUData(e,t,n){return A("createTensorFromGPUData")}memory(){return A("memory")}floatPrecision(){return A("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return A("dispose")}}function A(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function _(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,O(e,t,n)}function F(e,t,n){return Math.max(e,Math.min(t,n))}function D(e){return e%2===0?e:e+1}function O(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function M(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function L(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";M(B(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function z(e){M(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function P(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function B(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function W(e){return e%1===0}function V(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function U(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function G(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return new Promise(((s,a)=>{let i=0;const o=()=>{if(e())return void s();i++;const l=t(i);null!=n&&i>=n?a():null!=r?r(o,l):setTimeout(o,l)};o()}))}function H(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function j(e,t){const n=t.length;return M((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),M(e.every((e=>W(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function q(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:j(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=a){if(a[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==a[i]||a[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),a[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function K(e,t){return X(e,t)}function X(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Y(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function Q(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Z(e){return"string"===typeof e||e instanceof String}function J(e){return"number"===typeof e}function ee(e){return Array.isArray(e)?ee(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":J(e)?"float32":Z(e)?"string":"boolean"===typeof e?"bool":"float32"}function te(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ne(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function re(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function se(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=se(e+t*o,i,n,r)}return s}function ae(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return se(0,e,t,n)}function ie(e,t){const n=oe(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function oe(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function le(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return ae(e,new Float32Array(n));if("int32"===t)return ae(e,new Int32Array(n));if("bool"===t)return ae(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function ue(e){e.forEach((t=>{M(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function ce(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function he(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function de(e){return e&&e.then&&"function"===typeof e.then}const pe="tfjsflags";class fe{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=me,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(ge().getBool("IS_TEST")||ge().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];ge().getBool("IS_TEST")||ge().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(de(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(pe in e){e[pe].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function me(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),s=1;s<n;s++)r[s-1]=arguments[s];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,r[0],r[1]),r.join("=")})),t}function ge(){return be}let ye,be=null;function xe(){if(null==ye){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}ye=e}return ye}function ve(e,t){const n=function(){const e=xe();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const we="Abs",ke="Acos",Ne="Acosh",Se="Add",Ie="AddN",Te="All",Ce="Any",$e="ArgMax",Ee="ArgMin",Re="Asin",Ae="Asinh",_e="Atan",Fe="Atanh",De="Atan2",Oe="AvgPool",Me="AvgPoolGrad",Le="AvgPool3D",ze="AvgPool3DGrad",Pe="BatchMatMul",Be="BatchToSpaceND",We="Bincount",Ve="BitwiseAnd",Ue="BroadcastArgs",Ge="Cast",He="Ceil",je="ClipByValue",qe="Complex",Ke="ComplexAbs",Xe="Concat",Ye="Conv2D",Qe="Conv2DBackpropFilter",Ze="Conv2DBackpropInput",Je="Conv3D",et="Conv3DBackpropFilterV2",tt="Conv3DBackpropInputV2",nt="Cos",rt="Cosh",st="Cumprod",at="Cumsum",it="CropAndResize",ot="DenseBincount",lt="DepthToSpace",ut="DepthwiseConv2dNative",ct="DepthwiseConv2dNativeBackpropFilter",ht="DepthwiseConv2dNativeBackpropInput",dt="Diag",pt="Dilation2D",ft="Dilation2DBackpropInput",mt="Dilation2DBackpropFilter",gt="Draw",yt="RealDiv",bt="Einsum",xt="Elu",vt="EluGrad",wt="Erf",kt="Equal",Nt="Exp",St="ExpandDims",It="Expm1",Tt="FFT",Ct="Fill",$t="FlipLeftRight",Et="Floor",Rt="FloorDiv",At="FusedBatchNorm",_t="GatherV2",Ft="GatherNd",Dt="Greater",Ot="GreaterEqual",Mt="Identity",Lt="IFFT",zt="Imag",Pt="IsFinite",Bt="IsInf",Wt="IsNan",Vt="LeakyRelu",Ut="Less",Gt="LessEqual",Ht="LinSpace",jt="Log",qt="Log1p",Kt="LogicalAnd",Xt="LogicalNot",Yt="LogicalOr",Qt="LRN",Zt="LRNGrad",Jt="Max",en="Maximum",tn="MaxPool",nn="MaxPoolGrad",rn="MaxPool3D",sn="MaxPool3DGrad",an="MaxPoolWithArgmax",on="Mean",ln="Min",un="Minimum",cn="MirrorPad",hn="Mod",dn="Multinomial",pn="Multiply",fn="Neg",mn="NotEqual",gn="NonMaxSuppressionV3",yn="NonMaxSuppressionV4",bn="NonMaxSuppressionV5",xn="OnesLike",vn="OneHot",wn="Pack",kn="PadV2",Nn="Pow",Sn="Prelu",In="Prod",Tn="RaggedGather",Cn="RaggedRange",$n="RaggedTensorToTensor",En="Range",Rn="Real",An="Reciprocal",_n="Relu",Fn="Reshape",Dn="ResizeNearestNeighbor",On="ResizeNearestNeighborGrad",Mn="ResizeBilinear",Ln="ResizeBilinearGrad",zn="Relu6",Pn="Reverse",Bn="Round",Wn="Rsqrt",Vn="ScatterNd",Un="TensorScatterUpdate",Gn="SearchSorted",Hn="Select",jn="Selu",qn="Slice",Kn="Sin",Xn="Sinh",Yn="Sign",Qn="Sigmoid",Zn="Softplus",Jn="Sqrt",er="Sum",tr="SpaceToBatchND",nr="SplitV",rr="Softmax",sr="SparseFillEmptyRows",ar="SparseReshape",ir="SparseSegmentMean",or="SparseSegmentSum",lr="SparseToDense",ur="SquaredDifference",cr="Square",hr="StaticRegexReplace",dr="StridedSlice",pr="StringNGrams",fr="StringSplit",mr="StringToHashBucketFast",gr="Sub",yr="Tan",br="Tanh",xr="Tile",vr="TopK",wr="Transform",kr="Transpose",Nr="Unique",Sr="Unpack",Ir="UnsortedSegmentSum",Tr="ZerosLike",Cr="Step",$r="FromPixels",Er="RotateWithOffset",Rr="_FusedMatMul",Ar="FusedConv2D",_r="FusedDepthwiseConv2D";function Fr(){ge().getBool("IS_TEST")||ge().getBool("PROD")||console.warn(...arguments)}function Dr(){ge().getBool("IS_TEST")||ge().getBool("PROD")||console.log(...arguments)}const Or=ve("kernelRegistry",(()=>new Map)),Mr=ve("gradRegistry",(()=>new Map));function Lr(e,t){const n=Vr(e,t);return Or.get(n)}function zr(e){return Mr.get(e)}function Pr(e){const t=Or.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function Br(e){const{kernelName:t,backendName:n}=e,r=Vr(t,n);Or.has(r)&&Fr(`The kernel '${t}' for backend '${n}' is already registered`),Or.set(r,e)}function Wr(e){const{kernelName:t}=e;Mr.has(t)&&ge().getBool("DEBUG")&&Fr(`Overriding the gradient for '${t}'`),Mr.set(t,e)}function Vr(e,t){return`${t}_${e}`}function Ur(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Gr=n(353);const Hr=n.n(Gr)()||Gr;function jr(e){return Hr.fromString(e,!0,16)}const qr=jr("c3a5c85c97cb3127"),Kr=jr("b492b66fbe98f273"),Xr=jr("9ae16a3b2f90404f");function Yr(e){return e.xor(e.shru(47))}function Qr(e,t,n){const r=e.slice(t,t+n);return Hr.fromBytes(Array.from(r),!0,!0)}function Zr(e,t){return Qr(e,t,8)}function Jr(e,t){return Qr(e,t,4)}function es(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function ts(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:jr("9ddfea08eb382d69"),r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function ns(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=es(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(es(s,44)),[s.add(r),a.add(i)]}(Zr(e,t),Zr(e,t+8),Zr(e,t+16),Zr(e,t+24),n,r)}function rs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Hr.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=Xr.add(2*t),r=Zr(e,0).add(Xr),s=Zr(e,t-8);return ts(es(s,37).mul(n).add(r),es(r,25).add(s).mul(n),n)}if(t>=4){const n=Xr.add(2*t);return ts(Jr(e,0).shl(3).add(t),Jr(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Yr(Xr.mul(n).xor(qr.mul(r))).mul(Xr)}return Xr}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Xr.add(2*t),r=Zr(e,0).mul(Kr),s=Zr(e,8),a=Zr(e,t-8).mul(n),i=Zr(e,t-16).mul(Xr);return ts(es(r.add(s),43).add(es(a,30)).add(i),r.add(es(s.add(Xr),18)).add(a),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Xr.add(2*t),r=Zr(e,0).mul(Xr),s=Zr(e,8),a=Zr(e,t-8).mul(n),i=Zr(e,t-16).mul(Xr),o=es(r.add(s),43).add(es(a,30)).add(i),l=ts(o,r.add(es(s.add(Xr),18)).add(a),n),u=Zr(e,16).mul(n),c=Zr(e,24),h=o.add(Zr(e,t-32)).mul(n),d=l.add(Zr(e,t-24)).mul(n);return ts(es(u.add(c),43).add(es(h,30)).add(d),u.add(es(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(Kr).add(113),a=Yr(s.mul(Xr).add(113)).mul(Xr),i=[Hr.UZERO,Hr.UZERO],o=[Hr.UZERO,Hr.UZERO];r=r.mul(Xr).add(Zr(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=es(r.add(s).add(i[0]).add(Zr(e,l+8)),37).mul(Kr),s=es(s.add(i[1]).add(Zr(e,l+48)),42).mul(Kr),r=r.xor(o[1]),s=s.add(i[0]).add(Zr(e,l+40)),a=es(a.add(o[0]),33).mul(Kr),i=ns(e,l,i[1].mul(Kr),r.add(o[0])),o=ns(e,l+32,a.add(o[1]),s.add(Zr(e,l+16))),[a,r]=[r,a],l+=64}while(l!==u);const h=Kr.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=es(r.add(s).add(i[0]).add(Zr(e,l+8)),37).mul(h),s=es(s.add(i[1]).add(Zr(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(Zr(e,l+40))),a=es(a.add(o[0]),33).mul(h),i=ns(e,l,i[1].mul(h),r.add(o[0])),o=ns(e,l+32,a.add(o[1]),s.add(Zr(e,l+16))),[a,r]=[r,a],ts(ts(i[0],o[0],h).add(Yr(s).mul(qr)).add(a),ts(i[1],o[1],h).add(r),h)}function ss(e,t){return"string"===t?os(e):as([e],t)}function as(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=cs(e)),ge().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function is(){return ge().platform.now()}function os(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",ge().platform.encode(e,t)}function ls(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",ge().platform.decode(e,t)}function us(e){return null!=ge().platform.isTypedArray?ge().platform.isTypedArray(e):Ur(e)}function cs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||de(e)||null==e||us(e)&&n)t.push(e);else if(Array.isArray(e)||us(e))for(let r=0;r<e.length;++r)cs(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)cs(e[s],t,n)}return t}class hs{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ps)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=is();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:is()-i})}if(ge().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){const t=r[o];t.data().then((n=>{ds(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function ds(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class ps{logKernelProfile(e,t,n,r,s,a){const i="number"===typeof r?U(`${r}ms`,9):r.error,o=U(e,25),l=t.rank,u=t.size,c=U(t.shape.toString(),14);let h="";for(const d in s){const e=s[d];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${d}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function fs(e,t,n,r){const s=re(t),a=function(e,t,n,r){const s=P(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?bs(e):e;if(o>1)for(let u=0;u<s/a;u++){const e=u*a;for(let t=0;t<a;t++)i[t]=Math.max(i[t],ms(l[e+t],0,n).length)}return i}(e,t,n,s),i=t.length,o=ys(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function ms(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Z(e)?`'${e}'`:"bool"===n?gs(e):parseFloat(e.toFixed(7)).toString(),U(r,t)}function gs(e){return 0===e?"false":"true"}function ys(e,t,n,r,s){let a=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[ms(bs(e)[0],0,n)]}return"bool"===n?[gs(e[0])]:[e[0].toString()]}if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=bs(r),a=bs(a)),["["+r.map(((e,t)=>ms(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>ms(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?bs(e):Array.from(e)).map(((e,t)=>ms(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;d.push(...ys(e.slice(r,a),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;d.push(...ys(e.slice(r,a),u,n,c,s,t===o-1))}}else for(let m=0;m<o;m++){const t=m*h,r=t+h;d.push(...ys(e.slice(t,r),u,n,c,s,m===o-1))}const p=2===l?",":"";d[0]="["+(o>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<l;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function bs(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class xs{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=P(e),null!=n){const e=n.length;M(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||X(t,this.size),this.strides=re(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),M(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));const s=this.locToIndex(n);this.values[s]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(const a of t){if(a<0||a>=this.shape[r]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}r++}let s=t[t.length-1];for(let a=0;a<t.length-1;++a)s+=this.strides[a]*t[a];return this.values[s]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return vs().makeTensor(this.values,this.shape,this.dtype)}}let vs=null,ws=null,ks=null;class Ns{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=P(e),this.strides=re(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ws.buffer(this.shape,this.dtype,e)}bufferSync(){return ws.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ae(this.shape,e,"complex64"===this.dtype)}arraySync(){return ae(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=vs().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>ls(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),vs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=vs().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ls(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await vs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),vs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return ws.print(this,e)}clone(){return this.throwIfDisposed(),ws.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return fs(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ws.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),vs().makeVariable(this,e,t,n)}}function Ss(){return ve("Tensor",(()=>Ns))}Object.defineProperty(Ns,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ss();class Is extends Ns{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!B(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);vs().disposeTensor(this),this.dataId=e.dataId,vs().incRef(this,null)}dispose(){vs().disposeVariable(this),this.isDisposedInternal=!0}}var Ts,Cs,$s,Es,Rs;Object.defineProperty(Is,Symbol.hasInstance,{value:e=>e instanceof Ns&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ts||(Ts={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Cs||(Cs={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}($s||($s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Es||(Es={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Rs||(Rs={}));const As={float32:Es,int32:Cs,bool:$s,complex64:Rs};function _s(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return As[e][t]}function Fs(e){return _s(e,"int32")}function Ds(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Os(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Ms(e,t){if(e.dtype===t.dtype)return[e,t];const n=_s(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ls(e,t){return t.some((t=>t.id===e.id))}function zs(e){const t=[];return Ps(e,t,new Set),t}function Ps(e,t,n){if(null==e)return;if(e instanceof Ns)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!==typeof r)return;var r;const s=e;for(const a in s){const e=s[a];n.has(e)||(n.add(e),Ps(e,t,n))}}function Bs(e){return null!=e.kernelName}class Ws{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Vs{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ws}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(Fr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new hs(this.backendInstance),!0}setupRegisteredKernels(){Pr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Pr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof R||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Fr(`Initialization of backend ${e} failed`),Fr(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return Fr(`Initialization of backend ${e} failed`),Fr(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return Vs.nextTensorId++}nextVariableId(){return Vs.nextVariableId++}clone(e){const t=Gs.runKernel(Mt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return Gs.runKernel(Ge,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Lr(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Bs(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Bs(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=Lr(t,this.backendName);M(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Bs(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=zr(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(M(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&Z(e[0])&&(s=e.map((e=>os(e))));const a=r.write(s,t,n),i=new Ns(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new Ns(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new Is(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Q(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Is||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Q(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=zr(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=oe(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=zs(e),n=new Set(t.map((e=>e.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(M(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));M(s instanceof Ns,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],a=n.inputs;for(const e in a){const i=a[e];let o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[n.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(a[t.outputs[e].id]){for(const e in n)a[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(s[t.id]&&i[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=ie(P(e),"float32");return Gs.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!B(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Hs);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){var t=this;return M(te(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];let a;M(r.every((e=>e instanceof Ns)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const i={};r.forEach(((e,t)=>{i[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(a=e(...r,n),M(a.value instanceof Ns,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),M(te(a.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),a.value),backwardsFunc:(e,t)=>{const n=a.gradFunc(e,t),s=Array.isArray(n)?n:[n];M(s.length===r.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),M(s.every((e=>e instanceof Ns)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=is(),n=await this.backend.time(e);return n.wallMs=is()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ws;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Us(){const e=xe();if(null==e._tfengine){const t=new fe(e);e._tfengine=new Vs(t)}var t;return t=e._tfengine.ENV,be=t,vs=()=>e._tfengine,e._tfengine}Vs.nextTensorId=0,Vs.nextVariableId=0;const Gs=Us();function Hs(e,t){const n={a:e,b:t};return Gs.runKernel(Se,n)}let js;function qs(e){if(void 0!==js)return js;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Ks(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}const Xs=ge();function Ys(e,t){let n=e;if(us(e))return"string"===t?[]:[e.length];if(Ds(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Os(e))return[e.buffer.size/(null==t?4:Q(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||us(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&ge().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Qs(e,r,[]),r}function Qs(e,t,n){if(n=n||[],!Array.isArray(e)&&!us(e))return void M(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));M(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),M(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let s=0;s<e.length;++s)Qs(e[s],r,n.concat(s))}function Zs(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Js(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof Ss())return Zs(r,e.dtype,t,n),e;let s=ee(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Zs(r,s,t,n),null==e||!us(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Ys(e,s);us(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?as(e,s):cs(e,[],!0);return Gs.makeTensor(i,a,s)}function ea(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Js(e,`${t}[${s}]`,n,r)))}Xs.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Xs.registerFlag("IS_BROWSER",(()=>Ks())),Xs.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),Xs.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Xs.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Xs.registerFlag("PROD",(()=>!1)),Xs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Xs.getBool("DEBUG"))),Xs.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Xs.registerFlag("IS_TEST",(()=>!1)),Xs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Xs.getBool("DEBUG"))),Xs.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Xs.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Xs.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const ta="__op";function na(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=ta;const s=function(){Gs.startScope(n);try{const e=r(...arguments);return de(e)&&console.error("Cannot return a Promise inside of tidy."),Gs.endScope(e),e}catch(e){throw Gs.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const ra=na({complex_:function(e,t){const n=Js(e,"real","complex"),r=Js(t,"imag","complex");L(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Gs.runKernel(qe,s)}});function sa(e,t,n,r){if(null==r)r=ee(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Os(e)||Ds(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return Gs.backend.createTensorFromGPUData(e,t||n,r)}if(!us(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ue(t);const e=P(t),r=P(n);M(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==P(t.slice(s));M(n[s]===t[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return us(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?as(e,r):cs(e,[],!0),Gs.makeTensor(e,t,r)}function aa(e,t,n){return sa(e,t,Ys(e,n),n)}const ia={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class oa{static join(e){return new oa(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>us(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let i=n;i<this.shards.length;i++){const n=this.shards[i],r=e+a-n.start,o=a,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,r,l-r);if(s.set(u,o),a+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function la(){return Gs}function ua(){return Gs.memory()}function ca(e,t){return Gs.tidy(e,t)}function ha(e){zs(e).forEach((e=>e.dispose()))}function da(e){return Gs.keep(e)}function pa(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Gs.registerBackend(e,t,n)}function fa(){return Gs.backend}ks=function(e){ge().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const ma=4;async function ga(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+ma*t.length,r=new Uint8Array(n);let s=0;for(let a=0;a<t.length;a++){const e=t[a],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=ma,r.set(e,s),s+=e.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Na(await Promise.all(r)),specs:n}}function ya(e,t){const n=new oa(e),r={};let s=0;for(const a of t){const e=ba(a,((e,t)=>n.slice(s+e,s+t)));r[a.name]=va(a,n.slice(s,s+e)),s+=e}return r}function ba(e,t){const n=P(e.shape);let r;if("quantization"in e){const t=e.quantization;r=ia[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=ma+new Uint32Array(t(e,e+ma))[0];return e}r=ia[e.dtype]}return n*r}async function xa(e,t){const n=P(e.shape);let r;if("quantization"in e){const t=e.quantization;r=ia[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=ma+new Uint32Array(await t(e,e+ma))[0];return e}r=ia[e.dtype]}return n*r}function va(e,t){const n=e.name,r=e.dtype,s=e.shape,a=P(s);let i,o=0;if("quantization"in e){const s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${e.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==r)throw new Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${r}.`)}const l=ia[s.dtype],u="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===r)if("uint8"===s.dtype||"uint16"===s.dtype){i=new Float32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let i=0;i<r.length;i++){const s=r[i],o=e[n[s>>10]+(1023&s)]+t[s>>10];a[i]=o}return new Float32Array(s)}}();i=e(u)}}else{if("int32"!==r)throw new Error(`Unsupported dtype in weight '${n}': ${r}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=Math.round(t*s.scale+s.min)}}o+=a*l}else if("string"===r){const n=P(e.shape);i=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+ma))[0];o+=ma;const n=new Uint8Array(t.slice(o,o+e));i.push(n),o+=e}}else{const e=ia[r];if("float32"===r)i=new Float32Array(t);else if("int32"===r)i=new Int32Array(t);else{if("bool"!==r){if("complex64"===r){i=new Float32Array(t);const e=new Float32Array(i.length/2),n=new Float32Array(i.length/2);for(let t=0;t<e.length;t++)e[t]=i[2*t],n[t]=i[2*t+1];const r=aa(e,s,"float32"),a=aa(n,s,"float32"),o=ra(r,a);return r.dispose(),a.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${r}`)}i=new Uint8Array(t)}o+=a*e}return aa(i,s,r)}async function wa(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){const{done:t,value:s}=await e.read();if(t&&null==s){const e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const a=new Uint8Array(r.length+s.byteLength);a.set(r,0),a.set(new Uint8Array(s),r.length),r=a}return r.buffer}async function ka(e,t){const n={},r=e.getReader();let s=new ArrayBuffer(0);for(const a of t){const e=await xa(a,(async(e,t)=>(s=await wa(r,s,t),s.slice(e,t))));s=await wa(r,s,e);const t=s.slice(0,e);s=s.slice(e);const i=va(a,t);if(n[a.name]=i,"webgpu"===Gs.backendName){const e=fa();"uploadToGPU"in e&&P(i.shape)>=ge().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function Na(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Sa="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function Ia(e){return Sa?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Ta(e){return oa.join(e)}function Ca(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function $a(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Ea(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function Ra(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),Ea(e,n,r)}function Aa(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ia(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ia(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new oa(e.weightData).byteLength}}function _a(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Fa{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Fa.instance&&(Fa.instance=new Fa),Fa.instance}static registerSaveRouter(e){Fa.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Fa.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Fa.getHandlers(e,"save")}static getLoadHandlers(e,t){return Fa.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Fa.getInstance().loadRouters:Fa.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Da=e=>Fa.registerSaveRouter(e),Oa=e=>Fa.registerLoadRouter(e),Ma=e=>Fa.getSaveHandlers(e),La=(e,t)=>Fa.getLoadHandlers(e,t),za="tensorflowjs",Pa="models_store",Ba="model_info_store";function Wa(){if(!ge().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Va(e){const t=e.result;t.createObjectStore(Pa,{keyPath:"modelPath"}),t.createObjectStore(Ba,{keyPath:"modelPath"})}class Ua{constructor(e){if(this.indexedDB=Wa(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(za,1);r.onupgradeneeded=()=>Va(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Pa,"readonly"),r=t.objectStore(Pa).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=oa.join(t.weightData);const r=Aa(t),i=s.transaction(Ba,"readwrite");let o,l,u=i.objectStore(Ba);try{o=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(a){return n(a)}o.onsuccess=()=>{l=s.transaction(Pa,"readwrite");const o=l.objectStore(Pa);let c;try{c=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(a){return n(a)}c.onsuccess=()=>e({modelArtifactsInfo:r}),c.onerror=e=>{u=i.objectStore(Ba);const t=u.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(c.error)),t.onerror=e=>(s.close(),n(c.error))}},o.onerror=e=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Ua.URL_SCHEME="indexeddb://";const Ga=e=>{return ge().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ua.URL_SCHEME)?(t=e.slice(Ua.URL_SCHEME.length),new Ua(t)):null;var t};Fa.registerSaveRouter(Ga),Fa.registerLoadRouter(Ga);class Ha{constructor(){this.indexedDB=Wa()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(za,1);n.onupgradeneeded=()=>Va(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Ba,"readonly"),a=s.objectStore(Ba).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Ua.URL_SCHEME)?t.slice(Ua.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(za,1);r.onupgradeneeded=()=>Va(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Ba,"readwrite"),i=a.objectStore(Ba),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(Pa,"readwrite");const r=l.objectStore(Pa).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const ja="/",qa="tensorflowjs_models",Ka="info",Xa="model_topology",Ya="weight_specs",Qa="weight_data",Za="model_metadata";function Ja(e){return{info:[qa,e,Ka].join(ja),topology:[qa,e,Xa].join(ja),weightSpecs:[qa,e,Ya].join(ja),weightData:[qa,e,Qa].join(ja),modelMetadata:[qa,e,Za].join(ja)}}function ei(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ti(e){const t=e.split(ja);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ja)}class ni{constructor(e){if(!ge().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Ja(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=Aa(e),a=oa.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(e){if(Sa)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(a));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:s}}catch(t){throw ei(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Sa){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(a),t}}ni.URL_SCHEME="localstorage://";const ri=e=>{return ge().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ni.URL_SCHEME)?(t=e.slice(ni.URL_SCHEME.length),new ni(t)):null;var t};Fa.registerSaveRouter(ri),Fa.registerLoadRouter(ri);class si{constructor(){M(ge().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),M("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=qa+ja,n=ja+Ka;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[ti(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=Ja(e=(t=e).startsWith(ni.URL_SCHEME)?t.slice(ni.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ei(n),r}}const ai="://";class ii{constructor(){this.managers={}}static getInstance(){return null==ii.instance&&(ii.instance=new ii),ii.instance}static registerManager(e,t){M(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(ai)&&(e=e.slice(0,e.indexOf(ai))),M(e.length>0,(()=>"scheme must not be an empty string."));const n=ii.getInstance();M(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=ii.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ii.getInstance().managers)}}function oi(e){if(-1===e.indexOf(ai))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ii.getSchemes().join(",")}`);return{scheme:e.split(ai)[0],path:e.split(ai)[1]}}async function li(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];M(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Fa.getLoadHandlers(e);M(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),M(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=Fa.getSaveHandlers(t);M(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),M(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=a[0],o=oi(e).scheme,l=oi(e).path,u=o===oi(e).scheme,c=await s.load();n&&u&&await ii.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await ii.getManager(o).removeModel(l),h.modelArtifactsInfo}async function ui(){const e=ii.getSchemes(),t={};for(const n of e){const e=await ii.getManager(n).listModels();for(const r in e){t[n+ai+r]=e[r]}}return t}async function ci(e){const t=oi(e);return ii.getManager(t.scheme).removeModel(t.path)}async function hi(e,t){return li(e,t,!1)}async function di(e,t){return li(e,t,!0)}class pi{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&ge().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return Ur(e)}}if(ge().get("IS_BROWSER")){ge().setPlatform("browser",new pi);try{ii.registerManager(ni.URL_SCHEME,new si)}catch(cB){}try{ii.registerManager(Ua.URL_SCHEME,new Ha)}catch(cB){}}const fi=()=>n(817);let mi;class gi{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ge().global.fetch?ge().global.fetch(e,t):(null==mi&&(mi=fi()),mi(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function yi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",ue(e),new xs(e,t,n)}ge().get("IS_NODE")&&!ge().get("IS_BROWSER")&&ge().setPlatform("node",new gi);const bi=na({cast_:function(e,t){const n=Js(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Gs.runKernel(Ge,r,s)}});const xi=na({clone_:function(e){const t={x:Js(e,"x","clone","string_or_numeric")};return Gs.runKernel(Mt,t)}});function vi(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}Us();ws={buffer:yi,cast:bi,clone:xi,print:vi};const wi=na({add_:function(e,t){let n=Js(e,"a","add"),r=Js(t,"b","add");[n,r]=Ms(n,r);const s={a:n,b:r};return Gs.runKernel(Se,s)}});const ki=na({floorDiv_:function(e,t){let n=Js(e,"a","floorDiv"),r=Js(t,"b","floorDiv");[n,r]=Ms(n,r);const s={a:n,b:r};return Gs.runKernel(Rt,s)}});const Ni=na({div_:function(e,t){let n=Js(e,"a","div"),r=Js(t,"b","div");if([n,r]=Ms(n,r),"int32"===n.dtype&&"int32"===r.dtype)return ki(n,r);const s={a:n,b:r};return Gs.runKernel(yt,s,{})}});const Si=na({mul_:function(e,t){let n=Js(e,"a","mul"),r=Js(t,"b","mul");[n,r]=Ms(n,r);const s={a:n,b:r};return Gs.runKernel(pn,s)}});const Ii=na({sqrt_:function(e){const t={x:Js(e,"x","sqrt","float32")};return Gs.runKernel(Jn,t)}});const Ti=na({square_:function(e){const t=Js(e,"x","square");return Gs.runKernel("Square",{x:t},{})}});const Ci=na({zerosLike_:function(e){const t={x:Js(e,"x","zerosLike")};return Gs.runKernel(Tr,t)}});function $i(e){return Gs.customGrad(e)}function Ei(e,t){if((us(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&us(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return sa(e,[],[],t)}const Ri=new Map,Ai=new Map;class _i{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Fi{constructor(){this.classNameMap={}}static getMap(){return null==Fi.instance&&(Fi.instance=new Fi),Fi.instance}static register(e){Fi.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Di(e,t,n){M(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),M("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),M(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const r=t+">"+n;return Fi.register(e),Ri.set(r,e),Ai.set(e,r),e}class Oi extends _i{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return ha(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){M(te(e),(()=>"The f passed in variableGrads(f) must be a function")),M(null==t||Array.isArray(t)&&t.every((e=>e instanceof Is)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Gs.registeredVariables)t.push(Gs.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;t=t.filter((e=>e.trainable)),M(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=Gs.gradients(e,t,null,!0);M(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),M(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&ha(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ei(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Oi,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Mi extends Oi{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Gs.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Gs.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:ca((()=>Ci(r).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:ca((()=>Ci(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;ca((()=>{const e=wi(Si(i,this.rho),Si(Ti(a),1-this.rho)),t=Si(Ni(Ii(wi(o,this.epsilon)),Ii(wi(i,this.epsilon))),a),n=wi(Si(o,this.rho),Si(Ti(t),1-this.rho));i.assign(e),o.assign(n);const s=wi(Si(t,-this.learningRate),r);r.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ha(this.accumulatedGrads.map((e=>e.variable))),ha(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Li(e,t,n){ue(e);const r={shape:e,value:t,dtype:n=n||ee(t)};return Gs.runKernel(Ct,{},r)}class zi extends Oi{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Gs.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:ca((()=>Li(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;ca((()=>{const e=wi(a,Ti(s));a.assign(e);const t=wi(Si(Ni(s,Ii(wi(e,Gs.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ha(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Pi=na({pow_:function(e,t){let n=Js(e,"base","pow"),r=Js(t,"exp","pow");[n,r]=Ms(n,r);const s={a:n,b:r};return Gs.runKernel(Nn,s)}});const Bi=na({sub_:function(e,t){let n=Js(e,"a","sub"),r=Js(t,"b","sub");[n,r]=Ms(n,r);const s={a:n,b:r};return Gs.runKernel(gr,s)}});class Wi extends Oi{static get className(){return"Adam"}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ca((()=>{this.accBeta1=Ei(t).variable(),this.accBeta2=Ei(n).variable()})),null==r&&(this.epsilon=Gs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ca((()=>{const n=Bi(1,this.accBeta1),r=Bi(1,this.accBeta2);t.forEach(((t,s)=>{const a=Gs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:ca((()=>Ci(a).variable(i)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:ca((()=>Ci(a).variable(i)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,c=wi(Si(l,this.beta1),Si(o,1-this.beta1)),h=wi(Si(u,this.beta2),Si(Ti(o),1-this.beta2)),d=Ni(c,n),p=Ni(h,r);l.assign(c),u.assign(h);const f=wi(Si(Ni(d,wi(Ii(p),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign(Si(this.accBeta1,this.beta1)),this.accBeta2.assign(Si(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ha(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&ha(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),ca((()=>{this.accBeta1.assign(Pi(this.beta1,this.iterations_+1)),this.accBeta2.assign(Pi(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const Vi=na({abs_:function(e){const t=Js(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Gs.runKernel(Ke,e)}{const e={x:t};return Gs.runKernel(we,e)}}});function Ui(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Gi(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Hi(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===a)r[n-s-1]=i;else if(1===i)r[n-s-1]=a;else{if(a!==i){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-s-1]=a}}return r}const ji=na({maximum_:function(e,t){let n=Js(e,"a","maximum"),r=Js(t,"b","maximum");[n,r]=Ms(n,r),"bool"===n.dtype&&(n=bi(n,"int32"),r=bi(r,"int32")),Hi(n.shape,r.shape);const s={a:n,b:r};return Gs.runKernel(en,s)}});class qi extends Oi{static get className(){return"Adamax"}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ca((()=>{this.iteration=Ei(0).variable(),this.accBeta1=Ei(t).variable()})),null==r&&(this.epsilon=Gs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ca((()=>{const n=Bi(1,this.accBeta1),r=Ni(-this.learningRate,wi(Si(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=Gs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Ci(a).variable(i)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:Ci(a).variable(i)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,c=wi(Si(l,this.beta1),Si(o,1-this.beta1)),h=Si(u,this.beta2),d=Vi(o),p=ji(h,d);l.assign(c),u.assign(p);const f=wi(Si(Ni(r,n),Ni(c,wi(p,this.epsilon))),a);a.assign(f)})),this.iteration.assign(wi(this.iteration,1)),this.accBeta1.assign(Si(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ha(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&ha(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Ki extends Oi{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=Gs.registeredVariables[t];ca((()=>{const e=wi(Si(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=da(Ei(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Xi extends Ki{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ei(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Gs.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:ca((()=>Ci(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&ca((()=>{let e;const t=wi(Si(this.m,s),a);e=this.useNesterov?wi(Si(this.c,wi(a,Si(t,this.m))),r):wi(Si(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ha(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Yi extends Oi{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Gs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Gs.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:ca((()=>Ci(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:ca((()=>Ci(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:ca((()=>Ci(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;ca((()=>{const e=wi(Si(i,this.decay),Si(Ti(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=wi(Si(t,this.decay),Si(a,1-this.decay)),l=Ni(Si(a,this.learningRate),Ii(Bi(e,wi(Ti(s),this.epsilon)))),u=wi(Si(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=Bi(r,u);r.assign(c)}else{const e=wi(Si(i,this.decay),Si(Ti(a),1-this.decay)),t=wi(Si(o,this.momentum),Ni(Si(a,this.learningRate),Ii(wi(e,this.epsilon))));i.assign(e),o.assign(t);const n=Bi(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ha(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ha(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&ha(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Qi=[Mi,zi,Wi,qi,Xi,Yi,Ki];function Zi(e){return new Promise((e=>setTimeout(e))).then(e)}class Ji{constructor(e){if(!ge().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ji.URL_SCHEME)&&(e=e.slice(Ji.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=oa.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=$a(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Zi((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Zi((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Aa(e)}}}}Ji.URL_SCHEME="downloads://";class eo{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=Ra(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const a of e)t.push(...a.weights),n.push(...a.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Ca(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=Ca(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function to(e){return new eo(e)}function no(e,t,n,r){!function(e){M(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){M(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),M(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),M(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function ro(e,t){null==t&&(t={});const n=null==t.fetchFunc?ge().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await no(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await no(s,t.onProgress,.5,1)}async function so(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return ao((e=>ro(e,{requestInit:r})))(e,t,n)}function ao(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0;const s=t.map((()=>!1)),a={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=ia[l]*P(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let d=0;return l.forEach((e=>{const n=t[e].paths.length,r=new oa(c.slice(d,d+n));a[e].forEach((e=>{const t=ya(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)h[n]=t[n]})),d+=n})),h}}Fa.registerSaveRouter((e=>ge().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ji.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Ji(e)}(e.slice(Ji.URL_SCHEME.length)):null));class io{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(M("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=ge().platform.fetch,M(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&M(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=$a(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=oa.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Aa(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(s){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return Ra(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=_a(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?ge().platform.fetch:t.fetchFunc;let s,a=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;a<e.length;){if(!s){const n=(await r(e[a],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:o,value:l}=await s.read();if(!o)return void n.enqueue(l);a++,s=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,a/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,a=[],i=[];for(const o of e)for(const e of o.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(s+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e);return[_a(e),await ro(t,this.loadOptions)]}}function oo(e){return null!=e.match(io.URL_SCHEME_REGEX)}io.URL_SCHEME_REGEX=/^https?:\/\//;const lo=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>oo(e))):oo(e),n)return uo(e,t)}return null};function uo(e,t){return new io(e,t)}function co(e,t){return uo(e,t)}Fa.registerSaveRouter(lo),Fa.registerLoadRouter(lo);class ho{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class po{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class fo{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function mo(e,t,n,r){return new fo(go(...arguments))}function go(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new ho(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ho({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ho({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function yo(e){return new po(e)}function bo(e){return new po(e)}function xo(e,t,n){if(z(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Ys(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return sa(e,t,r,n)}let vo,wo=!1;function ko(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=Lr($r,Gs.backendName)){const n={pixels:e},r={numChannels:t};return Gs.runKernel($r,n,r)}const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(a||s||o){if(null==vo)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");vo=new OffscreenCanvas(1,1).getContext("2d")}else vo=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});vo.canvas.width=l,vo.canvas.height=u,vo.drawImage(e,0,0,l,u),c=vo.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return xo(h,[u,l,t],"int32")}function No(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function So(e,t){let n=Js(e,"img","toPixels");if(!(e instanceof Ns)){const e=n;n=bi(e,"int32"),e.dispose()}No(n);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let u=0;u<r*s;++u){const e=[0,0,0,255];for(let r=0;r<a;r++){const t=i[u*a+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===a?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}const t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){if(!wo){null!=Lr(gt,Gs.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),wo=!0)}t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}const Io=na({fromPixels_:ko}),To=-2,Co=-1;function $o(e,t,n){const r=e.shape.length;M(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),M(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)M(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function Eo(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ro(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Ao(e,t,n,r){const s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)0===a?s[t]=1:(s.splice(t,0,1),s.pop());return s}function _o(e,t,n){return n<=e?n:n-(t-1)}function Fo(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Do(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Oo(i,l,u,r,e),h=Mo(o,l,u,s,e),d=Ao(a,l,u,e)}else for(let p=0;p<u;p++)c[p]=zo(i,r,a,e,p,l),h[p]=Po(o,s,a,e,p,l),d[p]=Lo(a,p,l);return{begin:c,end:h,strides:d}}function Oo(e,t,n,r,s){const a=[...s],i=Fo(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{const s=_o(t,n,o);let i=r[s];e&1<<s&&(i=0),a[o]=i}return a}function Mo(e,t,n,r,s){const a=[...s],i=Fo(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=Number.MAX_SAFE_INTEGER;else{const s=_o(t,n,o);let i=r[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),a[o]=i}for(let o=0;o<a.length;o++){const e=s[o];a[o]<0&&(a[o]+=e),a[o]=F(0,a[o],s[o])}return a}function Lo(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function zo(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=F(0,i,l-1),i}function Po(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?F(0,i,l):F(-1,i,l-1),i}function Bo(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Wo(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Vo(e,t,n){let r;const s=e.shape.length;let a;return r="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{M(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(M(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Uo(e,t,n,r,s,a,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&0!==(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)c&&0!==(1<<b&o)&&h.numAddAxisAfterEllipsis++,1<<b&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(To),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(Co),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===d.strides[b])throw Error(`strides[${b}] must be non-zero`);const t=!!(d.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const r=[d.beginMask&1<<b,d.endMask&1<<b],s=[d.strides[b]>0?0:-1,d.strides[b]>0?n:n-1];if(t&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[b];const a=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(t){const e=d.begin[b]<0?n+d.begin[b]:d.begin[b];if(d.begin[b]=e,d.end[b]=d.begin[b]+1,e<0||e>=n)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=Go(d.begin[b],0,d.strides[b],n,r,s),d.end[b]=Go(d.end[b],1,d.strides[b],n,r,s);const e=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===n;p=p&&e,f=f&&(0===b&&1===d.strides[b]||e)}else p=p&&1===d.strides[b]&&a,f=f&&(0===b&&1===d.strides[b]||a);let i,o=!1;if(d.beginValid&&d.endValid?(i=d.end[b]-d.begin[b],o=!0):t?(i=1,o=!0):a&&n>=0&&(i=d.strides[b]<0?-n:n,o=!0),o){let e;e=0===i||i<0!==d.strides[b]<0?0:Math.trunc(i/d.strides[b])+(i%d.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const e=d.finalShapeGatherIndices[b];e>=0?y.push(g[e]):e===To&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>d.finalShapeGatherIndices[t]!==To)),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Go(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}const Ho=na({acos_:function(e){const t={x:Js(e,"x","acos")};return Gs.runKernel(ke,t)}});const jo=na({acosh_:function(e){const t={x:Js(e,"x","acosh")};return Gs.runKernel(Ne,t)}});const qo=na({addN_:function(e){M(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),M(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Js(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!B(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return Gs.runKernel(Ie,r)}});const Ko=na({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:Js(e,"x","all","bool")},s={axis:t,keepDims:n};return Gs.runKernel(Te,r,s)}});const Xo=na({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:Js(e,"x","any","bool")},s={axis:t,keepDims:n};return Gs.runKernel(Ce,r,s)}});const Yo=na({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:Js(e,"x","argMax")},r={axis:t};return Gs.runKernel($e,n,r)}});const Qo=na({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:Js(e,"x","argMin")},r={axis:t};return Gs.runKernel(Ee,n,r)}});const Zo=na({asin_:function(e){const t={x:Js(e,"x","asin")};return Gs.runKernel(Re,t)}});const Jo=na({asinh_:function(e){const t={x:Js(e,"x","asinh")};return Gs.runKernel(Ae,t)}});const el=na({atan_:function(e){const t={x:Js(e,"x","atan")};return Gs.runKernel(_e,t)}});const tl=na({atan2_:function(e,t){let n=Js(e,"a","atan2"),r=Js(t,"b","atan2");[n,r]=Ms(n,r);const s={a:n,b:r};return Gs.runKernel(De,s)}});const nl=na({atanh_:function(e){const t={x:Js(e,"x","atanh")};return Gs.runKernel(Fe,t)}});function rl(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",a=arguments.length>5?arguments[5]:void 0;return il(e,[...t,e[3]],n,a,r,null,null,gl(s))}function sl(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[o,l]=ul(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return il(e,u,n,r,s,a,!1,i)}function al(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[o,l,u]=cl(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return ol(e,c,n,r,s,!1,h,a)}function il(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[m,g]=ul(n),[y,b]=ul(r),x=hl(d,y),v=hl(p,b),{padInfo:w,outHeight:k,outWidth:N}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"===typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=ll(e,t,n));const a=e[0],i=e[1],o=dl((a-t+2*r)/n+1,s),l=dl((i-t+2*r)/n+1,s);return[o,l]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=dl((t-a+d+p)/r+1,o),h=dl((n-i+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,x,v,a,o),S=i?f*h:f;let I;return"channelsFirst"===o?I=[l,S,k,N]:"channelsLast"===o&&(I=[l,k,N,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:N,outChannels:S,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:I,filterShape:t}}function ol(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",o=arguments.length>7?arguments[7]:void 0,[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,m,,g]=t,[y,b,x]=cl(n),[v,w,k]=cl(r),N=hl(p,v),S=hl(f,w),I=hl(m,k),{padInfo:T,outDepth:C,outHeight:$,outWidth:E}=function(e,t,n,r,s,a,i,o,l,u,c){let h,d,p,f;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,r,s,a){null==s&&(s=ll(e,t[0],r[0]));const i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*s>=t[o]&&(i[o]=dl((e[o]-t[o]+2*s)/r[o]+1,a));return i}([t,n,r,1],[o,l,u],1,[s,a,i],e,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,y,b,x,N,S,I,o),R=a?g*d:g;let A;return"channelsFirst"===i?A=[l,R,C,$,E]:"channelsLast"===i&&(A=[l,C,$,E,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:C,outHeight:$,outWidth:E,outChannels:R,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:S,effectiveFilterWidth:I,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function ll(e,t,n){const r=hl(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+r)/2)}function ul(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function cl(e){return"number"===typeof e?[e,e,e]:e}function hl(e,t){return t<=1?e:e+(e-1)*(t-1)}function dl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function pl(e){const[t,n,r]=ul(e);return 1===t&&1===n&&1===r}function fl(e,t){return pl(e)||pl(t)}function ml(e){return ul(e).every((e=>e>0))}function gl(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function yl(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)M(W(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{M(W(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const bl=na({reshape_:function(e,t){const n={x:Js(e,"x","reshape","string_or_numeric")},r={shape:t};return Gs.runKernel(Fn,n,r)}});const xl=na({avgPool_:function(e,t,n,r,s){const a=Js(e,"x","avgPool","float32");M(fl(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=bl(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),yl("avgPool",r,s);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=Gs.runKernel(Oe,l,u);return c=bi(c,a.dtype),o?bl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const vl=na({avgPool3d_:function(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const i=Js(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=bl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),M(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),M("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),M("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),yl("avgPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=Gs.runKernel(Le,u,c);return h=bi(h,o.dtype),l?bl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const wl=na({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;M(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=ea(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return xi(n[0]);const r=n,s={axis:t};return Gs.runKernel(Xe,r,s)}});const kl=na({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=Js(e,"a","matMul"),a=Js(t,"b","matMul");[s,a]=Ms(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return Gs.runKernel(Pe,i,o)}});const Nl=na({sigmoid_:function(e){const t={x:Js(e,"x","sigmoid","float32")};return Gs.runKernel(Qn,t)}});const Sl=na({slice_:function(e,t,n){const r=Js(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return Gs.runKernel(qn,s,a)}});const Il=na({tanh_:function(e){const t={x:Js(e,"x","tanh","float32")};return Gs.runKernel(br,t)}});const Tl=na({basicLSTMCell_:function(e,t,n,r,s,a){const i=Js(e,"forgetBias","basicLSTMCell"),o=Js(t,"lstmKernel","basicLSTMCell"),l=Js(n,"lstmBias","basicLSTMCell"),u=Js(r,"data","basicLSTMCell"),c=Js(s,"c","basicLSTMCell"),h=Js(a,"h","basicLSTMCell"),d=wl([u,h],1),p=kl(d,o),f=wi(p,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Sl(f,[0,0],y),x=Sl(f,[0,g],y),v=Sl(f,[0,2*g],y),w=Sl(f,[0,3*g],y),k=wi(Si(Nl(b),Il(x)),Si(c,Nl(wi(i,v))));return[k,Si(Il(k),Nl(w))]}});const Cl=na({batchToSpaceND_:function(e,t,n){const r=Js(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));M(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),M(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),M(r.shape[0]%s===0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return Gs.runKernel(Be,a,i)}});const $l=na({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=Js(e,"x","batchNorm"),o=Js(t,"mean","batchNorm"),l=Js(n,"variance","batchNorm");let u,c;null!=s&&(u=Js(s,"scale","batchNorm")),null!=r&&(c=Js(r,"offset","batchNorm")),M(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),M(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),M(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?bl(e,[1,1,1,e.size]):2===e.rank?bl(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?bl(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:a},p=Gs.runKernel(At,h,d);return bl(p,i.shape)}});const El=na({batchNorm2d_:function(e,t,n,r,s,a){const i=Js(e,"x","batchNorm"),o=Js(t,"mean","batchNorm"),l=Js(n,"variance","batchNorm");let u,c;return null!=s&&(u=Js(s,"scale","batchNorm")),null!=r&&(c=Js(r,"offset","batchNorm")),M(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),M(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),M(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&M(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&M(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),$l(i,o,l,c,u,a)}});const Rl=na({batchNorm3d_:function(e,t,n,r,s,a){const i=Js(e,"x","batchNorm"),o=Js(t,"mean","batchNorm"),l=Js(n,"variance","batchNorm");let u,c;return null!=s&&(u=Js(s,"scale","batchNorm")),null!=r&&(c=Js(r,"offset","batchNorm")),M(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),M(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),M(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&M(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&M(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),$l(i,o,l,c,u,a)}});const Al=na({batchNorm4d_:function(e,t,n,r,s,a){const i=Js(e,"x","batchNorm"),o=Js(t,"mean","batchNorm"),l=Js(n,"variance","batchNorm");let u,c;return null!=s&&(u=Js(s,"scale","batchNorm")),null!=r&&(c=Js(r,"offset","batchNorm")),M(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),M(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),M(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&M(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&M(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),$l(i,o,l,c,u,a)}});const _l=na({bincount_:function(e,t,n){const r=Js(e,"x","bincount"),s=Js(t,"weights","bincount");M("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),M(n>=0,(()=>`size must be non-negative, but got ${n}.`)),M(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return Gs.runKernel(We,a,i)}});const Fl=na({bitwiseAnd_:function(e,t){const n=Js(e,"x","bitwiseAnd"),r=Js(t,"y","bitwiseAnd");if(!B(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return Gs.runKernel(Ve,s)}});const Dl=na({broadcastArgs_:function(e,t){const n=Js(e,"s0","broadcastArgs","int32"),r=Js(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return Gs.runKernel(Ue,s)}});const Ol=na({broadcastTo_:function(e,t){let n=Js(e,"broadcastTo","x");const r=n.shape;if(ue(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=bl(n,e)}const s=n.shape,a=Array.from(t);for(let l=t.length-1;l>=0;l--)if(s[l]===t[l])a[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return xi(n);const i={x:n},o={reps:a};return Gs.runKernel(xr,i,o)}});const Ml=na({ceil_:function(e){const t={x:Js(e,"x","ceil","float32")};return Gs.runKernel(He,t)}});const Ll=na({clipByValue_:function(e,t,n){const r=Js(e,"x","clipByValue");if(M(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Li(r.shape,t,r.dtype);const s={x:r},a={clipValueMin:t,clipValueMax:n};return Gs.runKernel(je,s,a)}});const zl=na({concat1d_:function(e){return wl(e,0)}});const Pl=na({concat2d_:function(e,t){return wl(e,t)}});const Bl=na({concat3d_:function(e,t){return wl(e,t)}});const Wl=na({concat4d_:function(e,t){return wl(e,t)}});const Vl=na({conv2d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0;const o=Js(e,"x","conv2d","float32"),l=Js(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=bl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),M(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),M(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),yl("conv2d",r,i);const h="NHWC"===s?u.shape[3]:u.shape[1];M(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),M(fl(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),M(ml(a),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),M(ml(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Gs.runKernel(Ye,d,p);return c?bl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Ul=na({conv1d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0;const o=Js(e,"x","conv1d"),l=Js(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=bl(o,[1,o.shape[0],o.shape[1]])),M(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),M(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),yl("conv1d",r,i),M(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),M(fl(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),M(ml(a),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),M(ml(n),(()=>"Error in conv1D: Stride should be larger than 0.")),M("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=bl(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=bl(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Vl(d,h,[1,n],r,"NHWC",[1,a],i);return bl(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const Gl=na({conv2DBackpropInput_:function(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0;M(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=bl(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),M(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),M(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),M(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];M(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),M(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),yl("conv2dDerInput",s,i);const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=Gs.runKernel(Ze,d,p);return u?bl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Hl=na({conv2dTranspose_:function(e,t,n,r,s,a){const i=Js(e,"x","conv2dTranspose"),o=Js(t,"filter","conv2dTranspose");return Gl(n,i,o,r,s,"NHWC",a)}});const jl=na({conv3d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const i=Js(e,"x","conv3d"),o=Js(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=bl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),M(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),M(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),M(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),M(fl(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),M("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),M(ml(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),M(ml(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},d=Gs.runKernel(Je,c,h);return u?bl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const ql=na({conv3DBackpropInput_:function(e,t,n,r,s){M(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=bl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];M(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),M(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),M(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),M(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),M(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},d=Gs.runKernel(tt,c,h);return o?bl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Kl=na({conv3dTranspose_:function(e,t,n,r,s){const a=Js(e,"x","conv3dTranspose"),i=Js(t,"filter","conv3dTranspose");return ql(n,a,i,r,s)}});const Xl=na({cos_:function(e){const t={x:Js(e,"x","cos","float32")};return Gs.runKernel(nt,t)}});const Yl=na({cosh_:function(e){const t={x:Js(e,"x","cosh","float32")};return Gs.runKernel(rt,t)}});const Ql=na({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s={x:Js(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:r};return Gs.runKernel(st,s,a)}});const Zl=na({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s={x:Js(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return Gs.runKernel(at,s,a)}});const Jl=na({denseBincount_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=Js(e,"x","denseBincount"),a=Js(t,"weights","denseBincount");M("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),M(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),M(n>=0,(()=>`size must be non-negative, but got ${n}.`)),M(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const i={x:s,weights:a},o={size:n,binaryOutput:r};return Gs.runKernel(ot,i,o)}});const eu=na({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const r=Js(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];M(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),M(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),M(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),M(i%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return Gs.runKernel(lt,o,l)}});const tu=na({depthwiseConv2d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0;const o=Js(e,"x","depthwiseConv2d","float32"),l=Js(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=bl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),M(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),M(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];M(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),yl("depthwiseConv2d",r,i);const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Gs.runKernel(ut,d,p);return c?bl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const nu=na({diag_:function(e){const t={x:Js(e,"x","diag")};return Gs.runKernel(dt,t)}});const ru=na({dilation2d_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const i=Js(e,"x","dilation2d"),o=Js(t,"filter","dilation2d");M(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),M(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),M("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=bl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),M(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=Gs.runKernel(pt,c,h);return u?bl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const su=na({equal_:function(e,t){let n=Js(e,"a","equal","string_or_numeric"),r=Js(t,"b","equal","string_or_numeric");[n,r]=Ms(n,r),Hi(n.shape,r.shape);const s={a:n,b:r};return Gs.runKernel(kt,s)}});const au=na({where_:function(e,t,n){const r=Js(t,"a","where"),s=Js(n,"b","where"),a=Js(e,"condition","where","bool"),i=Hi(Hi(a.shape,r.shape),s.shape),o={condition:Ol(a,i),t:Ol(r,i),e:Ol(s,i)};return Gs.runKernel(Hn,o)}});const iu=na({divNoNan_:function(e,t){let n=Js(e,"a","div"),r=Js(t,"b","div");[n,r]=Ms(n,r);const s=Ni(n,r),a=Ci(s),i=su(r,a);return au(i,a,s)}});const ou=na({dot_:function(e,t){const n=Js(e,"t1","dot"),r=Js(t,"t2","dot");M((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(M(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=bl(n,[1,-1]),t=bl(r,[-1,1]),s=kl(e,t);return bl(s,[])}if(1===n.rank&&2===r.rank){const e=bl(n,[1,-1]),t=bl(r,[r.shape[0],r.shape[1]]),s=kl(e,t);return bl(s,[s.size])}if(2===n.rank&&1===r.rank){const e=bl(r,[-1,1]),t=kl(n,e);return bl(t,[t.size])}{const e=bl(r,[r.shape[0],r.shape[1]]);return kl(n,e)}}});const lu=na({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];const s=n.map(((e,t)=>Js(e,`tensors${t}`,"einsum"))),a={equation:e};return Gs.runKernel(bt,s,a)}});const uu=na({elu_:function(e){const t={x:Js(e,"x","elu","float32")};return Gs.runKernel(xt,t)}});const cu=na({ensureShape_:function(e,t){const n=Js(e,"x","ensureShape","string_or_numeric");if(!function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});const hu=na({erf_:function(e){let t=Js(e,"x","erf");M("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=bi(t,"float32"));const n={x:t};return Gs.runKernel(wt,n)}});function du(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function pu(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function fu(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function mu(e,t){return pu(e,t.map((e=>1)),t)}function gu(e,t,n){M(du(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function yu(e,t){if(du(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function bu(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function xu(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const vu=na({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:Js(e,"x","max")},s={reductionIndices:t,keepDims:n};return Gs.runKernel(Jt,r,s)}});const wu=na({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:Js(e,"x","min")},s={axis:t,keepDims:n};return Gs.runKernel(ln,r,s)}});const ku=na({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=Js(e,"x","sum");"bool"===r.dtype&&(r=bi(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Gs.runKernel(er,s,a)}});function Nu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return Vi(e);if(1!==e.rank&&null===n)return Nu(bl(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return ku(Vi(e),n);if(t===1/0)return vu(Vi(e),n);if(t===-1/0)return wu(Vi(e),n);if("euclidean"===t||2===t)return Ii(ku(Pi(Vi(e),Ei(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return vu(ku(Vi(e),n[0]),n[1]-1);if(t===1/0)return vu(ku(Vi(e),n[1]),n[0]);if(t===-1/0)return wu(ku(Vi(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Ii(ku(Ti(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Su=na({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=Nu(e=Js(e,"x","norm"),t,n);let a=s.shape;if(r){const t=j(n,e.shape);a=mu(s.shape,t)}return bl(s,a)}});const Iu=na({euclideanNorm_:function(e){return Su(e,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});const Tu=na({exp_:function(e){const t={x:Js(e,"x","exp")};return Gs.runKernel(Nt,t)}});const Cu=na({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Js(e,"x","expandDims","string_or_numeric");M(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Gs.runKernel(St,r,s)}});const $u=na({expm1_:function(e){const t={x:Js(e,"x","expm1")};return Gs.runKernel(It,t)}});const Eu=na({tile_:function(e,t){const n=Js(e,"x","tile","string_or_numeric");M(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Gs.runKernel(xr,r,s)}});const Ru=na({eye_:function(e,t,n){null==t&&(t=e);const r=yi([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),s=e<=t?e:t;for(let i=0;i<s;++i)r.set(1,i,i);const a=bl(r.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return Eu(Cu(a,0),[n[0],1,1]);if(2===n.length)return Eu(Cu(Cu(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Eu(Cu(Cu(Cu(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const Au=na({floor_:function(e){const t={x:Js(e,"x","floor","float32")};return Gs.runKernel(Et,t)}});const _u=na({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const s={x:Js(e,"x","gather"),indices:Js(t,"indices","gather","int32")},a={axis:n,batchDims:r};return Gs.runKernel(_t,s,a)}});const Fu=na({greater_:function(e,t){let n=Js(e,"a","greater","string_or_numeric"),r=Js(t,"b","greater","string_or_numeric");[n,r]=Ms(n,r),Hi(n.shape,r.shape);const s={a:n,b:r};return Gs.runKernel(Dt,s)}});const Du=na({greaterEqual_:function(e,t){let n=Js(e,"a","greaterEqual","string_or_numeric"),r=Js(t,"b","greaterEqual","string_or_numeric");[n,r]=Ms(n,r),Hi(n.shape,r.shape);const s={a:n,b:r};return Gs.runKernel(Ot,s)}});const Ou=na({imag_:function(e){const t={input:Js(e,"input","imag")};return Gs.runKernel(zt,t)}});const Mu=na({isFinite_:function(e){const t={x:Js(e,"x","isFinite")};return Gs.runKernel(Pt,t)}});const Lu=na({isInf_:function(e){const t={x:Js(e,"x","isInf")};return Gs.runKernel(Bt,t)}});const zu=na({isNaN_:function(e){const t={x:Js(e,"x","isNaN")};return Gs.runKernel(Wt,t)}});const Pu=na({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:Js(e,"x","leakyRelu")},r={alpha:t};return Gs.runKernel(Vt,n,r)}});const Bu=na({less_:function(e,t){let n=Js(e,"a","less","string_or_numeric"),r=Js(t,"b","less","string_or_numeric");[n,r]=Ms(n,r),Hi(n.shape,r.shape);const s={a:n,b:r};return Gs.runKernel(Ut,s)}});const Wu=na({lessEqual_:function(e,t){let n=Js(e,"a","lessEqual","string_or_numeric"),r=Js(t,"b","lessEqual","string_or_numeric");[n,r]=Ms(n,r),Hi(n.shape,r.shape);const s={a:n,b:r};return Gs.runKernel(Gt,s)}});function Vu(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Gs.runKernel(Ht,{},r)}const Uu=na({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const a=Js(e,"x","localResponseNormalization");M(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),M(W(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=bl(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:s},c=Gs.runKernel(Qt,l,u);return o?bl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Gu=na({log_:function(e){const t={x:Js(e,"x","log","float32")};return Gs.runKernel(jt,t)}});const Hu=na({log1p_:function(e){const t={x:Js(e,"x","log1p")};return Gs.runKernel(qt,t)}});const ju=na({neg_:function(e){const t={x:Js(e,"x","neg")};return Gs.runKernel(fn,t)}});const qu=na({softplus_:function(e){const t={x:Js(e,"x","softplus")};return Gs.runKernel(Zn,t)}});const Ku=na({logSigmoid_:function(e){const t=Js(e,"x","logSigmoid");return $i((e=>({value:ju(qu(ju(e))),gradFunc:t=>Si(t,Nl(ju(e)))})))(t)}});const Xu=na({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Js(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=$i(((e,n)=>{const r=vu(e,t,!0),s=Bi(e,r),a=Bi(bi(s,"float32"),Gu(ku(Tu(s),t,!0)));n([a]);return{value:a,gradFunc:(e,n)=>{const[r]=n,s=Tu(r);return Bi(e,Si(ku(e,t,!0),s))}}}));return r(n)}});const Yu=na({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Js(e,"x","logSumExp"),s=j(t,r.shape),a=vu(r,s,!0),i=Bi(r,a),o=Tu(i),l=ku(o,s),u=Gu(l),c=wi(bl(a,u.shape),u);if(n){const e=mu(c.shape,s);return bl(c,e)}return c}});const Qu=na({logicalAnd_:function(e,t){const n=Js(e,"a","logicalAnd","bool"),r=Js(t,"b","logicalAnd","bool");Hi(n.shape,r.shape);const s={a:n,b:r};return Gs.runKernel(Kt,s)}});const Zu=na({logicalNot_:function(e){const t={x:Js(e,"x","logicalNot","bool")};return Gs.runKernel(Xt,t)}});const Ju=na({logicalOr_:function(e,t){const n=Js(e,"a","logicalOr","bool"),r=Js(t,"b","logicalOr","bool");Hi(n.shape,r.shape);const s={a:n,b:r};return Gs.runKernel(Yt,s)}});const ec=na({logicalXor_:function(e,t){const n=Js(e,"a","logicalXor","bool"),r=Js(t,"b","logicalXor","bool");return Hi(n.shape,r.shape),Qu(Ju(e,t),Zu(Qu(e,t)))}}),tc=2147483648;const nc=na({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const r=Js(e,"sortedSequence","searchSorted"),s=Js(t,"values","searchSorted"),a=r.shape[r.shape.length-1],i=s.shape[s.shape.length-1],o=bl(r,[-1,a]),l=bl(s,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(P(l.shape)>=tc)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=tc)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:n};return Gs.runKernel(Gn,u,c)}});function rc(e,t){return nc(e,t,"left")}const sc=na({maxPool_:function(e,t,n,r,s){const a=Js(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=bl(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),M(fl(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),yl("maxPool",r,s);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=Gs.runKernel(tn,l,u);return o?bl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const ac=na({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const i=Js(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=bl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),M(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),M("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),yl("maxPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=Gs.runKernel(rn,u,c);return l?bl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const ic=na({maxPoolWithArgmax_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const a={x:Js(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},o=Gs.runKernel(an,a,i);return{result:o[0],indexes:o[1]}}});const oc=na({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r={x:Js(e,"x","mean")},s={axis:t,keepDims:n};return Gs.runKernel(on,r,s)}});function lc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(ue(e),"complex64"===t){const t=lc(e,"float32"),n=lc(e,"float32");return ra(t,n)}const n=oe(P(e),t);return Gs.makeTensor(n,e,t)}function uc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(ue(e),"complex64"===t){const t=uc(e,"float32"),n=lc(e,"float32");return ra(t,n)}const n=ie(P(e),t);return Gs.makeTensor(n,e,t)}function cc(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Js(e,"x","meshgrid",e instanceof Ns?e.dtype:"float32");if(void 0===t)return[r];let s=Js(t,"y","meshgrid",t instanceof Ns?t.dtype:"float32");const a=P(r.shape),i=P(s.shape);return"xy"===n?(r=bl(r,[1,-1]),s=bl(s,[-1,1]),[kl(uc([i,1],r.dtype),r),kl(s,uc([1,a],s.dtype))]):(r=bl(r,[-1,1]),s=bl(s,[1,-1]),[kl(r,uc([1,i],r.dtype)),kl(uc([a,1],s.dtype),s)])}const hc=na({minimum_:function(e,t){let n=Js(e,"a","minimum"),r=Js(t,"b","minimum");[n,r]=Ms(n,r),"bool"===n.dtype&&(n=bi(n,"int32"),r=bi(r,"int32")),Hi(n.shape,r.shape);const s={a:n,b:r};return Gs.runKernel(un,s)}});const dc=na({mirrorPad_:function(e,t,n){M("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Js(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");M(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let o=0;o<r.rank;o++)M(2===t[o].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),M(t[o][0]>=0&&t[o][0]<=r.shape[o]-s&&t[o][1]>=0&&t[o][1]<=r.shape[o]-s,(()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return Gs.runKernel(cn,i,a)}});const pc=na({mod_:function(e,t){let n=Js(e,"a","mod"),r=Js(t,"b","mod");[n,r]=Ms(n,r);const s={a:n,b:r};return Gs.runKernel(hn,s)}});const fc=na({moments_:function(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=j(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(e=Js(e,"x","moments")).shape),r=oc(e,n,t);let s=r.shape;t||(s=mu(r.shape,n));const a=Ti(Bi(bi(e,"float32"),bl(r,s)));return{mean:r,variance:oc(a,n,t)}}});const mc=na({multiRNNCell_:function(e,t,n,r){const s=Js(t,"data","multiRNNCell"),a=ea(n,"c","multiRNNCell"),i=ea(r,"h","multiRNNCell");let o=s;const l=[];for(let h=0;h<e.length;h++){const t=e[h](o,a[h],i[h]);l.push(t[0]),l.push(t[1]),o=t[1]}const u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}});const gc=na({multinomial_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=Js(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?bl(s,[1,-1]):s},l={numSamples:t,seed:n,normalized:r},u=Gs.runKernel(dn,o,l);return 1===i?bl(u,[u.size]):u}});const yc=na({notEqual_:function(e,t){let n=Js(e,"a","notEqual","string_or_numeric"),r=Js(t,"b","notEqual","string_or_numeric");[n,r]=Ms(n,r),Hi(n.shape,r.shape);const s={a:n,b:r};return Gs.runKernel(mn,s)}});const bc=na({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Js(e,"indices","oneHot","int32")},i={dtype:s,depth:t,onValue:n,offValue:r};return Gs.runKernel(vn,a,i)}});const xc=na({onesLike_:function(e){const t={x:Js(e,"x","onesLike")};return Gs.runKernel(xn,t)}});const vc=na({outerProduct_:function(e,t){const n=Js(e,"v1","outerProduct"),r=Js(t,"v2","outerProduct");M(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=bl(n,[-1,1]),a=bl(r,[1,-1]);return kl(s,a)}});const wc=na({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=Js(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return Gs.runKernel(kn,a,s)}});const kc=na({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return M(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),wc(e,[t],n)}});const Nc=na({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return M(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),wc(e,t,n)}});const Sc=na({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return M(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),wc(e,t,n)}});const Ic=na({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return M(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),wc(e,t,n)}});const Tc=na({spaceToBatchND_:function(e,t,n){const r=Js(e,"x","spaceToBatchND");M(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),M(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),M(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]===0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return Gs.runKernel(tr,s,a)}});const Cc=na({pool_:function(e,t,n,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=Js(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=bl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),M(fl(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=sl(l.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),s=r.map((e=>Math.floor(e/2))),a=r.map(((e,t)=>e-s[t]));return r.map(((e,t)=>[s[t],a[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",y=p?l:Tc(l,h,f),b=("avg"===n?()=>xl(y,t,a,g,i):()=>sc(y,t,a,g,i))(),x=p?b:Cl(b,h,m);return u?bl(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});const $c=na({prelu_:function(e,t){const n={x:Js(e,"x","prelu"),alpha:Js(t,"alpha","prelu")};return Gs.runKernel(Sn,n)}});const Ec=na({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=Js(e,"x","prod");"bool"===r.dtype&&(r=bi(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Gs.runKernel(In,s,a)}});const Rc=na({raggedGather_:function(e,t,n,r){const s={paramsNestedSplits:e.map(((e,t)=>Js(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:Js(t,"paramsDenseValues","raggedGather"),indices:Js(n,"indices","raggedGather","int32")},a={outputRaggedRank:r},i=Gs.runKernel(Tn,s,a);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}});const Ac=na({raggedRange_:function(e,t,n){const r=Js(e,"starts","raggedRange"),s={starts:r,limits:Js(t,"limits","raggedRange",r.dtype),deltas:Js(n,"deltas","raggedRange",r.dtype)},a=Gs.runKernel(Cn,s);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}});const _c=na({raggedTensorToTensor_:function(e,t,n,r,s){const a=Js(e,"shape","raggedTensorToTensor","int32"),i=Js(t,"values","raggedTensorToTensor"),o={shape:a,values:i,defaultValue:Js(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:r.map(((e,t)=>Js(e,`tensors${t}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:s};return Gs.runKernel($n,o,l)}});const Fc=na({rand_:function(e,t,n){ue(e);const r=P(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let a=0;a<r;a++)s[a]=t();return Gs.makeTensor(s,e,n)}});var Dc=n(334);class Oc{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Dc.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Mc{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Dc.alea(s.toString()),this.randn=new Oc(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Lc{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Dc.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const zc=na({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",s=arguments.length>4?arguments[4]:void 0;if(ue(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new Mc(t,n,r,s),i=yi(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const Pc=na({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if(ue(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Oc(t,n,r,!1,s),i=yi(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const Bc=na({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Pc(e,0,1,t,n)}});const Wc=na({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",s=arguments.length>4?arguments[4]:void 0;ue(e);const a=yi(e,r),i=new Lc(t,n,null,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}});const Vc=na({randomUniformInt_:function(e,t,n,r){return Wc(e,t,n,"int32",r)}});function Uc(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Gs.runKernel(En,{},s)}const Gc=na({real_:function(e){const t={input:Js(e,"input","real")};return Gs.runKernel(Rn,t)}});const Hc=na({reciprocal_:function(e){const t={x:Js(e,"x","reciprocal")};return Gs.runKernel(An,t)}});const jc=na({relu_:function(e){const t={x:Js(e,"x","relu")};return Gs.runKernel(_n,t)}});const qc=na({relu6_:function(e){const t={x:Js(e,"x","relu6")};return Gs.runKernel(zn,t)}});const Kc=na({reverse_:function(e,t){const n={x:Js(e,"x","reverse")},r={dims:t};return Gs.runKernel(Pn,n,r)}});const Xc=na({reverse1d_:function(e){const t=Js(e,"x","reverse");return M(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Kc(t,0)}});const Yc=na({reverse2d_:function(e,t){const n=Js(e,"x","reverse");return M(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Kc(n,t)}});const Qc=na({reverse3d_:function(e,t){const n=Js(e,"x","reverse");return M(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Kc(n,t)}});const Zc=na({reverse4d_:function(e,t){const n=Js(e,"x","reverse");return M(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Kc(n,t)}});const Jc=na({round_:function(e){const t={x:Js(e,"x","round")};return Gs.runKernel(Bn,t)}});const eh=na({rsqrt_:function(e){const t={x:Js(e,"x","rsqrt","float32")};return Gs.runKernel(Wn,t)}});const th=na({selu_:function(e){const t={x:Js(e,"x","selu")};return Gs.runKernel(jn,t)}});const nh=na({separableConv2d_:function(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const o=Js(e,"x","separableConv2d"),l=Js(t,"depthwiseFilter","separableConv2d"),u=Js(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=bl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");M(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),M(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),M(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),M(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),M(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];M(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=tu(c,l,r,s,i,a),m=Vl(f,u,1,"valid",i);return h?bl(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const rh=async function(e,t){const n=Js(e,"x","setdiff1d"),r=Js(t,"y","setdiff1d");M(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),M(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),M(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let c=0;c<s.length;c++)i.has(s[c])||o++;const l=new xs([o],n.dtype),u=new xs([o],"int32");for(let c=0,h=0;c<s.length;c++)i.has(s[c])||(l.values[h]=s[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]};const sh=na({sign_:function(e){const t={x:Js(e,"x","sign")};return Gs.runKernel(Yn,t)}});const ah=na({sin_:function(e){const t={x:Js(e,"x","sin","float32")};return Gs.runKernel(Kn,t)}});const ih=na({sinh_:function(e){const t={x:Js(e,"x","sinh")};return Gs.runKernel(Xn,t)}});const oh=na({slice1d_:function(e,t,n){const r=Js(e,"x","slice1d");return M(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Sl(r,[t],[n])}});const lh=na({slice2d_:function(e,t,n){const r=Js(e,"x","slice2d");return M(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Sl(r,t,n)}});const uh=na({slice3d_:function(e,t,n){const r=Js(e,"x","slice3d");return M(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Sl(r,t,n)}});const ch=na({slice4d_:function(e,t,n){const r=Js(e,"x","slice4d");return M(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Sl(r,t,n)}});const hh=na({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Js(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return Gs.runKernel(rr,r,s)}});const dh=na({fft_:function(e){M("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Gs.runKernel(Tt,t)}});const ph=na({ifft_:function(e){M("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Gs.runKernel(Lt,t)}});const fh=na({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=bl(e,[n,t]);r=ph(s)}else{const s=[n,2*(t-1)],a=bl(Gc(e),[n,t]),i=bl(Ou(e),[n,t]),o=Kc(Sl(a,[0,1],[n,t-2]),1),l=Si(Kc(Sl(i,[0,1],[n,t-2]),1),Ei(-1)),u=wl([a,o],1),c=wl([i,l],1),h=bl(ra(u,c),[s[0],s[1]]);r=ph(h)}if(r=Gc(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=bl(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});const mh=na({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r={x:Js(e,"x","split")},s={numOrSizeSplits:t,axis:n};return Gs.runKernel(nr,r,s)}});const gh=na({rfft_:function(e,t){M("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=Sl(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=wl([e,lc(r)],e.shape.length-1),n=t}else s=e;const a=Ci(s),i=bl(ra(s,a),[r,n]),o=dh(i),l=Math.floor(n/2)+1,u=Gc(o),c=Ou(o),h=mh(u,[l,n-l],u.shape.length-1),d=mh(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,bl(ra(h[0],d[0]),p)}});const yh=na({squaredDifference_:function(e,t){let n=Js(e,"a","squaredDifference"),r=Js(t,"b","squaredDifference");[n,r]=Ms(n,r),Hi(n.shape,r.shape);const s={a:n,b:r};return Gs.runKernel(ur,s,{})}});const bh=na({squeeze_:function(e,t){const n=Js(e,"x","squeeze","string_or_numeric");return bl(n,q(n.shape,t).newShape)}});const xh=na({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=ea(e,"tensors","stack","string_or_numeric");M(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&M(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Gs.runKernel(wn,r,s)}});const vh=na({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:Js(e,"x","step")},r={alpha:t};return Gs.runKernel(Cr,n,r)}});const wh=na({stridedSlice_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const u={x:Js(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Gs.runKernel(dr,u,c)}});const kh=na({tan_:function(e){const t={x:Js(e,"x","tan","float32")};return Gs.runKernel(yr,t)}});function Nh(e,t){z(e);const n=Ys(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return sa(e,null,n,t)}function Sh(e,t,n){if(z(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Ys(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return sa(e,t,r,n)}function Ih(e,t,n){if(z(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Ys(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return sa(e,t,r,n)}function Th(e,t,n){if(z(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Ys(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return sa(e,t,r,n)}function Ch(e,t,n){if(z(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Ys(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return sa(e,t=t||r,r,n)}function $h(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let i=0;i<s;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-s;++i)if(n.shape[i+s]!==e[i+r])throw new Error(a+` updates.shape[${i+s}] (${n.shape[i+s]}) != shape[${i+s}] (${e[i+s]})`)}function Eh(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}$h(n,t,e)}function Rh(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let l=s;l<a;++l)i*=n[l];const o=s<1?1:s;return{sliceRank:s,numUpdates:P(t.shape)/o,sliceSize:i,strides:[...re(n.slice(0,s)),1],outputSize:P(n)}}const Ah=na({tensorScatterUpdate_:function(e,t,n){const r=Js(e,"tensor","tensorScatterupdate"),s=Js(t,"indices","tensorScatterupdate","int32"),a=Js(n,"updates","tensorScatterupdate");if(Eh(a,s,r.shape),r.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${a.dtype}.`);const i={tensor:r,indices:s,updates:a};return Gs.runKernel(Un,i,{})}});const _h=na({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=Js(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,l]=Gs.runKernel(vr,a,i);return{values:o,indices:l}}});const Fh=na({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if(ue(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Oc(t,n,r,!0,s),i=yi(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const Dh=na({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Js(e,"x","unique","string_or_numeric");M(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=Gs.runKernel(Nr,r,s);return{values:a,indices:i}}});const Oh=na({unsortedSegmentSum_:function(e,t,n){const r=Js(e,"x","unsortedSegmentSum"),s=Js(t,"segmentIds","unsortedSegmentSum","int32");M(W(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return Gs.runKernel(Ir,a,i)}});const Mh=na({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Js(e,"x","unstack","string_or_numeric");M(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Gs.runKernel(Sr,r,s)}});function Lh(e,t){return nc(e,t,"right")}function zh(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return Gs.makeVariable(e,t,n,r)}function Ph(e,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=yi(e,"int32"),s=yi([n.length,e.length],"int32");for(let a=0;a<n.length;a++){const t=r.indexToLoc(n[a]),i=a*e.length;s.values.set(t,i)}return s.toTensor()}const Bh=async function(e){const t=Js(e,"condition","whereAsync","bool"),n=await t.data(),r=Ph(t.shape,n);return e!==t&&t.dispose(),r};const Wh=async function(e,t,n){const r=Js(e,"tensor","boolMask"),s=Js(t,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,o=r.shape;M(i>0,(()=>"mask cannot be scalar")),L(o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=a;m<a+i;m++)l*=o[m];const u=o.slice(0,a).concat([l],o.slice(a+i)),c=bl(r,u),h=bl(s,[-1]),d=await Bh(h),p=bh(d,[1]),f=_u(c,p,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f};const Vh=na({transpose_:function(e,t,n){const r=Js(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),M(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{M(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?ca((()=>{let e=Gc(r),t=Ou(r);return e=Gs.runKernel(kr,{x:e},a),t=Gs.runKernel(kr,{x:t},a),n&&(t=ju(t)),ra(e,t)})):Gs.runKernel(kr,s,a)}});const Uh=na({movingAverage_:function(e,t,n,r){let s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const a=Js(e,"v","movingAverage"),i=Js(t,"x","movingAverage"),o=Js(n,"decay","movingAverage");!function(e,t){M(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}(a,i),M(B(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const l=Ei(1),u=Bi(l,o);let c=Si(Bi(i,a),u);if(s){M(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Js(r,"step","movingAverage");c=Ni(c,Bi(l,Pi(o,e)))}return wi(a,c)}});const Gh=na({scatterND_:function(e,t,n){ue(n);const r=Js(e,"indices","scatterND","int32"),s=Js(t,"updates","scatterND");Eh(s,r,n);const a={indices:r,updates:s},i={shape:n};return Gs.runKernel(Vn,a,i)}});const Hh=na({sparseToDense_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;ue(n);const s=Js(e,"sparseIndices","sparseToDense","int32"),a=Js(t,"sparseValues","sparseToDense","string_or_numeric"),i=Js(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},l={outputShape:n};return Gs.runKernel(lr,o,l)}});const jh=na({gatherND_:function(e,t){const n=Js(t,"indices","gatherND","int32"),r={params:Js(e,"x","gatherND","string_or_numeric"),indices:n};return Gs.runKernel(Ft,r)}});const qh=na({dropout_:function(e,t,n,r){const s=Js(e,"x","dropout");if(M("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),M(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ns?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(B(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=Ni(Au(wi(Wc(a,0,1,"float32",r),i)),i);return Si(s,o)}});function Kh(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Xh(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return Nh(s,"float32")}const Yh=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const r=Js(e,"predictions","inTopK"),s=Js(t,"targets","inTopK");M(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),M(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),L(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];M(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await r.data(),o=await s.data(),[l,u]=[i.length/a,a],c=K("bool",l);for(let h=0;h<l;h++){const e=h*u,t=i.subarray(e,e+u),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort(((e,t)=>t.value-e.value)),c[h]=0;for(let s=0;s<n;s++)if(r[s].index===o[h]){c[h]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),aa(c,s.shape,"bool")};const Qh=na({conv2DBackpropFilter_:function(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=bl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=bl(t,[1,t.shape[0],t.shape[1],t.shape[2]])),M(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),M(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),M(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];M(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),M(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),yl("conv2dDerFilter",s,i);const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return Gs.runKernel(Qe,h,d)}});function Zh(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Si(e,vh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Jh(e,t){let n=t;const r=Gi(e.shape,t.shape);return r.length>0&&(n=ku(n,r)),bl(n,e.shape)}function ed(e,t,n,r){if("linear"===t)return e;if("relu"===t)return jc(e);if("elu"===t)return uu(e);if("relu6"===t)return qc(e);if("prelu"===t)return $c(e,n);if("leakyrelu"===t)return Pu(e,r);if("sigmoid"===t)return Nl(e);throw new Error(`Unknown fused activation ${t}.`)}const td=(e,t)=>!(e>0)||"linear"===t;const nd=na({fusedConv2d_:function(e){let{x:t,filter:n,strides:r,pad:s,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}=e;if(u=u||"linear",!1===td(Gs.state.gradientDepth,u)){M("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let e=Vl(t,n,r,s,a,i,o);return null!=l&&(e=wi(e,l)),ed(e,u,c,h)}const d=Js(t,"x","conv2d","float32"),p=Js(n,"filter","conv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=bl(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),M(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),yl("fused conv2d",s,o);const g="NHWC"===a?f.shape[3]:f.shape[1];M(p.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${p.shape[2]}.`)),M(fl(r,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`));const y=il(f.shape,p.shape,r,i,s,o);let b,x;if(null!=l&&(b=Js(l,"bias","fused conv2d"),[b]=Ms(b,d),"NHWC"===a?Hi(y.outShape,b.shape):(M(b.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`)),M(0===b.shape.length||b.shape[0]===y.outChannels||1===b.shape[0],(()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${y.outChannels})`)))),null!=c){const e=c.shape;if(M(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)M(1===e[0]||e[0]===y.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${y.outChannels}).`));else if(3===e.length)try{Hi(e,y.outShape)}catch(N){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(t)}x=Js(c,"prelu weights","fused conv2d")}const v=(e,t)=>{M("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));const[n,o,l,c]=t,h=Zh(e,l,u);M(pl(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const d=[Gl(o.shape,h,n,r,s),Qh(o,h,n.shape,r,s)];if(null!=c){const e=Jh(c,h);d.push(e)}return d},w={x:f,filter:p,bias:b,preluActivationWeights:x},k={strides:r,pad:s,dataFormat:a,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:h};if(null==l){const e=$i(((e,t,n)=>{let r=Gs.runKernel(Ar,w,k);return n([t,e,r]),m&&(r=bl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,p)}{const e=$i(((e,t,n,r)=>{let s=Gs.runKernel(Ar,w,k);return r([t,e,s,n]),m&&(s=bl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(f,p,b)}}});const rd=na({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=bl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=bl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return Gs.runKernel(ct,u,c)}});const sd=na({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=t,l=!1;3===t.rank&&(l=!0,o=bl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=Gs.runKernel(ht,u,c);return l?bl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const ad=na({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:r,pad:s,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}=e;if(!1===td(Gs.state.gradientDepth,u)){let e=tu(t,n,r,s,a,i,o);return null!=l&&(e=wi(e,l)),ed(e,u,c,h)}const d=Js(t,"x","depthwiseConv2d","float32"),p=Js(n,"filter","depthwiseConv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=bl(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),M(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),M(f.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==i&&(i=[1,1]),M(fl(r,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),yl("fused depthwiseConv2d",s,o);const g=il(f.shape,p.shape,r,i,s,o,!0);let y,b;null!=l&&(y=Js(l,"bias","fused conv2d"),[y]=Ms(y,d),Hi(g.outShape,y.shape)),null!=c&&(b=Js(c,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{M(pl(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[n,a,l,c]=t,h=Zh(e,l,u),d=sd(a.shape,h,n,r,s,i,o),p=rd(a,h,n.shape,r,s,i,o);if(null!=c){return[d,p,Jh(y,h)]}return[d,p]},v={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:r,pad:s,dataFormat:a,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:h};if(null==l){const e=$i(((e,t,n)=>{let r=Gs.runKernel(_r,v,w);return n([t,e,r]),m&&(r=bl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(f,p)}{const e=$i(((e,t,n,r)=>{let s=Gs.runKernel(_r,v,w);return r([t,e,s,n]),m&&(s=bl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(f,p,y)}}});const id=na({fusedMatMul_:function(e){let{a:t,b:n,transposeA:r=!1,transposeB:s=!1,bias:a,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:l=.2}=e;if(!1===td(Gs.state.gradientDepth,i)){let e=kl(t,n,r,s);return null!=a&&(e=wi(e,a)),ed(e,i,o,l)}let u=Js(t,"a","fused matMul"),c=Js(n,"b","fused matMul");[u,c]=Ms(u,c);const h=r?u.shape[u.rank-2]:u.shape[u.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],p=r?u.shape[u.rank-1]:u.shape[u.rank-2],f=s?c.shape[c.rank-2]:c.shape[c.rank-1],m=u.shape.slice(0,-2),g=c.shape.slice(0,-2),y=P(m),b=P(g);M(h===d,(()=>`Error in fused matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${r} and transposeB=${s} must match.`));const x=Hi(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([p,f]),v=bl(u,r?[y,h,p]:[y,p,h]),w=bl(c,s?[b,f,d]:[b,d,f]);let k,N;null!=a&&(k=Js(a,"bias","fused matMul"),[k]=Ms(k,u),Hi(x,k.shape)),null!=o&&(N=Js(o,"prelu weights","fused matMul"));const S=(e,t)=>{const[n,o,l,u]=t,c=Zh(bl(e,l.shape),l,i);let h,d;if(r||s?!r&&s?(h=kl(c,o,!1,!1),d=kl(c,n,!0,!1)):r&&!s?(h=kl(o,c,!1,!0),d=kl(n,c,!1,!1)):(h=kl(o,c,!0,!0),d=kl(c,n,!0,!0)):(h=kl(c,o,!1,!0),d=kl(n,c,!0,!1)),null!=a){return[h,d,Jh(u,c)]}return[h,d]},I={a:v,b:w,bias:k,preluActivationWeights:N},T={transposeA:r,transposeB:s,activation:i,leakyreluAlpha:l};if(null==a){const e=$i(((e,t,n)=>{const r=Gs.runKernel(Rr,I,T);return n([e,t,r]),{value:bl(r,x),gradFunc:S}}));return e(v,w)}{const e=$i(((e,t,n,r)=>{const s=Gs.runKernel(Rr,I,T);return r([e,t,s,n]),{value:bl(s,x),gradFunc:S}}));return e(v,w,k)}}});const od=na({hammingWindow_:function(e){return Xh(e,.54,.46)}});const ld=na({hannWindow_:function(e){return Xh(e,.5,.5)}});const ud=na({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=0;const i=[];for(;a+t<=e.size;)i.push(Sl(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=wl([Sl(e,a,t-r),Li([r],s)]);i.push(o),a+=n}return 0===i.length?Sh([],[0,t]):bl(wl(i),[i.length,t])}});const cd=na({stft_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ld;null==r&&(r=Kh(t));const a=ud(e,t,n),i=Si(a,s(t));return gh(i,r)}});const hd=na({cropAndResize_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=Js(e,"image","cropAndResize"),o=Js(t,"boxes","cropAndResize","float32"),l=Js(n,"boxInd","cropAndResize","int32"),u=o.shape[0];M(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),M(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),M(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),M(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),M(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),M("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return Gs.runKernel(it,c,h)}});const dd=na({flipLeftRight_:function(e){const t=Js(e,"image","flipLeftRight","float32");M(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Gs.runKernel($t,n,{})}});const pd=na({grayscaleToRGB_:function(e){const t=Js(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];M(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),M(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,Eu(t,s)}});const fd=na({rgbToGrayscale_:function(e){const t=Js(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];M(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),M(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const s=t.dtype,a=bi(t,"float32"),i=Nh([.2989,.587,.114]);let o;switch(t.rank){case 2:o=lu("ij,j->i",a,i);break;case 3:o=lu("ijk,k->ij",a,i);break;case 4:o=lu("ijkl,l->ijk",a,i);break;case 5:o=lu("ijklm,m->ijkl",a,i);break;case 6:o=lu("ijklmn,n->ijklm",a,i);break;default:throw new Error("Not a valid tensor rank.")}return o=Cu(o,-1),bi(o,s)}});const md=na({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=Js(e,"image","rotateWithOffset","float32");M(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return Gs.runKernel(Er,a,i)}});function gd(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),M(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),M(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),M(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),M(1===t.rank,(()=>"scores must be a 1D tensor")),M(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),M(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const yd=na({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const a=Js(e,"boxes","nonMaxSuppression","float32"),i=Js(t,"scores","nonMaxSuppression","float32"),o=gd(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return Gs.runKernel(gn,{boxes:a,scores:i},l)}});function bd(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||xd)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function xd(e,t){return e>t?1:e<t?-1:0}function vd(e,t,n,r,s){return Nd(e,t,n,r,s,0)}function wd(e,t,n,r,s,a){return Nd(e,t,n,r,s,0,!1,a,!0)}function kd(e,t,n,r,s,a){return Nd(e,t,n,r,s,a,!0)}function Nd(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const u=[];for(let g=0;g<t.length;g++)t[g]>s&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(Td);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let l=h.length-1;l>=i;--l){const n=Sd(e,a,h[l]);if(n>=r){o=!0;break}if(t.score=t.score*Id(r,c,n),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&bd(u,t,Td))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Sd(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function Id(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Td(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Cd=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const a=Js(e,"boxes","nonMaxSuppressionAsync"),i=Js(t,"scores","nonMaxSuppressionAsync"),o=gd(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=vd(u,c,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),Nh(h,"int32")};const $d=na({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=Js(e,"boxes","nonMaxSuppression"),o=Js(t,"scores","nonMaxSuppression"),l=gd(i,o,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u={boxes:i,scores:o},c={maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a},h=Gs.runKernel(bn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}});const Ed=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=Js(e,"boxes","nonMaxSuppressionAsync"),o=Js(t,"scores","nonMaxSuppressionAsync"),l=gd(i,o,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=kd(c,h,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Nh(d,"int32"),selectedScores:Nh(p)}};const Rd=na({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=Js(e,"boxes","nonMaxSuppression"),o=Js(t,"scores","nonMaxSuppression"),l=gd(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Gs.runKernel(yn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const Ad=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=Js(e,"boxes","nonMaxSuppressionAsync"),o=Js(t,"scores","nonMaxSuppressionAsync"),l=gd(i,o,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=wd(d,p,u,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Nh(f,"int32"),validOutputs:Ei(m,"int32")}};const _d=na({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=Js(e,"images","resizeBilinear");M(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),M(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),M(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=bl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Gs.runKernel(Mn,o,l);return i?bl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Fd=na({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=Js(e,"images","resizeNearestNeighbor");M(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),M(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),M("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),M(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=bl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Gs.runKernel(Dn,o,l);return i?bl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Dd=na({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=Js(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,l,u,c=Si(Nh([r]),255);if(M(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),M(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),M("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),M("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,l]=mh(s,[1,1,1],-1);const e=Si(i,.2989),t=Si(o,.587),n=Si(l,.114);u=wi(wi(e,t),n)}else u=e;if("otsu"===t){c=function(e,t){let n,r,s,a,i,o,l=Nh([-1]),u=Nh([0]),c=Nh([0]);for(let h=0;h<e.size-1;h++){n=Sl(e,0,h+1),r=Sl(e,h+1),i=Ni(ku(n),t),o=Ni(ku(r),t);const d=ku(Si(n,Uc(0,n.size)));s=Ni(d,ku(n));const p=Li(r.shape,n.size),f=wi(Uc(0,r.size),p),m=Si(r,f);a=Ni(ku(m),ku(r));const g=Bi(s,a),y=Bi(s,a),b=Si(i,o);c=Si(Si(b,g),y);const x=Fu(c,u);u=au(x,c,u),l=au(x,Nh([h]),l)}return l}(_l(bi(Jc(u),"int32"),aa([]),256),a)}const h=n?Wu(u,c):Fu(u,c);return bi(Si(h,255),"int32")}});const Od=na({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=arguments.length>5?arguments[5]:void 0;const i=Js(e,"image","transform","float32"),o=Js(t,"transforms","transform","float32");M(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),M(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),M(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return Gs.runKernel(wr,l,u)}});const Md=na({bandPart_:function(e,t,n){const r=Js(e,"a","bandPart");M(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);let o,l;"number"===typeof t?(M(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),M(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),o=Js(t<0?a:t,"numLower","bandPart")):(M("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=au(Bu(t,0),a,hc(t,a))),"number"===typeof n?(M(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),M(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),l=Js(n<0?i:n,"numUpper","bandPart")):(M("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=au(Bu(n,0),i,hc(n,i)));const u=bl(Uc(0,a,1,"int32"),[-1,1]),c=Uc(0,i,1,"int32"),h=Bi(u,c),d=Qu(Wu(h,o),Du(h,ju(l))),p=lc([a,i],r.dtype);return bl(xh(Mh(bl(r,[-1,a,i])).map((e=>au(d,e,p)))),s)}});const Ld=na({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,M(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)M(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=mh(e,e.shape[0],0).map((e=>bh(e,[0])));M(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let s=0;s<e.length;++s)n.push(Gs.tidy((()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=Si(ku(Si(n[t],e)),n[t]);e=Bi(e,r)}return Ni(e,Su(e,"euclidean"))})));return t?xh(n,0):n}});function zd(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Gs.tidy((()=>{M(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Ru(n),a=xi(e);const i=Sh([[1]],[1,1]);let o=xi(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=Gs.tidy((()=>{const t=Sl(a,[e,e],[n-e,1]),l=Su(t),u=Sl(a,[e,e],[1,1]),c=au(Fu(u,0),Sh([[-1]]),Sh([[1]])),h=Bi(u,Si(c,l)),d=Ni(t,h);o=1===d.shape[0]?xi(i):wl([i,Sl(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=ju(Ni(kl(c,h),l)),f=Sl(a,[e,0],[n-e,r]),m=Si(p,o),g=Vh(o);if(0===e)a=Bi(f,kl(m,kl(g,f)));else{const t=Bi(f,kl(m,kl(g,f)));a=wl([Sl(a,[0,0],[e,r]),t],0)}const y=Vh(m),b=Sl(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Bi(b,kl(kl(b,o),y));else{const t=Bi(b,kl(kl(b,o),y));s=wl([Sl(s,[0,0],[n,e]),t],1)}return[o,a,s]})),ha([t,l,u])}return!t&&n>r&&(s=Sl(s,[0,0],[n,r]),a=Sl(a,[0,0],[r,r])),[s,a]}))}const Pd=na({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(M(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return zd(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Mh(bl(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach((e=>{const[n,r]=zd(e,t);s.push(n),a.push(r)}));return[bl(xh(s,0),e.shape),bl(xh(a,0),e.shape)]}}});var Bd;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Bd||(Bd={}));const Wd=na({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Bd.SUM_BY_NONZERO_WEIGHTS;const r=Js(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Js(t,"weights","computeWeightedLoss"));const a=null==s?r:Si(r,s);if(n===Bd.NONE)return a;if(n===Bd.SUM)return ku(a);if(n===Bd.MEAN){if(null==s)return oc(a);{const e=r.size/s.size,t=Ni(ku(a),ku(s));return e>1?Ni(t,Ei(e)):t}}if(n===Bd.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Ni(ku(a),Ei(r.size));{const e=Si(s,uc(r.shape)),t=bi(ku(yc(e,Ei(0))),"float32");return Ni(ku(a),t)}}throw Error(`Unknown reduction: ${n}`)}});const Vd=na({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Bd.SUM_BY_NONZERO_WEIGHTS;const s=Js(e,"labels","absoluteDifference"),a=Js(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Js(n,"weights","absoluteDifference")),L(s.shape,a.shape,"Error in absoluteDifference: ");const o=Vi(Bi(s,a));return Wd(o,i,r)}});const Ud=na({cosineDistance_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Bd.SUM_BY_NONZERO_WEIGHTS;const a=Js(e,"labels","cosineDistance"),i=Js(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Js(r,"weights","cosineDistance")),L(a.shape,i.shape,"Error in cosineDistance: ");const l=Ei(1),u=Bi(l,ku(Si(a,i),n,!0));return Wd(u,o,s)}});const Gd=na({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Bd.SUM_BY_NONZERO_WEIGHTS,s=Js(e,"labels","hingeLoss");const a=Js(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Js(n,"weights","hingeLoss")),L(s.shape,a.shape,"Error in hingeLoss: ");const o=Ei(1);s=Bi(Si(Ei(2),s),o);const l=jc(Bi(o,Si(s,a)));return Wd(l,i,r)}});const Hd=na({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Bd.SUM_BY_NONZERO_WEIGHTS;const a=Js(e,"labels","huberLoss"),i=Js(t,"predictions","huberLoss");let o=null;null!=n&&(o=Js(n,"weights","huberLoss")),L(a.shape,i.shape,"Error in huberLoss: ");const l=Ei(r),u=Vi(Bi(i,a)),c=hc(u,l),h=Bi(u,c),d=wi(Si(Ei(.5),Ti(c)),Si(l,h));return Wd(d,o,s)}});const jd=na({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Bd.SUM_BY_NONZERO_WEIGHTS;const a=Js(e,"labels","logLoss"),i=Js(t,"predictions","logLoss");let o=null;null!=n&&(o=Js(n,"weights","logLoss")),L(a.shape,i.shape,"Error in logLoss: ");const l=Ei(1),u=Ei(r),c=ju(Si(a,Gu(wi(i,u)))),h=Si(Bi(l,a),Gu(wi(Bi(l,i),u))),d=Bi(c,h);return Wd(d,o,s)}});const qd=na({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Bd.SUM_BY_NONZERO_WEIGHTS;const s=Js(e,"labels","meanSquaredError"),a=Js(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Js(n,"weights","meanSquaredError")),L(s.shape,a.shape,"Error in meanSquaredError: ");const o=yh(s,a);return Wd(o,i,r)}});const Kd=na({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Bd.SUM_BY_NONZERO_WEIGHTS,a=Js(e,"multiClassLabels","sigmoidCrossEntropy");const i=Js(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Js(n,"weights","sigmoidCrossEntropy")),L(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Ei(r),t=Ei(1),n=Ei(.5);a=wi(Si(a,Bi(t,e)),Si(n,e))}const l=function(e,t){const n=Js(e,"labels","sigmoidCrossEntropyWithLogits"),r=Js(t,"logits","sigmoidCrossEntropyWithLogits");L(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=jc(r),a=Si(r,n),i=Hu(Tu(ju(Vi(r))));return wi(Bi(s,a),i)}(a,i);return Wd(l,o,s)}});const Xd=na({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Bd.SUM_BY_NONZERO_WEIGHTS,a=Js(e,"onehotLabels","softmaxCrossEntropy");const i=Js(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Js(n,"weights","softmaxCrossEntropy")),L(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Ei(r),t=Ei(1),n=Ei(a.shape[1]);a=wi(Si(a,Bi(t,e)),Ni(e,n))}const l=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=$i(((e,t,r)=>{const s=Yu(t,[n],!0),a=Bi(bi(t,"float32"),s);r([e,a]);const i=ju(Si(a,e));return{value:ku(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=mu(e.shape,[n]);return[Si(bl(e,a),Bi(bi(r,"float32"),Tu(s))),Si(bl(e,a),Bi(Tu(s),bi(r,"float32")))]}}}));return r(e,t)}(a,i);return Wd(l,o,s)}});const Yd=na({sparseFillEmptyRows_:function(e,t,n,r){const s=Js(e,"indices","sparseFillEmptyRows","int32"),a=Js(t,"values","sparseFillEmptyRows"),i=Js(n,"denseShape","sparseFillEmptyRows","int32"),o=Js(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:a,denseShape:i,defaultValue:o},u=Gs.runKernel(sr,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});const Qd=na({sparseReshape_:function(e,t,n){const r=Js(e,"inputIndices","sparseReshape","int32"),s=Js(t,"inputShape","sparseReshape","int32"),a=Js(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=Gs.runKernel(ar,i);return{outputIndices:o[0],outputShape:o[1]}}});const Zd=na({sparseSegmentMean_:function(e,t,n){const r=Js(e,"data","sparseSegmentMean"),s=Js(t,"indices","sparseSegmentMean","int32"),a=Js(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return Gs.runKernel(ir,i)}});const Jd=na({sparseSegmentSum_:function(e,t,n){const r=Js(e,"data","sparseSegmentSum"),s=Js(t,"indices","sparseSegmentSum","int32"),a=Js(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return Gs.runKernel(or,i)}});const ep=na({stringNGrams_:function(e,t,n,r,s,a,i,o){const l=Js(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=Js(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},d=Gs.runKernel(pr,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}});const tp=na({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=Js(e,"input","stringSplit","string"),s=Js(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},i={input:r,delimiter:s},o=Gs.runKernel(fr,i,a);return{indices:o[0],values:o[1],shape:o[2]}}});const np=na({stringToHashBucketFast_:function(e,t){const n=Js(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return Gs.runKernel(mr,s,r)}});const rp=na({staticRegexReplace_:function(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const s=Js(e,"input","staticRegexReplace","string"),a={pattern:t,rewrite:n,replaceGlobal:r};return Gs.runKernel(hr,{x:s},a)}}),sp={fft:dh,ifft:ph,rfft:gh,irfft:fh},ap={hammingWindow:od,hannWindow:ld,frame:ud,stft:cd},ip={flipLeftRight:dd,grayscaleToRGB:pd,resizeNearestNeighbor:Fd,resizeBilinear:_d,rgbToGrayscale:fd,rotateWithOffset:md,cropAndResize:hd,nonMaxSuppression:yd,nonMaxSuppressionAsync:Cd,nonMaxSuppressionWithScore:$d,nonMaxSuppressionWithScoreAsync:Ed,nonMaxSuppressionPadded:Rd,nonMaxSuppressionPaddedAsync:Ad,threshold:Dd,transform:Od},op={bandPart:Md,gramSchmidt:Ld,qr:Pd},lp={absoluteDifference:Vd,computeWeightedLoss:Wd,cosineDistance:Ud,hingeLoss:Gd,huberLoss:Hd,logLoss:jd,meanSquaredError:qd,sigmoidCrossEntropy:Kd,softmaxCrossEntropy:Xd},up={sparseFillEmptyRows:Yd,sparseReshape:Qd,sparseSegmentMean:Zd,sparseSegmentSum:Jd},cp={stringNGrams:ep,stringSplit:tp,stringToHashBucketFast:np,staticRegexReplace:rp};const hp=class{static sgd(e){return new Ki(e)}static momentum(e,t){return new Xi(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new Yi(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Wi(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Mi(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new qi(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new zi(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},dp="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function pp(){return new Promise((e=>dp((()=>e()))))}function fp(e,t){const n=e[0].length;e.forEach(((e,t)=>{M(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),M(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)M(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function mp(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var gp;function yp(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],i=r[r.length-n.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${o}`)}else r[i]=a}return r}function bp(e){const t={FIRST_DIM_SIZE:gp.FIRST_DIM_SIZE,VALUE_ROWIDS:gp.VALUE_ROWIDS,ROW_LENGTHS:gp.ROW_LENGTHS,ROW_SPLITS:gp.ROW_SPLITS,ROW_LIMITS:gp.ROW_LIMITS,ROW_STARTS:gp.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function xp(e){return 0===e.length?0:e[0]===gp.FIRST_DIM_SIZE?e.length-1:e.length}function vp(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(gp||(gp={}));const wp=30;function kp(e){return e<=wp?e:ne(e,Math.floor(Math.sqrt(e)))}function Np(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function Sp(e,t,n){let r=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function Ip(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let r=t+1;r<e;++r)r<=2*t?(n.push(r),n.push(r-(t+1))):n.push(r)}else{const r=[],s=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?s.push(n):r.push(n);n.push(...r),n.push(0),n.push(...s)}return n}function Tp(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?r?s.push(t[a-1]*e[a]):s.push(e[a]/t[a-1]):s.push(e[a]);return s}function Cp(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function $p(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function Ep(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===P(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let h=0;h<s.length-1;++h)i*=s[h];const o=e.shape,l=s.slice();l.pop();let u=1;for(let h=a;h<n;++h)u*=o[h],l.push(o[h]);const c=[...re(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}const Rp=1.7580993408473768,Ap=1.0507009873554805,_p=.3275911,Fp=.254829592,Dp=-.284496736,Op=1.421413741,Mp=-1.453152027,Lp=1.061405429;function zp(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Pp(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Bp(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Wp(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Vp(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Up(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Gp(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Hp(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const jp="->",qp=/->/g,Kp=",",Xp="...";function Yp(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(qp,"").length)/jp.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${jp}").`);const[r,s]=e.split(jp);M(-1===r.indexOf(Xp),(()=>`The ellipsis notation ("${Xp}") is not supported yet.`));const a=r.split(Kp),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let h=0;h<s.length;++h){const e=s[h];if(!a.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let h=0;h<r.length;++h){const e=r[h];-1===o.indexOf(e)&&e!==Kp&&o.push(e)}const l=new Array(a.length);for(let h=0;h<i;++h){if(new Set(a[h].split("")).size!==a[h].length)throw new Error(`Found duplicate axes in input component ${a[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let e=0;e<a[h].length;++e)l[h].push(o.indexOf(a[h][e]))}const u=o.length,c=[];for(let h=s.length;h<u;++h)c.push(h);return{allDims:o,summedDims:c,idDims:l}}function Qp(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;const r=[];for(let s=0;s<e;++s)-1===n[s]&&r.push(s);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Zp(e,t,n){const r=new Array(e);for(let s=0;s<n.length;++s){const e=n[s].shape;for(let n=0;n<t[s].length;++n)void 0===r[t[s][n]]?r[t[s][n]]=e[n]:M(r[t[s][n]]===e[n],(()=>`Expected dimension ${r[t[s][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function Jp(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let i=0;i<s;++i)r.push([]);const a=[];for(let i=0;i<n.length;++i){const e=tf(t,n[i]);for(const t of e)-1===a.indexOf(t)&&(r[i].push(t),a.push(t))}return{path:n,steps:r}}function ef(e){return e.every(((e,t)=>e===t))}function tf(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function nf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"===typeof t)M(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);M(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}M(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function rf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function sf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function af(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function of(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function lf(e,t){return`size ${e} must be non-negative, not ${t}`}function uf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function cf(e,t){return`Input to reshape is a SparseTensor with ${P(e)}\n  dense values, but the requested shape requires a multiple of ${P(t)}. inputShape=${e} outputShape= ${t}`}function hf(e,t){return`Input to reshape is a tensor with ${P(e)} dense values, but the requested shape has ${P(t)}. inputShape=${e} outputShape=${t}`}function df(){return"segment ids must be >= 0"}function pf(){return"segment ids are not increasing"}function ff(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function mf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function gf(e,t){let n,r=!1;for(e<=wp?(n=e,r=!0):n=ne(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=ne(e,n+1);return n}function yf(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function bf(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<s;h++)o.push(t.shape[h]);for(let h=n+1;h<a;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function xf(e){try{return e.map((e=>ls(e)))}catch(cB){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${cB}`)}}function vf(e){return e.map((e=>os(e)))}!function(){for(const e of Qi)Di(e)}();const wf={kernelName:we,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Si(e,vh(bi(n,"float32"),-1))}}},kf={kernelName:ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ti(bi(n,"float32")),r=Ii(Bi(Ei(1),t));return ju(Ni(e,r))}}}},Nf={kernelName:Ne,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ii(Bi(Ti(bi(n,"float32")),1));return Ni(e,t)}}}},Sf={kernelName:Se,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Hi(n.shape,r.shape);return{a:()=>{let t=e;const r=Gi(n.shape,s);return r.length>0&&(t=ku(t,r)),bl(t,n.shape)},b:()=>{let t=e;const n=Gi(r.shape,s);return n.length>0&&(t=ku(t,n)),bl(t,r.shape)}}}},If={kernelName:Ie,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Tf={kernelName:$e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ci(n)}}},Cf={kernelName:Ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ci(n)}}},$f={kernelName:Re,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,Ii(Bi(Ei(1),Ti(bi(n,"float32")))))}}},Ef={kernelName:Ae,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ii(wi(Ei(1),Ti(bi(n,"float32"))));return Ni(e,t)}}}},Rf={kernelName:De,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Hi(n.shape,r.shape);return{a:()=>{const t=wi(Ti(n),Ti(r));let a=Si(e,Ni(r,t));const i=Gi(n.shape,s);return i.length>0&&(a=ku(a,i)),bl(a,n.shape)},b:()=>{const t=wi(Ti(n),Ti(r));let a=ju(Si(e,Ni(n,t)));const i=Gi(r.shape,s);return i.length>0&&(a=ku(a,i)),bl(a,r.shape)}}}},Af={kernelName:_e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,wi(Ti(bi(n,"float32")),1))}}},_f={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,Bi(Ei(1),Ti(bi(n,"float32"))))}}};const Ff=na({avgPool3dGrad_:function(e,t,n,r,s,a){const i=Js(e,"dy","avgPool3dGrad"),o=Js(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=bl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=bl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),M(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),yl("avgPool3dGrad",s,a);const h={dy:l,input:u},d={filterSize:n,strides:r,pad:s,dimRoundingMode:a},p=Gs.runKernel(ze,h,d);return c?bl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Df={kernelName:Le,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>Ff(e,r,s,a,i,o)}}};const Of=na({avgPoolGrad_:function(e,t,n,r,s){const a=Js(e,"dy","avgPoolGrad"),i=Js(t,"input","avgPoolGrad");M(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=bl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=bl(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),M(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=Gs.runKernel(Me,c,h);return u?bl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Mf={kernelName:Oe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>Of(e,r,s,a,i)}}},Lf={kernelName:Pe,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>kl(e,s,!1,!1),b:()=>kl(e,r,!0,!1)}:a&&!i?{a:()=>kl(s,e,!1,!0),b:()=>kl(r,e,!1,!1)}:{a:()=>kl(s,e,!0,!0),b:()=>kl(e,r,!0,!0)}:{a:()=>kl(e,s,!1,!0),b:()=>kl(r,e,!0,!1)}}},zf={kernelName:Be,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Tc(e,r,s)}}},Pf={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let l=s.length-1;l>=0;l--)if(s[l]===a[l])i[l]=1;else if(1!==s[l])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>ku(e,o,!0)}}},Bf={kernelName:Ge,gradFunc:e=>({x:()=>e.clone()})},Wf={kernelName:He,gradFunc:e=>({x:()=>Ci(e)})},Vf={kernelName:je,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>au(Qu(Du(r,s),Wu(r,a)),e,Ci(e))}}},Uf={kernelName:Ke,inputsToSave:["x"],gradFunc:wf.gradFunc},Gf={kernelName:Xe,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=j(s,t[0].shape)[0],i=r.map((e=>e[a]));return mh(e,i,a).map((e=>()=>e))}},Hf={kernelName:Ye,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return M(pl(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Gl(r.shape,e,s,i,o,l),filter:()=>Qh(r,e,s.shape,i,o,l)}}},jf={kernelName:Ze,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Vl(e,s,a,i,o,1,l),filter:()=>Qh(e,r,s.shape,a,i,o,l)}}};const qf=na({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=bl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=bl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),M(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),M(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),M(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),M(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),M(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:r,pad:s,filterShape:n};return Gs.runKernel(et,o,l)}}),Kf={kernelName:Je,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;M(pl(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>ql(i.shape,e,o,s,a),filter:()=>qf(i,e,o.shape,s,a)}}},Xf={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Si(ju(ah(bi(n,"float32"))),e)}}},Yf={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Si(ih(bi(n,"float32")),e)}}},Qf={kernelName:at,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=yu([s],r.rank);let n=Zl(e,s,a,!i);return null!=t&&(n=Vh(n,t)),n}}}},Zf={kernelName:ut,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;M(pl(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return M(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),M(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),M(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),M(fl(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),yl("depthwiseConv2d",a,i),{x:()=>sd(l.shape,e,u,s,a,o,i),filter:()=>rd(l,e,u.shape,s,a,o,i)}}},Jf={kernelName:pt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>Gs.runKernel(ft,a,n),filter:()=>Gs.runKernel(mt,i,n)}}},em={kernelName:xt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Gs.runKernel(vt,r)}}},tm={kernelName:wt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Si(Tu(ju(Ti(n))),2/Math.sqrt(Math.PI));return{x:()=>Si(e,r)}}},nm={kernelName:Nt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Si(e,n)}}},rm={kernelName:St,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>bl(e,n.shape)}}},sm={kernelName:It,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Si(e,Tu(n))}}},am={kernelName:Et,gradFunc:e=>({x:()=>Ci(e)})},im={kernelName:Rt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Hi(n.shape,r.shape);return{a:()=>{const t=Ni(e,bi(r,"float32")),a=Gi(n.shape,s);return a.length>0?bl(ku(t,a),n.shape):t},b:()=>{let t=Si(e,bi(n,"float32"));const a=Gi(r.shape,s);a.length>0&&(t=bl(ku(t,a),r.shape));const i=Ti(r);return ju(Ni(t,bi(i,"float32")))}}}},om={kernelName:At,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=null==o?Ei(1):o,u=Gi(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=Bi(s,a),d=Si(e,l),p=eh(wi(i,Ei(r))),f=Si(Si(Si(p,p),p),Ei(-.5));return{x:()=>1===a.rank?bl(Si(Si(e,Eu(bl(p,[1,1,1,a.shape[0]]),c)),l),s.shape):bl(Si(Si(e,p),l),s.shape),mean:()=>{let e=Si(Si(p,Ei(-1)),d);return 1===a.rank&&(e=ku(e,u)),bl(e,a.shape)},variance:()=>{let e=Si(Si(f,h),d);return 1===a.rank&&(e=ku(e,u)),bl(e,a.shape)},scale:()=>{const t=Si(h,p);let n=Si(e,t);return 1===a.rank&&(n=ku(n,u)),bl(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=ku(t,u)),bl(t,a.shape)}}}},lm={kernelName:_t,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a,batchDims:i}=n,o=j(a,r.shape)[0],l=(e,t,n)=>()=>{const r=e.shape,s=t.size,i=r.slice(0,o),l=i.length,u=r.slice(a,r.length).slice(1),c=u.length,h=um(0,l),d=um(l+1,l+1+c),p=cm([i,[s],u]),f=bl(n,p),m=bl(t,[s]),g=cm([[l],h,d]),y=Vh(f,g);let b=Oh(y,m,e.shape[o]);const x=bu(g);return b=Vh(b,x),b};if(1===i){const t=r.shape[0],n=r.split(t,0);return{x:()=>{const t=xh(n.map(((t,n)=>l(t,s.slice(n,1),e.slice(n,1))())));return t.reshape(r.shape)},indices:()=>s}}return{x:l(r,s,e),indices:()=>s}}};function um(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function cm(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const hm={kernelName:Ot,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ci(n),b:()=>Ci(r)}}},dm={kernelName:Mt,gradFunc:e=>({x:()=>bi(e,"float32")})},pm={kernelName:Pt,gradFunc:e=>({x:()=>Ci(e)})},fm={kernelName:Bt,gradFunc:e=>({x:()=>Ci(e)})},mm={kernelName:Wt,gradFunc:e=>({x:()=>Ci(e)})},gm={kernelName:Vt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=Fu(r,0);return{x:()=>au(a,e,Si(e,s))}}},ym={kernelName:qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,wi(n,1))}}},bm={kernelName:jt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,bi(n,"float32"))}}},xm={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=Tu(r);return Bi(e,Si(ku(e,s,!0),t))}}}};const vm=na({localResponseNormalizationBackprop_:function(e,t,n){const r={x:e,y:t,dy:n},s={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return Gs.runKernel(Zt,r,s)}}),wm={kernelName:Qt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>vm(r,s,e,a,i,o,l)}}};function km(e,t,n,r){return t.rank<n.rank&&(t=bl(t,mu(t.shape,r))),e.rank<n.rank&&(e=bl(e,mu(e.shape,r))),{x:()=>Si(e,bi(su(n,t),e.dtype))}}const Nm={kernelName:Jt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=km(e,t[1],a,j(s,a.shape));return{x:()=>i.x()}}},Sm={kernelName:en,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Si(e,bi(Du(n,r),"float32")),b:()=>Si(e,bi(Bu(n,r),"float32"))}}};const Im=na({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=Js(e,"dy","maxPool3dGrad"),l=Js(t,"input","maxPool3dGrad"),u=Js(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=bl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=bl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=bl(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),M(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),M(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),M(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),yl("maxPool3dGrad",a,i);const f={dy:c,input:h,output:d},m={filterSize:r,strides:s,pad:a,dimRoundingMode:i},g=Gs.runKernel(sn,f,m);return p?bl(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Tm={kernelName:rn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Im(e,r,s,a,i,o,l)}}};const Cm=na({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=Js(e,"dy","maxPoolGrad"),l=Js(t,"input","maxPoolGrad"),u=Js(n,"output","maxPoolGrad");M(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),M(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),M(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),yl("maxPoolGrad",a,i);const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return Gs.runKernel(nn,c,h)}}),$m={kernelName:tn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Cm(e,r,s,a,i,o)}}},Em={kernelName:ln,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=km(e,i,a,j(s,a.shape));return{x:()=>o.x()}}},Rm={kernelName:un,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Si(e,bi(Wu(n,r),"float32")),b:()=>Si(e,bi(Fu(n,r),"float32"))}}},Am={kernelName:cn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Sl(e,a,r.shape)}}},_m={kernelName:hn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Hi(n.shape,r.shape);return{a:()=>{const t=Gi(n.shape,s);return t.length>0?bl(ku(e,t),n.shape):e},b:()=>{const t=Si(e,ju(Au(Ni(n,r)))),a=Gi(r.shape,s);return a.length>0?bl(ku(t,a),r.shape):t}}}},Fm={kernelName:pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Hi(n.shape,r.shape);return{a:()=>{const t=Si(e,bi(r,"float32")),a=Gi(n.shape,s);return a.length>0?bl(ku(t,a),n.shape):t},b:()=>{const t=Si(e,bi(n,"float32")),a=Gi(r.shape,s);return a.length>0?bl(ku(t,a),r.shape):t}}}},Dm={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Sl(e,a,r.shape)}}},Om={kernelName:Nn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=Hi(a.shape,i.shape);return{a:()=>{const t=bi(i,"float32");let n=Si(e,Si(t,Pi(a,Bi(t,Ei(1)))));const r=Gi(a.shape,o);return r.length>0&&(n=ku(n,r)),bl(n,a.shape)},b:()=>{const t=Fu(a,0),n=au(t,Gu(a),Ci(a));let r=Si(e,Si(s,n));const l=Gi(i.shape,o);return l.length>0&&(r=ku(r,l)),bl(r,i.shape)}}}};function Mm(e,t,n){const r=e.shape.length,s=r-n.length,a=yu(n,r);let i=e;null!=a&&(i=Vh(e,a));const o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=bl(t,r),a=Ql(e,n,!0,!1),i=Ql(e,n,!0,!0),o=Si(a,i);return Si(s,o)}(i.reshape(o),t,s);if(u=u.reshape(i.shape),null!=a){const e=bu(a);u=Vh(u,e)}return u}const Lm={kernelName:yt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Hi(n.shape,r.shape);return{a:()=>{const t=Ni(e,bi(r,"float32")),a=Gi(n.shape,s);return a.length>0?bl(ku(t,a),n.shape):t},b:()=>{let t=Si(e,bi(n,"float32"));const a=Gi(r.shape,s);a.length>0&&(t=bl(ku(t,a),r.shape));const i=Ti(r);return ju(Ni(t,bi(i,"float32")))}}}},zm={kernelName:jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Fu(n,Ei(0)),r=Ei(Rp),s=Ei(Ap),a=Si(e,s),i=Si(Si(e,r),Tu(bi(n,"float32")));return au(t,a,i)}}}},Pm={kernelName:Qn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Si(e,Si(n,Bi(Ei(1),n)))}}},Bm={kernelName:rr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=Si(e,r);return{logits:()=>Bi(a,Si(ku(a,[s],true),r))}}},Wm={kernelName:tr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Cl(e,r,s)}}},Vm={kernelName:nr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>wl(e,r)}}},Um={kernelName:ur,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ei(2);return{a:()=>Si(e,Si(s,Bi(n,r))),b:()=>Si(e,Si(s,Bi(r,n)))}}},Gm={kernelName:gr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Hi(n.shape,r.shape);return{a:()=>{let t=e;const r=Gi(n.shape,s);return r.length>0&&(t=ku(t,r)),bl(t,n.shape)},b:()=>{let t=e;const n=Gi(r.shape,s);return n.length>0&&(t=ku(t,n)),bl(ju(t),r.shape)}}}},Hm={kernelName:br,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Si(Bi(Ei(1),Ti(n)),e)}}},jm={kernelName:xr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=Ci(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=wi(t,Sl(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=wi(t,Sl(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=wi(t,Sl(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=wi(t,Sl(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}};const qm=[wf,kf,Nf,Sf,If,Tf,Cf,$f,Ef,Rf,Af,_f,Df,Mf,Lf,zf,Pf,Bf,Wf,Vf,Uf,Gf,jf,Hf,Kf,Xf,Yf,Qf,Zf,Jf,Lm,em,tm,nm,rm,sm,im,am,om,lm,hm,dm,pm,fm,mm,gm,ym,bm,xm,wm,Nm,Nm,Sm,Tm,$m,{kernelName:on,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=j(s,r.shape),i=P(fu(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=bl(e,t);return Ni(Si(n,uc(r.shape,"float32")),i)}}}},Em,Rm,Am,_m,Fm,{kernelName:fn,gradFunc:e=>({x:()=>ju(e)})},{kernelName:vn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>lc(n.shape,"float32")}}},{kernelName:xn,gradFunc:e=>({x:()=>Ci(e)})},{kernelName:wn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Mh(e,r).map((e=>()=>e))}},Dm,Dm,Om,{kernelName:Sn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=Fu(n,0);return{x:()=>au(s,e,Si(e,r)),alpha:()=>{let t=au(s,Ci(e),Si(e,n));const a=Gi(r.shape,e.shape);return a.length>0&&(t=ku(t,a)),bl(t,r.shape)}}}},{kernelName:In,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=void 0===s||null===s?r.shape.map(((e,t)=>t)):"number"===typeof s?[s]:s,{x:()=>Mm(r,e,a)}}},{kernelName:An,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,ju(Ti(n)))}}},{kernelName:zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Si(Wu(n,6),vh(n));return{x:()=>Si(e,bi(r,"float32"))}}},{kernelName:_n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Si(e,bi(vh(n),"float32"))}}},{kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>bl(e,n.shape)}}},{kernelName:Mn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Gs.runKernel(Ln,s,n)}}},{kernelName:Dn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Gs.runKernel(On,s,n)}}},{kernelName:Pn,gradFunc:(e,t,n)=>{const{dims:r}=n,s=j(r,e.shape);return{x:()=>Kc(e,s)}}},{kernelName:Bn,gradFunc:e=>({x:()=>Ci(e)})},{kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ju(Ni(e,Si(Pi(n,1.5),2)))}}},{kernelName:Hn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>bi(Ci(n),"float32"),t:()=>Si(e,bi(n,e.dtype)),e:()=>Si(e,bi(Zu(n),e.dtype))}}},zm,Pm,{kernelName:Yn,gradFunc:e=>({x:()=>Ci(e)})},{kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Si(Xl(bi(n,"float32")),e)}}},{kernelName:Xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Si(Yl(bi(n,"float32")),e)}}},{kernelName:qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=Vo(r,s,a),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],i[c]-o[c]-l[c]]);return{x:()=>wc(e,u)}}},Bm,{kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Si(e,Nl(n))}}},Wm,Wm,Vm,Vm,{kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,Si(Ii(bi(n,"float32")),2))}}},Um,{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Si(e,Si(bi(n,"float32"),2))}}},{kernelName:Cr,gradFunc:e=>({x:()=>Ci(e)})},Gm,{kernelName:er,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;j(a,r.shape).forEach((e=>{s[e]=1}));const i=bl(e,s),o=Si(i,uc(r.shape,"float32"));return{x:()=>o}}},{kernelName:yr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,Ti(Xl(n)))}}},Hm,jm,{kernelName:kr,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=bu(s);return{x:()=>Vh(e,a)}}},{kernelName:Sr,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>xh(e,s)}}},{kernelName:Ir,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=ji(t,Ci(t)),r=_u(e,n);let s=Du(t,Ei(0,"int32"));const a=r.rank-s.rank;for(let o=0;o<a;++o)s=Cu(s,o+1);s=Qu(s,uc(r.shape,"bool"));const i=Ci(r);return au(s,r,i)}(e,n)}}},{kernelName:Tr,gradFunc:e=>({x:()=>Ci(e)})}];for(const n of qm)Wr(n);Ss().prototype.abs=function(){return this.throwIfDisposed(),Vi(this)},Ss().prototype.acos=function(){return this.throwIfDisposed(),Ho(this)},Ss().prototype.acosh=function(){return this.throwIfDisposed(),jo(this)},Ss().prototype.add=function(e){return this.throwIfDisposed(),wi(this,e)},Ss().prototype.all=function(e,t){return this.throwIfDisposed(),Ko(this,e,t)},Ss().prototype.any=function(e,t){return this.throwIfDisposed(),Xo(this,e,t)},Ss().prototype.argMax=function(e){return this.throwIfDisposed(),Yo(this,e)},Ss().prototype.argMin=function(e){return this.throwIfDisposed(),Qo(this,e)},Ss().prototype.asScalar=function(){return this.throwIfDisposed(),M(1===this.size,(()=>"The array must have only 1 element.")),bl(this,[])},Ss().prototype.asType=function(e){return this.throwIfDisposed(),bi(this,e)},Ss().prototype.as1D=function(){return this.throwIfDisposed(),bl(this,[this.size])},Ss().prototype.as2D=function(e,t){return this.throwIfDisposed(),bl(this,[e,t])},Ss().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),bl(this,[e,t,n])},Ss().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),bl(this,[e,t,n,r])},Ss().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),bl(this,[e,t,n,r,s])},Ss().prototype.asin=function(){return this.throwIfDisposed(),Zo(this)},Ss().prototype.asinh=function(){return this.throwIfDisposed(),Jo(this)},Ss().prototype.atan=function(){return this.throwIfDisposed(),el(this)},Ss().prototype.atan2=function(e){return this.throwIfDisposed(),tl(this,e)},Ss().prototype.atanh=function(){return this.throwIfDisposed(),nl(this)},Ss().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),xl(this,e,t,n,r)},Ss().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Cl(this,e,t)},Ss().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),$l(this,e,t,n,r,s)},Ss().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Ol(this,e)},Ss().prototype.cast=function(e){return this.throwIfDisposed(),bi(this,e)},Ss().prototype.ceil=function(){return this.throwIfDisposed(),Ml(this)},Ss().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Ll(this,e,t)},Ss().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ns&&(e=[e]),wl([this,...e],t)},Ss().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ul(this,e,t,n,r,s,a)},Ss().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Hl(this,e,t,n,r,s)},Ss().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Vl(this,e,t,n,r,s,a)},Ss().prototype.cos=function(){return this.throwIfDisposed(),Xl(this)},Ss().prototype.cosh=function(){return this.throwIfDisposed(),Yl(this)},Ss().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Ql(this,e,t,n)},Ss().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Zl(this,e,t,n)},Ss().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),eu(this,e,t)},Ss().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),tu(this,e,t,n,r,s,a)},Ss().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),ru(this,e,t,n,r,s)},Ss().prototype.divNoNan=function(e){return this.throwIfDisposed(),iu(this,e)},Ss().prototype.div=function(e){return this.throwIfDisposed(),Ni(this,e)},Ss().prototype.dot=function(e){return this.throwIfDisposed(),ou(this,e)},Ss().prototype.elu=function(){return this.throwIfDisposed(),uu(this)},Ss().prototype.equal=function(e){return this.throwIfDisposed(),su(this,e)},Ss().prototype.erf=function(){return this.throwIfDisposed(),hu(this)},Ss().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Iu(this,e,t)},Ss().prototype.exp=function(){return this.throwIfDisposed(),Tu(this)},Ss().prototype.expandDims=function(e){return this.throwIfDisposed(),Cu(this,e)},Ss().prototype.expm1=function(){return this.throwIfDisposed(),$u(this)},Ss().prototype.fft=function(){return this.throwIfDisposed(),dh(this)},Ss().prototype.flatten=function(){return this.throwIfDisposed(),bl(this,[this.size])},Ss().prototype.floor=function(){return this.throwIfDisposed(),Au(this)},Ss().prototype.floorDiv=function(e){return this.throwIfDisposed(),ki(this,e)},Ss().prototype.gather=function(e,t,n){return this.throwIfDisposed(),_u(this,e,t,n)},Ss().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Du(this,e)},Ss().prototype.greater=function(e){return this.throwIfDisposed(),Fu(this,e)},Ss().prototype.ifft=function(){return this.throwIfDisposed(),ph(this)},Ss().prototype.irfft=function(){return this.throwIfDisposed(),fh(this)},Ss().prototype.isFinite=function(){return this.throwIfDisposed(),Mu(this)},Ss().prototype.isInf=function(){return this.throwIfDisposed(),Lu(this)},Ss().prototype.isNaN=function(){return this.throwIfDisposed(),zu(this)},Ss().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Pu(this,e)},Ss().prototype.lessEqual=function(e){return this.throwIfDisposed(),Wu(this,e)},Ss().prototype.less=function(e){return this.throwIfDisposed(),Bu(this,e)},Ss().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Uu(this,e,t,n,r)},Ss().prototype.logSigmoid=function(){return this.throwIfDisposed(),Ku(this)},Ss().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Xu(this,e)},Ss().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Yu(this,e,t)},Ss().prototype.log=function(){return this.throwIfDisposed(),Gu(this)},Ss().prototype.log1p=function(){return this.throwIfDisposed(),Hu(this)},Ss().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Qu(this,e)},Ss().prototype.logicalNot=function(){return this.throwIfDisposed(),Zu(this)},Ss().prototype.logicalOr=function(e){return this.throwIfDisposed(),Ju(this,e)},Ss().prototype.logicalXor=function(e){return this.throwIfDisposed(),ec(this,e)},Ss().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),kl(this,e,t,n)},Ss().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),sc(this,e,t,n,r)},Ss().prototype.max=function(e,t){return this.throwIfDisposed(),vu(this,e,t)},Ss().prototype.maximum=function(e){return this.throwIfDisposed(),ji(this,e)},Ss().prototype.mean=function(e,t){return this.throwIfDisposed(),oc(this,e,t)},Ss().prototype.min=function(e,t){return this.throwIfDisposed(),wu(this,e,t)},Ss().prototype.minimum=function(e){return this.throwIfDisposed(),hc(this,e)},Ss().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),dc(this,e,t)},Ss().prototype.mod=function(e){return this.throwIfDisposed(),pc(this,e)},Ss().prototype.mul=function(e){return this.throwIfDisposed(),Si(this,e)},Ss().prototype.neg=function(){return this.throwIfDisposed(),ju(this)},Ss().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Su(this,e,t,n)},Ss().prototype.notEqual=function(e){return this.throwIfDisposed(),yc(this,e)},Ss().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),bc(this,e,t,n)},Ss().prototype.onesLike=function(){return this.throwIfDisposed(),xc(this)},Ss().prototype.pad=function(e,t){return this.throwIfDisposed(),wc(this,e,t)},Ss().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),Cc(this,e,t,n,r,s,a)},Ss().prototype.pow=function(e){return this.throwIfDisposed(),Pi(this,e)},Ss().prototype.prelu=function(e){return this.throwIfDisposed(),$c(this,e)},Ss().prototype.prod=function(e,t){return this.throwIfDisposed(),Ec(this,e,t)},Ss().prototype.reciprocal=function(){return this.throwIfDisposed(),Hc(this)},Ss().prototype.relu=function(){return this.throwIfDisposed(),jc(this)},Ss().prototype.relu6=function(){return this.throwIfDisposed(),qc(this)},Ss().prototype.reshapeAs=function(e){return this.throwIfDisposed(),bl(this,e.shape)},Ss().prototype.reshape=function(e){return this.throwIfDisposed(),bl(this,e)},Ss().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),_d(this,e,t,n)},Ss().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Fd(this,e,t,n)},Ss().prototype.reverse=function(e){return this.throwIfDisposed(),Kc(this,e)},Ss().prototype.rfft=function(){return this.throwIfDisposed(),gh(this)},Ss().prototype.round=function(){return this.throwIfDisposed(),Jc(this)},Ss().prototype.rsqrt=function(){return this.throwIfDisposed(),eh(this)},Ss().prototype.selu=function(){return this.throwIfDisposed(),th(this)},Ss().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),nh(this,e,t,n,r,s,a)},Ss().prototype.sigmoid=function(){return this.throwIfDisposed(),Nl(this)},Ss().prototype.sign=function(){return this.throwIfDisposed(),sh(this)},Ss().prototype.sin=function(){return this.throwIfDisposed(),ah(this)},Ss().prototype.sinh=function(){return this.throwIfDisposed(),ih(this)},Ss().prototype.slice=function(e,t){return this.throwIfDisposed(),Sl(this,e,t)},Ss().prototype.softmax=function(e){return this.throwIfDisposed(),hh(this,e)},Ss().prototype.softplus=function(){return this.throwIfDisposed(),qu(this)},Ss().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Tc(this,e,t)},Ss().prototype.split=function(e,t){return this.throwIfDisposed(),mh(this,e,t)},Ss().prototype.sqrt=function(){return this.throwIfDisposed(),Ii(this)},Ss().prototype.square=function(){return this.throwIfDisposed(),Ti(this)},Ss().prototype.squaredDifference=function(e){return this.throwIfDisposed(),yh(this,e)},Ss().prototype.squeeze=function(e){return this.throwIfDisposed(),bh(this,e)},Ss().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Ns?[this,e]:[this,...e];return xh(n,t)},Ss().prototype.step=function(e){return this.throwIfDisposed(),vh(this,e)},Ss().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),wh(this,e,t,n,r,s,a,i,o)},Ss().prototype.sub=function(e){return this.throwIfDisposed(),Bi(this,e)},Ss().prototype.sum=function(e,t){return this.throwIfDisposed(),ku(this,e,t)},Ss().prototype.tan=function(){return this.throwIfDisposed(),kh(this)},Ss().prototype.tanh=function(){return this.throwIfDisposed(),Il(this)},Ss().prototype.tile=function(e){return this.throwIfDisposed(),Eu(this,e)},Ss().prototype.toBool=function(){return this.throwIfDisposed(),bi(this,"bool")},Ss().prototype.toFloat=function(){return this.throwIfDisposed(),bi(this,"float32")},Ss().prototype.toInt=function(){return this.throwIfDisposed(),bi(this,"int32")},Ss().prototype.topk=function(e,t){return this.throwIfDisposed(),_h(this,e,t)},Ss().prototype.transpose=function(e){return this.throwIfDisposed(),Vh(this,e)},Ss().prototype.unique=function(e){return this.throwIfDisposed(),Dh(this,e)},Ss().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Oh(this,e,t)},Ss().prototype.unstack=function(e){return this.throwIfDisposed(),Mh(this,e)},Ss().prototype.where=function(e,t){return this.throwIfDisposed(),au(e,this,t)},Ss().prototype.zerosLike=function(){return this.throwIfDisposed(),Ci(this)};class Km extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Km.prototype)}}class Xm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xm.prototype)}}class Ym extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ym.prototype)}}class Qm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qm.prototype)}}class Zm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Zm.prototype)}}Error;class Jm{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function eg(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function tg(e,t){if(!e)throw new Zm(t)}function ng(e,t){let n=0;for(const r of e)r===t&&n++;return n}function rg(e){return 1===e.length?e[0]:e}function sg(e){return Array.isArray(e)?e:[e]}function ag(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function ig(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let og={};function lg(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function ug(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>ug(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?ug(t):e[n]=t.value)}}}function cg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in og)a=og[s];else if(a=t[s],null==a)throw new Ym(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Ym(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in og?[o,l]=og.className:i in t&&([o,l]=t[i]),null==o)throw new Ym(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(og))e[n]=og[n];for(const s of Object.keys(n))e[s]=n[s];a.config.customObjects=e;const t=Object.assign({},og);for(const s of Object.keys(n))og[s]=n[s];ug(a.config);const r=l(o,a.config,n,s);return og=Object.assign({},t),r}{const e=Object.assign({},og);for(const r of Object.keys(n))og[r]=n[r];const t=new o(a.config);return og=Object.assign({},e),t}}}function hg(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function dg(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function pg(e){if(null==e)throw new Ym(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function fg(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Ym(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function mg(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return tg(n>=0),tg(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function gg(e,t){Array.isArray(e)?(M(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>gg(e,`element ${n+1} of ${t}`)))):M(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${yg(e)}.`))}function yg(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>yg(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function bg(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let xg=0;function vg(){return xg++}const wg={};function kg(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in wg||(wg[e]=0),wg[e]+=1,e+wg[e].toString()}const Ng=["channelsFirst","channelsLast"],Sg=["nearest","bilinear"],Ig=["valid","same","causal"],Tg=["max","avg"],Cg=["sum","mul","concat","ave"],$g=new Map;function Eg(e){fg(Ng,"DataFormat",e)}function Rg(e){fg(Ig,"PaddingMode",e)}function Ag(e){fg(Tg,"PoolMode",e)}const _g=[];function Fg(e,t){_g.push(e);try{const e=t();return _g.pop(),e}catch(n){throw _g.pop(),n}}function Dg(e){if(!Lg(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===_g.length?"":_g.join("/")+"/")+e}function Og(e){if(!Lg(e))throw new Error("Not a valid tensor name: '"+e+"'");$g.has(e)||$g.set(e,0);const t=$g.get(e);if($g.set(e,$g.get(e)+1),t>0){const n=`${e}_${t}`;return $g.set(n,1),n}return e}const Mg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Lg(e){return!!e.match(Mg)}function zg(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Pg(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Bg(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Wg(e,t){if(t<e)throw new Ym(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let Vg;function Ug(){return null==Vg&&(Vg=fa().epsilon()),Vg}function Gg(e,t){return bi(e,t)}function Hg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),bl(e,n)}function jg(e,t,n){return ca((()=>{switch(e.rank){case 1:return oh(e,t,n);case 2:return lh(e,[t,0],[n,e.shape[1]]);case 3:return uh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return ch(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Sl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Sl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Ym(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function qg(e,t,n){return ca((()=>{switch(e.rank){case 1:return oh(e,t,n);case 2:return lh(e,[0,t],[e.shape[0],n]);case 3:return uh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return ch(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Ym(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Kg(e,t,n,r){return ca((()=>{switch(e.rank){case 1:return oh(e,t,n);case 2:switch(r){case 1:return jg(e,t,n);case 2:return qg(e,t,n);default:throw new Ym(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return jg(e,t,n);case 2:return uh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return qg(e,t,n);default:throw new Ym(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return jg(e,t,n);case 2:return ch(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return ch(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return qg(e,t,n);default:throw new Ym(`The axis is not within the rank of the tensor ${r}`)}default:throw new Ym(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Xg(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),wl(e,n)}function Yg(e,t){switch(e.rank){case 1:return zl([e,t]);case 2:return Pl([e,t],0);case 3:return Bl([e,t],0);case 4:return Wl([e,t],0);default:throw new Ym(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Qg(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Ym(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Eu(e,t)}function Zg(e){return Pc(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0)}function Jg(e,t,n,r){if(e.rank<2||t.rank<2)throw new Qm(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Qm(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){return id({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?ny(e.rank,r,"channelsLast"):null,activation:n})}{const s=e.shape.slice(),a=s.pop();e=bl(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=bl(Vh(t,c),[l,-1]);const h=[...s,...u];return bl(id({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?ny(e.rank,r,"channelsLast"):null,activation:n}),h)}}function ey(e,t,n){return ca((()=>(t=Array.isArray(t)?Nh(t,"int32"):bi(t,"int32"),_u(e,t,n))))}function ty(e){return Si(e,e)}function ny(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Ym(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?bl(t,[1,r[0],1,1,1]):bl(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?bl(t,[1,1,1,1,r[0]]):bl(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?bl(t,[1,r[0],1,1]):bl(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?bl(t,[1,1,1,r[0]]):bl(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?bl(t,[1,r[0],1]):bl(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?bl(t,[1,1,r[0]]):bl(t,[1].concat(r))}else if(e<3)return t;throw new Ym(`Unsupported input rank by biasAdd: ${t.rank}`)}function ry(e,t,n){return ca((()=>(null==n&&(n="channelsLast"),Eg(n),wi(e,ny(e.rank,t,n)))))}function sy(e,t,n,r){return ca((()=>qh(e,t,n,r)))}function ay(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const iy=["fanIn","fanOut","fanAvg"],oy=["normal","uniform","truncatedNormal"];class ly extends _i{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class uy extends ly{apply(e,t){return lc(e,t)}}uy.className="Zeros",Di(uy);class cy extends ly{apply(e,t){return uc(e,t)}}cy.className="Ones",Di(cy);class hy extends ly{constructor(e){if(super(),"object"!==typeof e)throw new Ym(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Ym(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return ca((()=>Si(Ei(this.value),uc(e,t))))}getConfig(){return{value:this.value}}}hy.className="Constant",Di(hy);class dy extends ly{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Wc(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}dy.className="RandomUniform",Di(dy);class py extends ly{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Qm(`randomNormal does not support dType ${t}.`);return Zg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}py.className="RandomNormal",Di(py);class fy extends ly{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Qm(`truncatedNormal does not support dType ${t}.`);return Fh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}fy.className="TruncatedNormal",Di(fy);class my extends ly{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return ca((()=>{if(2!==e.length||e[0]!==e[1])throw new Ym("Identity matrix initializer can only be used for 2D square matrices.");return Si(this.gain,Ru(e[0]))}))}getConfig(){return{gain:this.gain}}}my.className="Identity",Di(my);class gy extends ly{constructor(e){if(super(),e.scale<0)throw new Ym(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,fg(iy,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){fg(oy,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Eg(r),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===r){const r=zg(e,2);t=e[1]*r,n=e[0]*r}else if("channelsLast"===r){const r=zg(e,0,e.length-2);t=e[e.length-2]*r,n=e[e.length-1]*r}}else{const r=zg(e);t=Math.sqrt(r),n=Math.sqrt(r)}return[t,n]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Qm(`${this.getClassName()} does not support dType ${t}.`);return Fh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Wc(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}gy.className="VarianceScaling",Di(gy);class yy extends gy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gy.className}}yy.className="GlorotUniform",Di(yy);class by extends gy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gy.className}}by.className="GlorotNormal",Di(by);class xy extends gy{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gy.className}}xy.className="HeNormal",Di(xy);class vy extends gy{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gy.className}}vy.className="HeUniform",Di(vy);class wy extends gy{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gy.className}}wy.className="LeCunNormal",Di(wy);class ky extends gy{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gy.className}}ky.className="LeCunUniform",Di(ky);class Ny extends ly{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return ca((()=>{if(e.length<2)throw new Qm("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=P(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const a=Zg([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),i=op.qr(a,!1);let o=i[0];const l=i[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=Si(o,l.sign()),n<r&&(o=o.transpose()),Si(Ei(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ny.className="Orthogonal",Di(Ny);const Sy={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Iy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return cg(e,Fi.getMap().classNameMap,t,"initializer")}function Ty(e){return lg(e)}function Cy(e){if("string"===typeof e){const t=e in Sy?Sy[e]:e;if("GlorotNormal"===t)return new by;if("GlorotUniform"===t)return new yy;if("HeNormal"===t)return new xy;if("HeUniform"===t)return new vy;if("LeCunNormal"===t)return new wy;if("LeCunUniform"===t)return new ky;{const e={};return e.className=t,e.config={},Iy(e)}}return e instanceof ly?e:Iy(e)}function $y(e){return Array.isArray(e)&&Array.isArray(e[0])}function Ey(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Ry(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Ym(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ay(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Ym(`Expected exactly 1 Shape; got ${e.length}`)}return e}function _y(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Fy="Variable";class Dy{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Fy,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=vg(),n=null==n?Fy:n,this.originalName=Dg(n),this.name=Og(this.originalName),this.trainable_=r,this.constraint=s,this.val=zh(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Oy(e){return e.map((e=>e.read()))}function My(e){e.forEach((e=>{e[0].write(e[1])}))}class Ly{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class zy{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=vg(),null!=a&&(this.originalName=Dg(a),this.name=Og(this.originalName)),this.rank=t.length}}let Py=0;class By{constructor(e,t){this.callArgs=t,this.id=Py++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Wy=0;class Vy extends _i{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Wy++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ag(e)+"_"+kg(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Xm(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Ym(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return rg(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return rg(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Km(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Km(`Layer ${this.name} is not connected, no input to return.`);return rg(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Km(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Km(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return rg(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=sg(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=sg(this.inputSpec);if(t.length!==n.length)throw new Ym(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const e=t[r],s=n[r];if(null==s)continue;const a=e.rank;if(null!=s.ndim&&a!==s.ndim)throw new Ym(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new Ym(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new Ym(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&e.dtype!==s.dtype)throw new Ym(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${e.dtype}.`);if(s.axes){const t=e.shape;for(const e in s.axes){const n=Number(e),a=s.axes[e],i=n>=0?t[n]:t[t.length+n];if(null!=a&&-1===[a,null].indexOf(i))throw new Ym(`Input ${r} is incompatible with layer ${this.name}: expected axis ${n} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],a=e.shape[t];if(null!=n&&null!=a&&n!==a)throw new Ym(`Input ${r} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${e.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=sg(e),r=function(e){let t=!0;for(const n of sg(e))if(!(n instanceof zy)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of sg(e))if(n instanceof zy){t=!1;break}return t}(e);if(r===s)throw new Ym("Arguments to apply() must be all SymbolicTensors or all Tensors");return Fg(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of sg(e))t.push(n.shape);this.build(rg(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const s=sg(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=rg(a),null!=this.activityRegularizer)throw new Qm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=sg(e);const t=[];for(const n of e)t.push(n.shape);return rg(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new zy(a,n,this,sg(e),t,this.name,r))):new zy(a,r,this,sg(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Qm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Km(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Km(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Xm(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return _y(this.weights)}build(e){this.built=!0}getWeights(){return Oy(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){ca((()=>{const t=this.weights;if(t.length!==e.length)throw new Ym(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Oy(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!B(a.shape,o.shape))throw new Ym(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}My(n)}))}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Ym(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Cy("zeros"));const l=r.apply(t,n),u=new Dy(l,n,e,a,i);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=sg(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),s=sg(t),a=sg(r);if(s.length!==a.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let i=0;i<s.length;i++)s[i].kerasMask=a[i]}addInboundNode(e,t,n,r,s,a){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const o=sg(e);t=sg(t),n=sg(n),r=sg(r),s=Ey(s),a=Ey(a);const l=[],u=[],c=[];for(const h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),c.push(h.tensorIndex);new By({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Uy(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Uy(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Gy extends Vy{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:kg("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Ym("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Ym("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Ym("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new zy(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new By({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Ym(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Gy.className="InputLayer",Di(Gy);class Hy{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Hy)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Ym(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return bi(t,e.dtype)}catch(cB){throw new Ym(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof zy){if(null==this.id2Value[e.id])throw new Ym(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Ym(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof zy){if(null==this.id2Value[e.id])throw new Ym(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Ym(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&ha(this.id2Mask)}}const jy=new Jm,qy=new Jm;function Ky(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const f of o)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=jy.get(c);if(null==d){const e=function(e,t){M(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=Yy(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=Yy(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:Xy(r)}}(i,t);d=e.sorted,h=e.recipientCounts,jy.put(c,d),qy.put(c,h)}h={},s||Object.assign(h,qy.get(c));const p=new Hy(t);for(let f=0;f<d.length;++f){if(null!=r){const e=ua().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=d[f],a=e.sourceLayer;if(a instanceof Gy)continue;const i=[],u=[],c=[];let m=!1;for(const n of e.inputs){const e=p.getValue(n),r=p.getMask(n);i.push(e),u.push(r),null!=r&&(m=!0),s||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==o.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||c.push(e))}m&&((n=n||{}).mask=u[0]);const g=sg(a.apply(i,n));let y=null;a.supportsMasking&&(y=a.computeMask(i,u));const b=Qy(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){p.hasKey(x[t])||p.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}s||ha(c)}return p.disposeMasks(),a?l:l[0]}function Xy(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Yy(e,t){const n=new Set,r=[],s={};for(const o of t.names())n.add(o);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function Qy(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Zy(e,t){return ca((()=>Ii(ku(Si(e,e),t,!0))))}ge().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=jy&&jy.setMaxEntries(e),null!=qy&&qy.setMaxEntries(e)}));class Jy extends _i{getConfig(){return{}}}class eb extends Jy{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ca((()=>{const t=Zy(e,this.axis),n=Ll(t,0,this.maxValue);return Si(e,Ni(n,wi(Ug(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}eb.className="MaxNorm",Di(eb);class tb extends Jy{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ca((()=>Ni(e,wi(Ug(),Zy(e,this.axis)))))}getConfig(){return{axis:this.axis}}}tb.className="UnitNorm",Di(tb);class nb extends Jy{apply(e){return jc(e)}}nb.className="NonNeg",Di(nb);class rb extends Jy{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ca((()=>{const t=Zy(e,this.axis),n=wi(Si(this.rate,Ll(t,this.minValue,this.maxValue)),Si(1-this.rate,t));return Si(e,Ni(n,wi(Ug(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}rb.className="MinMaxNorm",Di(rb);const sb={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ab(e){return lg(e)}function ib(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return cg(e,Fi.getMap().classNameMap,t,"constraint")}function ob(e){if(null==e)return null;if("string"===typeof e){return ib({className:e in sb?sb[e]:e,config:{}})}return e instanceof Jy?e:ib(e)}async function lb(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!==typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];ha(r)}}function ub(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var cb;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(cb||(cb={}));class hb{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class db{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class pb extends hb{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"===typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const s=ca((()=>wi(this.totals[r],Si(e,n))));this.totals[r]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:ca((()=>{const e=Si(Ni(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),da(t[n])})))}}class fb extends hb{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!==typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const r=await Promise.all(e);for(let s=0;s<r.length;++s){this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=r[s][0]}}}class mb extends hb{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||pp,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");J(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():is();return function(){const a=null!=n?n():is();return a-s<t||(s=a,r=e(...arguments)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await lb(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await lb(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await lb(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await lb(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await lb(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):J(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await lb(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await lb(e),await this.trainEnd(e))}}function gb(e,t){if(null==e&&(e={}),e instanceof hb)return[e];if(Array.isArray(e)&&e[0]instanceof hb)return e;return sg(e).map((e=>new mb(e,t)))}class yb{constructor(){}static registerCallbackConstructor(e,t){M(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),yb.checkForDuplicate(t),null==yb.constructors[e]&&(yb.constructors[e]=[]),yb.constructors[e].push(t)}static checkForDuplicate(e){for(const t in yb.constructors){yb.constructors[+t].forEach((t=>{if(t===e)throw new Ym("Duplicate callback constructor.")}))}}static clear(){yb.constructors={}}static createCallbacks(e){const t=[];for(const n in yb.constructors){const r=+n;e>=r&&t.push(...yb.constructors[r])}return t.map((e=>new e))}}function bb(e,t,n,r,s,a,i,o,l){const u=new fb,c=[new pb,...yb.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new db(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function xb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return cg(e,Fi.getMap().classNameMap,t,"layer",n)}function vb(e,t){return ca((()=>{"float32"!==e.dtype&&(e=bi(e,"float32"));const n=ku(ty(e),t,!0),r=Li(n.shape,Ug()),s=Ii(ji(n,r));return Ni(e,s)}))}function wb(e,t){return ca((()=>oc(ty(Bi(t,e)),-1)))}function kb(e,t){return ca((()=>oc(Vi(Bi(t,e)),-1)))}function Nb(e,t){return ca((()=>{const n=Bi(e,t),r=Ll(Vi(e),Ug(),Number.MAX_VALUE),s=Vi(Ni(n,r));return Si(100,oc(s,-1))}))}function Sb(e,t){return ca((()=>{const n=Ll(t,Ug(),Number.MAX_VALUE),r=Gu(wi(1,n)),s=Ll(e,Ug(),Number.MAX_VALUE),a=Gu(wi(1,s));return oc(ty(Bi(r,a)),-1)}))}function Ib(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ca((()=>{if(n)t=hh(t);else{const e=ku(t,t.shape.length-1,!0);t=Ni(t,e)}return t=Ll(t,Ug(),1-Ug()),ju(ku(Si(bi(e,"float32"),Gu(t)),t.shape.length-1))}))}function Tb(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ca((()=>{const r=bi(Au(function(e){const t=[zg(e.shape)];return bl(e,t)}(e)),"int32"),s=(t=Ll(t,Ug(),1-Ug())).shape;return Ib(bl(bc(r,s[s.length-1]),s),t,n)}))}function Cb(e,t){return ca((()=>{let n;return n=Ll(t,Ug(),1-Ug()),n=Gu(Ni(n,Bi(1,n))),oc(function(e,t){if(!B(e.shape,t.shape))throw new Ym(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return ca((()=>{const n=jc(t),r=ju(Vi(t));return wi(Bi(n,Si(t,e)),Hu(Tu(r)))}))}(e,n),-1)}))}function $b(e,t){return ca((()=>{const n=Ll(e,Ug(),1),r=Ll(t,Ug(),1);return ku(Si(e,Gu(Ni(n,r))),-1)}))}function Eb(e,t){return ca((()=>{const n=vb(e,-1),r=vb(t,-1),s=Si(n,r);return ju(ku(s,-1))}))}yb.constructors={};const Rb={meanSquaredError:wb,meanAbsoluteError:kb,meanAbsolutePercentageError:Nb,meanSquaredLogarithmicError:Sb,squaredHinge:function(e,t){return ca((()=>{const n=ji(0,Bi(1,Si(e,t)));return oc(ty(n),-1)}))},hinge:function(e,t){return ca((()=>{const n=ji(0,Bi(1,Si(e,t)));return oc(n,-1)}))},categoricalHinge:function(e,t){return ca((()=>{const n=ku(Si(e,t),-1),r=vu(Si(Bi(1,e),t),-1);return ji(0,wi(1,Bi(r,n)))}))},logcosh:function(e,t){return ca((()=>{const n=Math.log(2),r=Bi(t,e),s=Bi(wi(r,qu(Si(-2,r))),n);return oc(s,-1)}))},categoricalCrossentropy:Ib,sparseCategoricalCrossentropy:Tb,binaryCrossentropy:Cb,kullbackLeiblerDivergence:$b,poisson:function(e,t){return ca((()=>{const n=Gu(wi(Ug(),t));return oc(Bi(t,Si(e,n)),-1)}))},cosineProximity:Eb};function Ab(e){if("string"===typeof e){if(e in Rb)return Rb[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Ym(t)}return e}function _b(e,t){return ca((()=>{const n=Si(.5,xc(t)),r=Gg(Fu(t,n),e.dtype);return oc(su(e,r),-1)}))}function Fb(e,t){return ca((()=>Gg(su(Yo(e,-1),Yo(t,-1)),"float32")))}function Db(e,t){return ca((()=>bi(ku(Qu(su(e,1),su(t,1))),"float32")))}function Ob(e,t){return Cb(e,t)}function Mb(e,t){return e.rank===t.rank&&(e=bh(e,[e.rank-1])),(t=Yo(t,-1)).dtype!==e.dtype&&(t=bi(t,e.dtype)),bi(su(e,t),"float32")}const Lb=Ib,zb=Tb,Pb={binaryAccuracy:_b,categoricalAccuracy:Fb,precision:function(e,t){return ca((()=>{const n=Db(e,t),r=function(e,t){return ca((()=>bi(ku(Qu(su(e,0),su(t,1))),"float32")))}(e,t),s=wi(n,r);return bi(au(Fu(s,0),Ni(n,s),0),"float32")}))},categoricalCrossentropy:Lb,sparseCategoricalCrossentropy:zb,mse:wb,MSE:wb,mae:kb,MAE:kb,mape:Nb,MAPE:Nb,cosine:Eb};function Bb(e){if("string"===typeof e&&e in Pb)return Pb[e];if("string"!==typeof e&&null!=e)return e;throw new Ym(`Unknown metric ${e}`)}function Wb(e){if(tg(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys(Rb))if(Rb[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Pb))if(Pb[n]===e){t=n;break}return void 0!==t?t:e.name}}const Vb=1048576;function Ub(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Gb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Vb&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Gb(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!Gb(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Gb(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Hb(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const s=function(e){let t=!0;const n=[],r=[];for(const s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of e.layers){let e=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),jb(a,n,r),r("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)s?qb(o[c],n,r):Kb(o[c],n,i,r),r((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;t=null!=e.collectedTrainableWeights?_y(e.collectedTrainableWeights):_y(e.trainableWeights);return t}(e),u=_y(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function jb(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function qb(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(cB){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(cB){r="multiple"}jb([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function Kb(e,t,n,r){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(cB){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(cB){s="multiple"}const i=[];for(const c of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(c)))for(let e=0;e<c.inboundLayers.length;++e){const t=c.inboundLayers[e].name,n=c.nodeIndices[e],r=c.tensorIndices[e];i.push(`${t}[${n}][${r}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];jb([`${o} (${l})`,a,s,e.countParams().toString(),u],t,r);for(let c=1;c<i.length;++c)jb(["","","","",i[c]],t,r)}function Xb(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function Yb(e,t){if(null===e)return null;if("string"===typeof e)return ig(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Xb(t,s,r)?n.push(r):n.push(Yb(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"===typeof r)t[n]=r;else{const e=ig(n);t[e]=Yb(r,e)}}return t}}function Qb(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return ag(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Xb(t,s,r)?n.push(r):n.push(Qb(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],s=ag(n);t[s]="name"!==n&&"className"!==n||"string"!==typeof r?Qb(r,n):r}return t}}const Zb="4.21.0";class Jb extends Vy{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=kg(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],dg(this.inputs).length!==this.inputs.length)throw new Ym(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);dg(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;tg(0===t,"input layer has >1 nodes"),tg(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof Gy))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new Xm(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Jb.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let a=0;a<c;a++){const e=u.inputTensors[a],r=u.inboundLayers[a],s=u.nodeIndices[a],i=u.tensorIndices[a];o(e,t,n,r,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const y of this.outputs)o(y,l,u);const c=i.slice().reverse();for(const y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const a=null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id];e=Math.max(e,a),r[y.outboundLayer.id]=e,s[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let r=0;r<y.inboundLayers.length;r++){const s=y.inboundLayers[r],a=y.nodeIndices[r],i=s.inboundNodes[a],o=null==t[i.id]?0:t[i.id];t[i.id]=Math.max(e+1,o),n[i.id]=i}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const d={};for(const y in r){const e=r[y];e in d||(d[e]=[]),d[e].push(s[y])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(hg);this.layers=[];for(const y of p){const e=d[y];e.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof Jb&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(hg);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Xm(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new Xm(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new By({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Ym("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let r=0;const s=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);s&&this.parseWeights(e);for(const i of this.layers)for(const[e,t]of i.weights.entries()){const a=s?`${t.name.split("/").slice(0,-1).join("/")+"/"}${e}`:t.originalName;if(null!=n[a])throw new Ym(`Duplicate weight name: ${a}`);n[a]=t,r++}const a=[];for(const i in e){let r=i;if(null==n[i]){const e=i.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])a.push([n[r],e[i]]);else if(t)throw new Ym(`Provided weight data has no target variable: ${i}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Ym(`${e.length} of ${r} weights are not set: ${e}`)}My(a)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],s=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Zb}`,t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=Qb(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return ca((()=>{e=sg(e);const n=new Hy;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Ky(this.outputs,n,t)}))}computeMask(e,t){return ca((()=>{let n;return e=sg(e),n=null==t?eg(null,e.length):sg(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Ey(e);if(t.length!==this.inputLayers.length)throw new Ym(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++){const e=this.inputLayers[i],r=t[i];n[e.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(hg);if(r.length>1)for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const r=[];for(let i=0;i<t.inboundLayers.length;i++){const e=t.inboundLayers[i],s=t.nodeIndices[i],a=t.tensorIndices[i],o=n[`${e.name}_${s}_${a}`];r.push(o)}const s=Ey(e.computeOutputShape(rg(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++){n[`${e.name}_${a}_${t}`]=s[t]}}}const s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${e.name}_${t}_${n}`;a.push(r)}for(let i=0;i<a.length;i++){const e=a[i];tg(e in n),s.push(n[e])}return rg(s)}runInternalGraph(e,t){null==t&&(t=eg(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){const r=this.inputs[o],s=e[o],a=t[o];n[r.id]=[s,a]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(hg);for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===a.length){const[t,n]=a[0];null==u.mask&&(u.mask=n),o=sg(e.call(t,u)),l=sg(e.computeMask(t,n)),r=[t],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=sg(e.call(r,u)),l=sg(e.computeMask(r,i));if(e.activityRegularizer)throw new Qm("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const o of this.outputs){tg(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),s.push(e),a.push(t)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof Jb?1:0;for(let e=0;e<r.inboundNodes.length;e++){const s=Jb.nodeKey(r,e);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Ym("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new Ym(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new Ym(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return ca((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Jb.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const a of this.layers){const e=a.getClassName(),r=a.getConfig(),s=[];for(let n=0;n<a.inboundNodes.length;n++){const e=a.inboundNodes[n],r=Jb.nodeKey(a,n);let i={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(cB){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],a=e.nodeIndices[r],o=e.tensorIndices[r];let l=t[Jb.nodeKey(s,a)];null==l&&(l=0),n.push([s.name,l,o,i])}s.push(n)}}}const i={};i.name=a.name,i.className=e,i.config=r,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let a=0;a<this.inputLayers.length;a++){const e=this.inputLayers[a],n=this.inputLayersNodeIndices[a],s=Jb.nodeKey(e,n);if(!this.containerNodes.has(s))continue;let i=t[s];null!==i&&void 0!==i||(i=0);const o=this.inputLayersTensorIndices[a];r.push([e.name,i,o])}e.inputLayers=r;const s=[];for(let a=0;a<this.outputLayers.length;a++){const e=this.outputLayers[a],n=this.outputLayersNodeIndices[a],r=Jb.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let i=t[r];null!==i&&void 0!==i||(i=0);const o=this.outputLayersTensorIndices[a];s.push([e.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={},s={};function a(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function i(e,t){const n=[];let s;for(const i of t){const o=i[0],l=i[1],u=i[2];if(s=null==i[3]?{}:i[3],!(o in r))return void a(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void a(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(rg(n),s)}function o(e){const s=e.name,i=xb(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(n),r[s]=i;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Ym(`Corrupted configuration, expected array for nodeData: ${e}`);a(i,e)}))}const l=t.name,u=t.layers;for(const f of u)o(f);for(;!pg(s);)for(const e of u){const t=r[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)i(t,n)}}const c=[],h=[],d=t.inputLayers;for(const f of d){const e=f[0],t=f[1],n=f[2];tg(e in r);const s=r[e].inboundNodes[t].outputTensors;c.push(s[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];tg(e in r);const s=r[e].inboundNodes[t].outputTensors;h.push(s[n])}return new e({inputs:c,outputs:h,name:l})}get stateful(){if(this._stateful)throw new Ym("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ca((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function ex(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function tx(e,t){return ex(e,t,"classWeight")}async function nx(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=ca((()=>{if(1===e.shape.length)return xi(e);if(2===e.shape.length){if(e.shape[1]>1){return Yo(e,1)}if(1===e.shape[1])return bl(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());ha(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),Nh(s,"float32")}return null}function rx(e,t){return Si(e,t)}function sx(e,t){let n,r;const s=t;n=s.xs,r=s.ys,M(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=ax("input",e.inputNames,n),i=ax("output",e.outputNames,r),o=a[0].shape[0];M(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),M(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let l=0;l<a.length;l++)M(a[l].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let l=0;l<i.length;l++)M(i[l].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function ax(e,t,n){if(n instanceof Ns)return[n];if(Array.isArray(n))return M(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new Ym(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}async function ix(e,t,n){const r=null!=n.batchesPerEpoch;if(M(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),M(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),M(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),M(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),M(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(ox(n.validationData))M(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Qm("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=gb(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=bb(c,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,s,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=sx(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=tx(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await nx(s[e],null,t[e]))}const u=r.concat(s).concat(i),p=o(u);ha(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,da(n)}await d.onBatchEnd(h,a),ub(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=ox(n.validationData)?sg(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):sg(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function ox(e){return"function"===typeof e.iterator}function lx(e){M(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function ux(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>jg(e,t,n-t))):jg(e,t,n-t)}function cx(e,t){return ca((()=>null==e?null:Array.isArray(e)?e.map((e=>cx(e,t))):ey(e,"int32"===t.dtype?t:bi(t,"int32"))))}function hx(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function dx(e){const t=[];e instanceof Ns&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Hg(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function px(e,t){if(null==e)return;const n=[];if(t instanceof Ns)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const s in t){const e=t[s];n.push(e.id)}const r=[];if(e instanceof Ns)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const s in e){const t=e[s];-1===n.indexOf(t.id)&&r.push(t)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function fx(e){return Array.isArray(e)}function mx(e){return!function(e){return e instanceof Ns}(e)&&!fx(e)}function gx(e,t,n){let r,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(fx(e)&&e.length>0)t=!0;else if(mx(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Ym(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));if(mx(e)){r=[];for(const n of t){if(null==e[n])throw new Ym(`No data provided for "${n}". Need data for each key in: ${t}`);r.push(e[n])}}else if(fx(e)){if(e.length!==t.length)throw new Ym(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);r=e}else{if(t.length>1)throw new Ym(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);r=[e]}if(r=dx(r),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=r[i];if(e.shape.length!==n[i].length)throw new Ym(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[i].length;++t){if(0===t&&!s)continue;const r=e.shape[t],o=n[i][t];if(null!=o&&o>=0&&r!==o)throw new Ym(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return r}function yx(e,t,n){let r,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new Ym(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);r=e}else{if(t.length>1)throw new Ym(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);r=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=r[i];if(e.shape.length!==n[i].length)throw new Ym(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let r=0;r<n[i].length;++r){if(0===r&&!s)continue;const o=e.shape[r],l=n[i][r];if(null!=l&&l!==o)throw new Ym(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class bx extends Jb{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new Ym("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Hb(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>hp.adagrad(.01),Adadelta:()=>hp.adadelta(1,.95,Ug()),Adam:()=>hp.adam(.001,.9,.999,Ug()),Adamax:()=>hp.adamax(.002,.9,.999,Ug(),0),RMSProp:()=>hp.rmsprop(.001,.9,0,Ug()),SGD:()=>hp.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Ym(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Oi))throw new Ym("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Ym(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Ab(e)))}else{const n=Ab(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Ym(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Ab(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const e=this.internalOutputShapes[a],t=this.outputNames[a];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Fg("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Fg("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,a;for(const i of t){if("string"===typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Cb?-1!==["accuracy","acc"].indexOf(i)?r=_b:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ob):this.lossFunctions[e]===Tb?-1!==["accuracy","acc"].indexOf(i)?r=Mb:-1!==["crossentropy","ce"].indexOf(i)&&(r=zb):-1!==["accuracy","acc"].indexOf(i)?r=Fb:-1!==["crossentropy","ce"].indexOf(i)&&(r=Lb),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=Bb(i);a=e,n=""+Wb(i)}let t;Fg(n,(()=>{t=a})),s(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=null==n.batchSize?32:n.batchSize;lx(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return rg(this.testLoop(t,e,r,n.verbose,n.steps))}finally{px(s[0],e),px(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new Qm("Verbose mode is not implemented yet.");M(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"===typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await i.next();if(a=ca((()=>{if(t.value){const{xs:n,ys:r}=sx(e,t.value),i=n.concat(r),u=ca((()=>s(i)));if(ha(i),0===l)for(let e=0;e<u.length;++e)a.push(Ei(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=ca((()=>wi(a[e],Si(c,t)))),l>0&&ha(n)}ha(u),o+=c,++l}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<a.length;++u){const e=a[u];a[u]=Ni(a[u],o),ha(e)}return rg(a)}(this,e,t)}checkNumSamples(e,t,n){let r,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(r=null,null!=t)throw new Ym(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Ym(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Ym("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new Hy;if(e instanceof Ns&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Ym(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const o of this.inputs){const t=e[o.name];if(null==t)throw new Ym(`No value is provided for the model's input ${o.name}`);a.add(o,t)}const i=Ky(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=eg(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Ym(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ca((()=>{const r=this.checkNumSamples(e);if(n)throw new Qm("Verbose predictLoop() is not implemented yet.");const s=hx(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t){ca((()=>{const n=s[t][0],r=s[t][1],a=ux(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Hy(i);return Ky(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)))}return rg(a.map((e=>wl(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=dx(e);yx(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return lx(e),this.predictLoop(n,e)}finally{px(n,e)}}predictOnBatch(e){yx(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new Xm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let s=0;s<this.feedOutputShapes.length;++s){const e=this.feedOutputShapes[s];this.feedLossFns[s]===Tb?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(function(e,t){const n=dg(e.map((e=>e.shape[0])));n.sort();const r=dg(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new Ym(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new Ym(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!B(n,r))throw new Ym(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=gx(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=gx(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const r=[wb,Cb,Ib];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===Ib&&1===a.shape[a.shape.length-1])throw new Ym(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new Ym(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new Ym(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r){let s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],a=arguments.length>5?arguments[5]:void 0;const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=tx(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await nx(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4?arguments[4]:void 0;return ca((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new Qm("Verbose mode is not implemented yet.");if(null!=s)throw new Qm("steps mode in testLoop() is not implemented yet");{const r=hx(a,n),s=Nh(Wg(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=jg(s,a,o-a),u=cx(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(Ei(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=wi(i[e],Si(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Ni(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;if(ng(e,r)>1){s+=`_${ng(e.slice(0,n),r)}`}t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Hy(e),o=Ky(this.outputs,i,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],o[n]);null!=s[n]&&(e=rx(e,s[n]));const a=oc(e);t.push(a),l=0===n?e:wi(l,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],s=this.metricsTensors[n][1];e=oc(t(r[s],o[s]))}da(e),a.push(e)}return l=oc(l),this.calculateLosses().forEach((e=>{l=wi(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>ca((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new Hy(a),o=Ky(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=oc(r(s[e],o[e]));n=0===e?a:wi(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=oc(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t){let n,r,s,a,i,o,l,u,c,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const d=null==h.batchSize?32:h.batchSize;lx(d);const p=!1,f=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,p,d);n=f[0],r=f[1],c=f[2];let m,g=!1;if(null!=h.validationData&&h.validationData.length>0){if(g=!0,2!==h.validationData.length)throw 3===h.validationData.length?new Qm("validationData including sample weights is not supported yet."):new Ym(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${h.validationData} is invalid.`);i=h.validationData[0],o=h.validationData[1];const e=!0,t=await this.standardizeUserData(i,o,null,null,e,d);l=t[0],u=t[1],m=l.concat(u)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];l=ux(n,e,t),s=n,n=ux(n,0,e),u=ux(r,e,t),a=r,r=ux(r,0,e),m=l.concat(u)}else null!=h.validationSteps&&(g=!0);const y=n.concat(r).concat(c);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let v,w;g?(this.makeTestFunction(),v=this.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,m=[],w=x.slice());const k=gb(h.callbacks,h.yieldEvery);return await this.fitLoop(b,y,x,d,h.epochs,h.verbose,k,v,m,h.shuffle,w,h.initialEpoch,null,null)}finally{this.isTraining=!1,px(n,e),px(r,t),px(s,e),px(a,t),px(l,i),px(u,o),null!=c&&ha(c)}}async fitLoop(e,t,n,r,s,a,i,o,l,u,c,h,d,p){null==r&&(r=32),null==s&&(s=1),null==u&&(u=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=p&&(f=!0,null==d))throw new Ym("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,d,"steps_per_epoch");let g;null!=m&&(g=Wg(0,m)),null==a&&(a=1);const{callbackList:y,history:b}=bb(i,a,s,h,m,d,r,f,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<s;++x){await y.onEpochBegin(x);const s={};if(null!=d)throw new Qm("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new Qm("batch shuffling is not implemneted yet");u&&_(g);const a=Nh(g),i=hx(m,r);for(let u=0;u<i.length;++u){const c={};if(await y.onBatchBegin(u,c),ca((()=>{const h=i[u][0],d=i[u][1],p=jg(a,h,d-h);c.batch=u,c.size=d-h;const m=cx(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],r=g[e];c[t]=r,da(r)}if(u===i.length-1&&f){const e=this.testLoop(o,l,r);for(let t=0;t<n.length;++t){const r=n[t],a=e[t];da(a),s["val_"+r]=a}}})),await y.onBatchEnd(u,c),ub(c),this.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(x,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return ix(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const o of a){const e=await o.data();i.push(e[0])}return ha(a),px(n[0],e),px(n[1],t),rg(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<r.length;++a)n&&!r[a].trainable||t.push({name:r[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ua().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ua().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=ag(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ag(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=ag(n[r])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[ag(Wb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ag(Wb(e))));{const e={};for(const t in this.metrics)e[t]=ag(Wb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=xb(Yb(e.optimizer_config));let n,r;if("string"===typeof e.loss)n=ig(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>ig(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=ig(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>ig(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=ig(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"===typeof e){const t=Ma(e);if(0===t.length)throw new Ym(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Ym(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Ym("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await ga(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Zb}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await ga(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=Ta([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Ub(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Ub(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}bx.className="Model",Di(bx);class xx extends bx{}xx.className="Functional",Di(xx);class vx extends bx{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:kg("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Ym(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof vx||e instanceof bx;let n;if(t){if(n=e,1!==n.outputs.length)throw new Ym("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Ym("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Ym("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Ym("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Gy({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Ym(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Ym("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Uy(this.outputs[0])}this.inboundNodes=[],new By({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:eg(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Ay(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new bx({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Xm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Xm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Xm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Xm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Ym("Legacy serialization format not supported yet.");n=t}else M(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,s=t;const a=new e(s);if(!(a instanceof vx))throw new Qm(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const i of n){const e=xb(i,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),a.add(e)}return a}set stopTraining(e){if(null==this.model)throw new Ym("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Ym("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}vx.className="Sequential",Di(vx);class wx extends _i{getConfig(){return{}}}class kx extends wx{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new Qm(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return uu(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}kx.className="elu",Di(kx);class Nx extends wx{apply(e){return th(e)}}Nx.className="selu",Di(Nx);class Sx extends wx{apply(e){return jc(e)}}Sx.className="relu",Di(Sx);class Ix extends wx{apply(e){return ca((()=>hc(6,jc(e))))}}Ix.className="relu6",Di(Ix);class Tx extends wx{apply(e){return e}}Tx.className="linear",Di(Tx);class Cx extends wx{apply(e){return Nl(e)}}Cx.className="sigmoid",Di(Cx);class $x extends wx{apply(e){return function(e){return ca((()=>{const t=wi(.5,Si(.2,e));return Ll(t,0,1)}))}(e)}}$x.className="hardSigmoid",Di($x);class Ex extends wx{apply(e){return qu(e)}}Ex.className="softplus",Di(Ex);class Rx extends wx{apply(e){return function(e){return ca((()=>Ni(e,wi(Vi(e),1))))}(e)}}Rx.className="softsign",Di(Rx);class Ax extends wx{apply(e){return Il(e)}}Ax.className="tanh",Di(Ax);class _x extends wx{apply(e){return hh(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}_x.className="softmax",Di(_x);class Fx extends wx{apply(e){return Xu(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Fx.className="logSoftmax",Di(Fx);class Dx extends wx{apply(e){return ca((()=>ca((()=>{const t=Math.sqrt(2),n=Si(.5,wi(1,hu(Ni(e,t))));return Si(e,n)}))))}}Dx.className="gelu",Di(Dx);class Ox extends wx{apply(e){return ca((()=>Si(.5,Si(e,wi(1,Il(Si(Ii(Ni(2,Math.PI)),wi(e,Si(.044715,Pi(e,3))))))))))}}Ox.className="gelu_new",Di(Ox);class Mx extends wx{apply(e){return ca((()=>Si(e,Il(qu(e)))))}}Mx.className="mish",Di(Mx);class Lx extends wx{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return ca((()=>Si(Nl(Si(e,t)),e)))}}function zx(e){return e.getClassName()}function Px(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return cg(e,Fi.getMap().classNameMap,t,"activation")}function Bx(e){if(null==e){const e={className:"linear",config:{}};return Px(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},Px(t)}return e instanceof wx?e:Px(e)}function Wx(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Lx.className="swish",Di(Lx);class Vx extends _i{}class Ux extends Vx{constructor(e){super(),Wx(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return ca((()=>{let t=lc([1]);return this.hasL1&&(t=wi(t,ku(Si(this.l1,Vi(e))))),this.hasL2&&(t=wi(t,ku(Si(this.l2,ty(e))))),bl(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Ux.className="L1L2",Di(Ux);const Gx={l1l2:"L1L2"};function Hx(e){return lg(e)}function jx(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return cg(e,Fi.getMap().classNameMap,t,"regularizer")}function qx(e){if(null==e)return null;if("string"===typeof e){return jx({className:e in Gx?Gx[e]:e,config:{}})}return e instanceof Vx?e:jx(e)}class Kx extends Vy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Ry(e);let n=jc(e);return null!=this.maxValue&&(n=Ll(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Kx.className="ReLU",Di(Kx);class Xx extends Vy{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ry(e);return Pu(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Xx.className="LeakyReLU",Di(Xx);class Yx extends Vy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Cy(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=qx(e.alphaRegularizer),this.alphaConstraint=ob(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new Ym(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Ay(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new Ly({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ry(e),$c(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ty(this.alphaInitializer),alphaRegularizer:Hx(this.alphaRegularizer),alphaConstraint:ab(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Yx.className="PReLU",Di(Yx);class Qx extends Vy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Qm(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ry(e);return uu(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Qx.className="ELU",Di(Qx);class Zx extends Vy{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Ry(e);return Si(n,bi(Fu(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Zx.className="ThresholdedReLU",Di(Zx);class Jx extends Vy{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new _x).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return ca((()=>{let n=Ry(e);const r=t.mask;if(null!=r){const e=Si(Bi(uc(n.shape),bi(r,n.dtype)),Ei(-1e9));n=wi(n,e)}return this.axis instanceof Array?this.axis.length>1?Tu(Bi(n,Yu(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ev(e,t,n){if("number"===typeof e)return eg(e,t);if(e.length!==t)throw new Ym(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new Ym(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function tv(e,t,n,r){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((s+r-1)/r)}function nv(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Bg([n-t,0]);else{if("same"!==r)throw new Ym(`Unsupport padding mode: ${r}.`);e*=t}return e}function rv(e,t){return ca((()=>(Eg(t),"channelsFirst"===t?Vh(e,[0,2,3,1]):e)))}function sv(e,t){return ca((()=>(Eg(t),"channelsFirst"===t?Vh(e,[0,2,3,4,1]):e)))}function av(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",a=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return ca((()=>{if(null==a&&(a="channelsLast"),Eg(a),3!==e.shape.length)throw new Ym(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Ym(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Ym(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===a&&(e=Vh(e,[0,2,1])),"causal"===s)throw new Qm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Ul(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=ry(o,n)),o}))}function iv(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",a=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return ca((()=>{if(null==a&&(a="channelsLast"),Eg(a),3!==e.rank&&4!==e.rank)throw new Ym(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Ym(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=rv(e,a);if("causal"===s)throw new Qm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=nd({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=Vh(l,[0,3,1,2])),l}))}function ov(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",a=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return ca((()=>{if(null==a&&(a="channelsLast"),Eg(a),4!==e.rank&&5!==e.rank)throw new Ym(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Ym(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=sv(e,a);if("causal"===s)throw new Qm("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=jl(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=ry(o,n)),"channelsFirst"===a&&(o=Vh(o,[0,4,1,2,3])),o}))}Jx.className="Softmax",Di(Jx);class lv extends Vy{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",lv.verifyArgs(t),this.rank=e,gg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Qm(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ev(t.kernelSize,e,"kernelSize"),this.strides=ev(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Rg(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Eg(this.dataFormat),this.activation=Bx(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Cy(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=ob(t.biasConstraint),this.biasRegularizer=qx(t.biasRegularizer),this.activityRegularizer=qx(t.activityRegularizer),this.dilationRate=ev(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Ym(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Ym(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Ym(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(tg("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!mg(e.kernelSize,"number",1,3))throw new Ym(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:zx(this.activation),useBias:this.useBias,biasInitializer:Ty(this.biasInitializer),biasRegularizer:Hx(this.biasRegularizer),activityRegularizer:Hx(this.activityRegularizer),biasConstraint:ab(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class uv extends lv{constructor(e,t){super(e,t),this.kernel=null,uv.verifyArgs(t),this.filters=t.filters,gg(this.filters,"filters"),this.kernelInitializer=Cy(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=ob(t.kernelConstraint),this.kernelRegularizer=qx(t.kernelRegularizer)}build(e){e=Ay(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Ym(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return ca((()=>{let t;e=Ry(e);const n=null==this.bias?null:this.bias.read(),r=bg(this.activation.getClassName());if(null!=r&&2===this.rank)t=iv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=av(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=iv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Qm("convolutions greater than 3D are not implemented yet.");t=ov(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Ay(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){const e=tv(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Ty(this.kernelInitializer),kernelRegularizer:Hx(this.kernelRegularizer),kernelConstraint:ab(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new Ym(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class cv extends uv{constructor(e){super(2,e),cv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!mg(e.kernelSize,"number",1,2))throw new Ym(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}cv.className="Conv2D",Di(cv);class hv extends uv{constructor(e){super(3,e),hv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Ym(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}hv.className="Conv3D",Di(hv);class dv extends cv{constructor(e){if(super(e),this.inputSpec=[new Ly({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Ym(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Ay(e)).length)throw new Ym("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Ym("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ly({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return ca((()=>{let t=Ry(e);if(4!==t.shape.length)throw new Ym(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,nv(i,c,l,this.padding),nv(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Vh(t,[0,2,3,1]));let p=Hl(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Vh(p,[0,3,1,2])),null!=this.bias&&(p=ry(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Ay(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=nv(t[r],o,a,this.padding),t[s]=nv(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}dv.className="Conv2DTranspose",Di(dv);class pv extends hv{constructor(e){if(super(e),this.inputSpec=[new Ly({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Ym(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Ay(e)).length)throw new Ym("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Ym("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ly({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return ca((()=>{let t=Ry(e);if(5!==t.shape.length)throw new Ym(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],l=n[s],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,nv(o,p,c,this.padding),nv(l,f,h,this.padding),nv(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Vh(t,[0,2,3,4,1]));let y=Kl(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Vh(y,[0,4,1,2,3])),null!==this.bias&&(y=ry(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=Ay(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=nv(t[r],u,i,this.padding),t[s]=nv(t[s],c,o,this.padding),t[a]=nv(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}pv.className="Conv3DTranspose",Di(pv);class fv extends uv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Ym("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Ym("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Ym(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Cy(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=qx(t.depthwiseRegularizer),this.depthwiseConstraint=ob(t.depthwiseConstraint),this.pointwiseInitializer=Cy(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=qx(t.pointwiseRegularizer),this.pointwiseConstraint=ob(t.pointwiseConstraint)}build(e){if((e=Ay(e)).length<this.rank+2)throw new Ym(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Ym(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Ly({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return ca((()=>{let t;if(e=Ry(e),1===this.rank)throw new Qm("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Vh(e,[0,2,3,1])),t=nh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=ry(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Vh(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ty(this.depthwiseInitializer),e.pointwiseInitializer=Ty(this.pointwiseInitializer),e.depthwiseRegularizer=Hx(this.depthwiseRegularizer),e.pointwiseRegularizer=Hx(this.pointwiseRegularizer),e.depthwiseConstraint=ab(this.depthwiseConstraint),e.pointwiseConstraint=ab(this.pointwiseConstraint),e}}fv.className="SeparableConv";class mv extends fv{constructor(e){super(2,e)}}mv.className="SeparableConv2D",Di(mv);class gv extends uv{constructor(e){super(1,e),gv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!mg(e.kernelSize,"number",1,1))throw new Ym(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}gv.className="Conv1D",Di(gv);class yv extends Vy{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ca((()=>{if(e=Ry(e),"channelsLast"===this.dataFormat){const t=Kg(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Kg(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Kg(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Kg(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}yv.className="Cropping2D",Di(yv);class bv extends Vy{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Eg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,fg(Sg,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return ca((()=>{let t=Ry(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Vh(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?ip.resizeNearestNeighbor(t,[e,r]):ip.resizeBilinear(t,[e,r]);return Vh(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?ip.resizeNearestNeighbor(t,[e,r]):ip.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}bv.className="UpSampling2D",Di(bv);class xv extends lv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Cy(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=ob(e.depthwiseConstraint),this.depthwiseRegularizer=qx(e.depthwiseRegularizer)}build(e){if((e=Ay(e)).length<4)throw new Ym(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Ym(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ca((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",s=arguments.length>4?arguments[4]:void 0,a=arguments.length>5?arguments[5]:void 0;return ca((()=>{null==s&&(s="channelsLast"),Eg(s);let i=rv(e,s);if(4!==e.rank)throw new Ym(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Ym(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=tu(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=Vh(i,[0,3,1,2])),i}))}(e=Ry(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=ry(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Ay(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=tv(t,this.kernelSize[0],this.padding,this.strides[0]),a=tv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ty(this.depthwiseInitializer),e.depthwiseRegularizer=Hx(this.depthwiseRegularizer),e.depthwiseConstraint=ab(this.depthwiseRegularizer),e}}function vv(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Ym("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function wv(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4?arguments[4]:void 0,a=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return ca((()=>{const l=t.shape.length;if(l<3)throw new Ym(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Wg(2,l));if(t=Vh(t,u),null!=a)throw new Qm("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&(s=bi(bi(s,"bool"),"float32"),s.rank===l-1&&(s=Cu(s,-1)),s=Vh(s,u)),r&&(t=Kc(t,0),null!=s&&(s=Kc(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=Mh(t);let m,g;null!=s&&(m=Mh(s));for(let t=0;t<p;++t){const n=f[t],r=ca((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=ca((()=>{const e=m[t],n=Bi(xc(e),e);return{output:wi(Si(r[0],e),Si(d[0],n)),newStates:d.map(((t,s)=>wi(Si(r[1][s],e),Si(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}if(o){g=xh(c,1)}return[h,g,d]}))}xv.className="DepthwiseConv2D",Di(xv);class kv extends Vy{constructor(e){let t;if(super(e),null==e.cell)throw new Ym("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Rv({cells:e.cell}):e.cell,null==t.stateSize)throw new Ym("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ly({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Wg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){$y(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return ca((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Qm("Constants support is not implemented in RNN yet.");$y(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ly({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!B(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new Ym(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new Ly({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];ca((()=>{if(!this.stateful)throw new Km("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Ym("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>lc([n,e]))):this.states_=[lc([n,this.cell.stateSize])];else if(null==e)ha(this.states_),null!=this.keptStates&&(ha(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>lc([n,e]))):this.states_[0]=lc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Ym(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):ha(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!B(r.shape,a))throw new Ym(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>da(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=vv(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Ly({shape:e.shape}));i=i.concat(this.stateSpec)}null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length);if(a[0]instanceof zy){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return ca((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=Ry(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new Ym(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=wv(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return ca((()=>{let t=lc(e.shape);return t=ku(t,[1,2]),t=Hg(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Qg(t,[1,e]):t)):this.cell.stateSize>1?[Qg(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===kv.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=xb(t.cell,n);return new e(Object.assign(t,{cell:r}))}}kv.className="RNN",Di(kv);class Nv extends Vy{}class Sv extends Nv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gg(this.units,"units"),this.activation=Bx(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qx(e.kernelRegularizer),this.recurrentRegularizer=qx(e.recurrentRegularizer),this.biasRegularizer=qx(e.biasRegularizer),this.kernelConstraint=ob(e.kernelConstraint),this.recurrentConstraint=ob(e.recurrentConstraint),this.biasConstraint=ob(e.biasConstraint),this.dropout=Pg([1,Bg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Pg([1,Bg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ay(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ca((()=>{if(2!==e.length)throw new Ym(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Av({ones:()=>xc(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Av({ones:()=>xc(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=Jg(null!=a?Si(e,a):e,this.kernel.read()),null!=this.bias&&(s=ry(s,this.bias.read())),null!=i&&(n=Si(n,i));let o=wi(s,Jg(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:zx(this.activation),useBias:this.useBias,kernelInitializer:Ty(this.kernelInitializer),recurrentInitializer:Ty(this.recurrentInitializer),biasInitializer:Ty(this.biasInitializer),kernelRegularizer:Hx(this.kernelRegularizer),recurrentRegularizer:Hx(this.recurrentRegularizer),biasRegularizer:Hx(this.biasRegularizer),activityRegularizer:Hx(this.activityRegularizer),kernelConstraint:ab(this.kernelConstraint),recurrentConstraint:ab(this.recurrentConstraint),biasConstraint:ab(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Sv.className="SimpleRNNCell",Di(Sv);class Iv extends kv{constructor(e){e.cell=new Sv(e),super(e)}call(e,t){return ca((()=>{null!=this.cell.dropoutMask&&(ha(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ha(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}Iv.className="SimpleRNN",Di(Iv);class Tv extends Nv{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Ym("GRUCell does not support reset_after parameter set to true.");this.units=e.units,gg(this.units,"units"),this.activation=Bx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Bx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qx(e.kernelRegularizer),this.recurrentRegularizer=qx(e.recurrentRegularizer),this.biasRegularizer=qx(e.biasRegularizer),this.kernelConstraint=ob(e.kernelConstraint),this.recurrentConstraint=ob(e.recurrentConstraint),this.biasConstraint=ob(e.biasConstraint),this.dropout=Pg([1,Bg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Pg([1,Bg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Ay(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ca((()=>{if(2!==e.length)throw new Ym(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Av({ones:()=>xc(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Av({ones:()=>xc(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=Si(e,s[0]));let u=Jg(e,this.kernel.read());this.useBias&&(u=ry(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Si(r,a[0]));const c=this.recurrentKernel.read(),[h,d]=mh(c,[2*this.units,this.units],c.rank-1),p=Jg(r,h),[f,m,g]=mh(u,3,u.rank-1),[y,b]=mh(p,2,p.rank-1);i=this.recurrentActivation.apply(wi(f,y)),o=this.recurrentActivation.apply(wi(m,b));const x=Jg(Si(o,r),d);l=this.activation.apply(wi(g,x));const v=wi(Si(i,r),Si(wi(1,ju(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:zx(this.activation),recurrentActivation:zx(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ty(this.kernelInitializer),recurrentInitializer:Ty(this.recurrentInitializer),biasInitializer:Ty(this.biasInitializer),kernelRegularizer:Hx(this.kernelRegularizer),recurrentRegularizer:Hx(this.recurrentRegularizer),biasRegularizer:Hx(this.biasRegularizer),activityRegularizer:Hx(this.activityRegularizer),kernelConstraint:ab(this.kernelConstraint),recurrentConstraint:ab(this.recurrentConstraint),biasConstraint:ab(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Tv.className="GRUCell",Di(Tv);class Cv extends kv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Tv(e),super(e)}call(e,t){return ca((()=>{null!=this.cell.dropoutMask&&(ha(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ha(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Cv.className="GRU",Di(Cv);class $v extends Nv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gg(this.units,"units"),this.activation=Bx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Bx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=qx(e.kernelRegularizer),this.recurrentRegularizer=qx(e.recurrentRegularizer),this.biasRegularizer=qx(e.biasRegularizer),this.kernelConstraint=ob(e.kernelConstraint),this.recurrentConstraint=ob(e.recurrentConstraint),this.biasConstraint=ob(e.biasConstraint),this.dropout=Pg([1,Bg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Pg([1,Bg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Ay(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends ly{apply(t,r){const s=e.apply([n]),a=(new cy).apply([n]),i=e.apply([2*n]);return Yg(Yg(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ca((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Ym(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Av({ones:()=>xc(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Av({ones:()=>xc(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Si(e,a[0]));let h=Jg(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Si(r,i[0])),h=wi(h,Jg(r,this.recurrentKernel.read())),this.useBias&&(h=ry(h,this.bias.read()));const[d,p,f,m]=mh(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=wi(Si(l,s),Si(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Si(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:zx(this.activation),recurrentActivation:zx(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ty(this.kernelInitializer),recurrentInitializer:Ty(this.recurrentInitializer),biasInitializer:Ty(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Hx(this.kernelRegularizer),recurrentRegularizer:Hx(this.recurrentRegularizer),biasRegularizer:Hx(this.biasRegularizer),activityRegularizer:Hx(this.activityRegularizer),kernelConstraint:ab(this.kernelConstraint),recurrentConstraint:ab(this.recurrentConstraint),biasConstraint:ab(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}$v.className="LSTMCell",Di($v);class Ev extends kv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new $v(e),super(e)}call(e,t){return ca((()=>{null!=this.cell.dropoutMask&&(ha(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ha(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Ev.className="LSTM",Di(Ev);class Rv extends Nv{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ca((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;$y(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Fg(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=[];for(const s of t.cells)r.push(xb(s,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Oy(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}My(t)}}function Av(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):sy(t(),n),o=()=>ay(i,t,r);if(!s||s<=1)return da(o().clone());return Array(s).fill(void 0).map(o).map((e=>da(e.clone())))}Rv.className="StackedRNNCells",Di(Rv);var _v=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};class Fv extends kv{constructor(e){if(e.unroll)throw new Qm("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Qm("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ly({ndim:5})]}call(e,t){return ca((()=>{if(null!=this.cell.dropoutMask&&(ha(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ha(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Ym("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ca((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=lc([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];ca((()=>{if(!this.stateful)throw new Km("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Ym("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>lc(s))):this.states_=[lc(s)];else if(null==e)ha(this.states_),null!=this.keptStates&&(ha(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>lc(s))):this.states_[0]=lc(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Ym(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ha(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!B(n.shape,r))throw new Ym(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>da(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=tv(l,r[0],s,a[0],i[0]),h=tv(u,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Fv.className="ConvRNN2D";class Dv extends $v{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,gg(this.filters,"filters"),this.kernelSize=ev(n,2,"kernelSize"),this.kernelSize.forEach((e=>gg(e,"kernelSize"))),this.strides=ev(r||1,2,"strides"),this.strides.forEach((e=>gg(e,"strides"))),this.padding=s||"valid",Rg(this.padding),this.dataFormat=a||"channelsLast",Eg(this.dataFormat),this.dilationRate=ev(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>gg(e,"dilationRate")))}build(e){var t;e=Ay(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Ym(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends ly{apply(e,t){return Xg([n.apply([r]),uc([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ca((()=>{if(3!==e.length)throw new Ym(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Av({ones:()=>xc(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Si(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Av({ones:()=>xc(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[y,b,x,v]=mh(this.kernel.read(),4,3),[w,k,N,S]=this.useBias?mh(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,N,this.padding),h=this.inputConv(h,v,S,this.padding);const[I,T,C,$]=mh(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,I),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,$);const E=this.recurrentActivation.apply(wi(l,p)),R=this.recurrentActivation.apply(wi(u,f)),A=wi(Si(R,a),Si(E,this.activation.apply(wi(c,m)))),_=Si(this.recurrentActivation.apply(wi(h,g)),this.activation.apply(A));return[_,_,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=_v(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=Vl(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ry(s,n,this.dataFormat):s}recurrentConv(e,t){return Vl(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Dv.className="ConvLSTM2DCell",Di(Dv);class Ov extends Fv{constructor(e){const t=new Dv(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Ov.className="ConvLSTM2D",Di(Ov);class Mv extends Vy{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return ca((()=>{this.invokeCallHook(e,t);const n=Ry(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return ay((()=>sy(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Mv.className="Dropout",Di(Mv);class Lv extends Mv{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Lv.className="SpatialDropout1D",Di(Lv);class zv extends Vy{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,gg(this.units,"units"),this.activation=Bx(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Cy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Cy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=ob(e.kernelConstraint),this.biasConstraint=ob(e.biasConstraint),this.kernelRegularizer=qx(e.kernelRegularizer),this.biasRegularizer=qx(e.biasRegularizer),this.activityRegularizer=qx(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Ay(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Ay(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return ca((()=>{this.invokeCallHook(e,t);const n=Ry(e),r=bg(this.activation.getClassName());let s;return null!=r?s=Jg(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Jg(n,this.kernel.read()),null!=this.bias&&(s=ry(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:zx(this.activation),useBias:this.useBias,kernelInitializer:Ty(this.kernelInitializer),biasInitializer:Ty(this.biasInitializer),kernelRegularizer:Hx(this.kernelRegularizer),biasRegularizer:Hx(this.biasRegularizer),activityRegularizer:Hx(this.activityRegularizer),kernelConstraint:ab(this.kernelConstraint),biasConstraint:ab(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}zv.className="Dense",Di(zv);class Pv extends Vy{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ay(e);for(const t of e.slice(1))if(null==t)throw new Ym(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],zg(e,1)]}call(e,t){return ca((()=>{this.invokeCallHook(e,t);let n=Ry(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Vh(n,e)}return function(e){if(e.rank<=1)throw new Ym(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],zg(e.shape,1)];return bl(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Pv.className="Flatten",Di(Pv);class Bv extends Vy{constructor(e){super(e),this.supportsMasking=!0,this.activation=Bx(e.activation)}call(e,t){return ca((()=>{this.invokeCallHook(e,t);const n=Ry(e);return this.activation.apply(n)}))}getConfig(){const e={activation:zx(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Bv.className="Activation",Di(Bv);class Wv extends Vy{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ca((()=>{return e=Ry(e),t=e,n=this.n,ca((()=>{if(2!==t.shape.length)throw new Ym(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Qg(Hg(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Wv.className="RepeatVector",Di(Wv);class Vv extends Vy{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==a)throw new Ym("Can only specifiy one unknown dimension.");a=o}else s*=e}const i=zg(e);if(null!==a){if(0===s||i%s!==0)throw new Ym(n);r[a]=i/s}else if(i!==s)throw new Ym(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ca((()=>{this.invokeCallHook(e,t);const n=Ry(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return bl(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Vv.className="Reshape",Di(Vv);class Uv extends Vy{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Wg(1,e.dims.length+1);if(!B(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ly({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Ay(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Vh(Ry(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Uv.className="Permute",Di(Uv);class Gv extends Vy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Ry(e);return Xo(yc(n,this.maskValue),-1)}call(e,t){return ca((()=>{this.invokeCallHook(e,t);const n=Ry(e),r=Xo(yc(n,this.maskValue),-1,!0);return Si(n,bi(r,n.dtype))}))}}Gv.className="Masking",Di(Gv);class Hv extends Vy{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(sg(e.inputLength))}this.inputDim=e.inputDim,gg(this.inputDim,"inputDim"),this.outputDim=e.outputDim,gg(this.outputDim,"outputDim"),this.embeddingsInitializer=Cy(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=qx(e.embeddingsRegularizer),this.activityRegularizer=qx(e.activityRegularizer),this.embeddingsConstraint=ob(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ca((()=>this.maskZero?(e=Ry(e),yc(e,Ci(e))):null))}computeOutputShape(e){if(e=Ay(e),null==this.inputLength)return[...e,this.outputDim];const t=sg(this.inputLength);if(t.length!==e.length-1)throw new Ym(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new Ym(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return ca((()=>{this.invokeCallHook(e,t);let n=Ry(e);"int32"!==n.dtype&&(n=Gg(n,"int32"));const r=ey(this.embeddings.read(),bl(n,[n.size]));return bl(r,Ay(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ty(this.embeddingsInitializer),embeddingsRegularizer:Hx(this.embeddingsRegularizer),activityRegularizer:Hx(this.activityRegularizer),embeddingsConstraint:ab(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Hv.className="Embedding",Di(Hv);class jv extends Vy{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Qm}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new Ym("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ay(e)]),e.length<2)throw new Ym(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const s of e)null!=s&&null!==s[0]&&t.push(s[0]);if(t=dg(t),t.length>1)throw new Ym(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const t=null==e[s]?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===dg(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ca((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Bg(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Hg(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,r=e[0],s=e.slice(1).concat([r]);let i=bl(a,[r].concat(zg(e.slice(1))));i=Vh(i,[1,0]),i=bl(i,s),t.push(i),n=!0}else if(e>1){const r=Wg(1,e).concat([0]);t.push(Vh(a,r)),n=!0}else t.push(a)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=bl(Vh(bl(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(Wg(0,s-1));r=Vh(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=dg(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return ca((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Ym("`mask` should be an Array");if(!Array.isArray(e))throw new Ym("`inputs` should be an Array");if(t.length!==e.length)throw new Ym(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;t=t.map((e=>null==e?e:Cu(e,0)));let n=t[0];for(let e=1;e<t.length-1;++e)n=Qu(n,t[e]);return n}))}}class qv extends jv{constructor(e){super(e)}mergeFunction(e){return ca((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=wi(t,e[n]);return t}))}}qv.className="Add",Di(qv);class Kv extends jv{constructor(e){super(e)}mergeFunction(e){return ca((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Si(t,e[n]);return t}))}}Kv.className="Multiply",Di(Kv);class Xv extends jv{constructor(e){super(e)}mergeFunction(e){return ca((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=wi(t,e[n]);return Si(1/e.length,t)}))}}Xv.className="Average",Di(Xv);class Yv extends jv{constructor(e){super(e)}mergeFunction(e){return ca((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ji(t,e[n]);return t}))}}Yv.className="Maximum",Di(Yv);class Qv extends jv{constructor(e){super(e)}mergeFunction(e){return ca((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=hc(t,e[n]);return t}))}}Qv.className="Minimum",Di(Qv);class Zv extends jv{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Ym("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let s=!1;for(const e of n)if(B(e,t)){s=!0;break}s||n.push(t)}if(n.length>1)throw new Ym("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ca((()=>Xg(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Ym("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of t.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Ym("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Ym("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Ym(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return ca((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let a=0;a<e.length;++a)null==t[a]?r.push(bi(xc(e[a]),"bool")):t[a].rank<e[a].rank?r.push(Cu(t[a],-1)):r.push(t[a]);const s=wl(r,this.axis);return Ko(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Jv(e,t){for(;e<0;)e+=t;return e}Zv.className="Concatenate",Di(Zv);class ew extends jv{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){M(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Qm("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Ym(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Ym(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Jv(t,e[n].shape.length))):[Jv(this.axes,n.shape.length),Jv(this.axes,r.shape.length)],this.normalize&&(n=vb(n,t[0]),r=vb(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Qm("batchDot is not implemented for tensors of 4D or higher rank yet");if(M(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),M(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Qm("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return ca((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=bl(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=bl(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?ku(Si(e,t),a[0]):ku(Si(Vh(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=kl(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=bh(i,t)}return 1===i.shape.length&&(i=Cu(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Jv(this.axes,e.length),Jv(this.axes,t.length)],n}computeOutputShape(e){M(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Qm("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}ew.className="Dot",Di(ew);class tw extends Vy{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ca((()=>{this.invokeCallHook(e,t);const n=Ry(e);return ay((()=>wi(Zg(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}tw.className="GaussianNoise",Di(tw);class nw extends Vy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ca((()=>{this.invokeCallHook(e,t);const n=Ry(e);if(this.rate>0&&this.rate<1){return ay((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Si(n,Zg(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}nw.className="GaussianDropout",Di(nw);class rw extends Vy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ry(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ca((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=Ry(e),r=-1.7580993408473766;let s=Du(Wc(n),this.rate);s=Gg(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=wi(Si(t,s),Si(wi(s,-1),r));return wi(Si(o,a),i)};return ay(r,(()=>Ry(e)),t.training||!1)}return e}))}}function sw(e,t,n,r,s){let a,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)a=El(e,t,n,r,s,i);else if(3===e.rank)a=Rl(e,t,n,r,s,i);else{if(4!==e.rank)throw new Qm(`batchNormalization is not implemented for array of rank ${e.rank} yet`);a=Al(e,t,n,r,s,i)}return a}function aw(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return B(r.slice().sort(),Wg(0,e.rank-1))?function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return ca((()=>{const a=fc(e,r),i=a.mean,o=a.variance;return[sw(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return ca((()=>{const a=fc(e,r),i=a.mean,o=a.variance,l=[];for(const t of Wg(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=bl(i,l),c=bl(o,l),h=null==t?null:bl(t,l),d=null==n?null:bl(n,l);return[sw(e,u,c,d,h,s),i,o]}))}(e,t,n,r,s)}rw.className="AlphaDropout",Di(rw);class iw extends Vy{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Cy(e.betaInitializer||"zeros"),this.gammaInitializer=Cy(e.gammaInitializer||"ones"),this.movingMeanInitializer=Cy(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Cy(e.movingVarianceInitializer||"ones"),this.betaConstraint=ob(e.betaConstraint),this.gammaConstraint=ob(e.gammaConstraint),this.betaRegularizer=qx(e.betaRegularizer),this.gammaRegularizer=qx(e.gammaRegularizer)}build(e){e=Ay(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Ym(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Ly({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ca((()=>{const n=null!=t.training&&t.training,r=Ry(e),s=r.shape,a=s.length,i=Wg(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=eg(1,a);l[o]=s[o];const u=i.slice();u.sort();const c=!B(u,Wg(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=bl(this.movingMean.read(),l),t=bl(this.movingVariance.read(),l),n=this.center?bl(this.beta.read(),l):null,s=this.scale?bl(this.gamma.read(),l):null;return sw(r,e,t,n,s,this.epsilon)}return sw(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=aw(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{ca((()=>{const r=1-n,s=e.read(),a=Si(Bi(s,t),r);e.write(Bi(s,a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ty(this.betaInitializer),gammaInitializer:Ty(this.gammaInitializer),movingMeanInitializer:Ty(this.movingMeanInitializer),movingVarianceInitializer:Ty(this.movingVarianceInitializer),betaRegularizer:Hx(this.betaRegularizer),gammaRegularizer:Hx(this.gammaRegularizer),betaConstraint:ab(this.betaConstraint),gammaConstraint:ab(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}iw.className="BatchNormalization",Di(iw);class ow extends Vy{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Cy(e.betaInitializer||"zeros"),this.gammaInitializer=Cy(e.gammaInitializer||"ones"),this.betaRegularizer=qx(e.betaRegularizer),this.gammaRegularizer=qx(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Ay(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(const s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==dg(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=Ry(e),r=n.shape,s=r.length;return ca((()=>{let{mean:e,variance:t}=fc(n,this.axis,!0);const a=eg(1,s);for(const n of this.axis)a[n]=r[n];const i=e=>null!=e&&e.shape.length!==s?bl(e,a):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(u.push(r[n]),c.push(1)):(u.push(1),c.push(r[n]));return e=Eu(e,u),t=Eu(t,u),null!=o&&(o=Eu(o,c)),null!=l&&(l=Eu(l,c)),sw(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ty(this.betaInitializer),gammaInitializer:Ty(this.gammaInitializer),betaRegularizer:Hx(this.betaRegularizer),gammaRegularizer:Hx(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}ow.className="LayerNormalization",Di(ow);class lw extends Vy{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Ym(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Ym(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Ym(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ly({ndim:4})]}computeOutputShape(e){let t,n;return e=Ay(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return ca((()=>{return t=Ry(e),n=this.padding,r=this.dataFormat,ca((()=>{if(4!==t.rank)throw new Ym(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Ym("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Ym(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],wc(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function uw(e,t,n,r,s,a){return ca((()=>{let i;Eg(s),Ag(a),Rg(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=rv(e,s);const o="same"===r?"same":"valid";return i="max"===a?sc(e,t,n,o):xl(e,t,n,o),"channelsFirst"===s&&(i=Vh(i,[0,3,1,2])),i}))}function cw(e,t,n,r,s,a){return ca((()=>{let i;Eg(s),Ag(a),Rg(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=sv(e,s);const o="same"===r?"same":"valid";return i="max"===a?ac(e,t,n,o):vl(e,t,n,o),"channelsFirst"===s&&(i=Vh(i,[0,4,1,2,3])),i}))}lw.className="ZeroPadding2D",Di(lw);class hw extends Vy{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new Ym(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(gg(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new Ym(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}gg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Rg(this.padding),this.inputSpec=[new Ly({ndim:3})]}computeOutputShape(e){const t=tv((e=Ay(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ca((()=>{this.invokeCallHook(e,t),e=Hg(Ry(e),2);const n=this.poolingFunction(Ry(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return bh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class dw extends hw{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Eg(s),Rg(r),uw(e,t,n,r,s,"max")}}dw.className="MaxPooling1D",Di(dw);class pw extends hw{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Eg(s),Rg(r),uw(e,t,n,r,s,"avg")}}pw.className="AveragePooling1D",Di(pw);class fw extends Vy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Ym(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];gg(this.poolSize,"poolSize"),gg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Eg(this.dataFormat),Rg(this.padding),this.inputSpec=[new Ly({ndim:4})]}computeOutputShape(e){e=Ay(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=tv(t,this.poolSize[0],this.padding,this.strides[0]),n=tv(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return ca((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ry(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class mw extends fw{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Eg(s),Rg(r),uw(e,t,n,r,s,"max")}}mw.className="MaxPooling2D",Di(mw);class gw extends fw{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Eg(s),Rg(r),uw(e,t,n,r,s,"avg")}}gw.className="AveragePooling2D",Di(gw);class yw extends Vy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Ym(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];gg(this.poolSize,"poolSize"),gg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Eg(this.dataFormat),Rg(this.padding),this.inputSpec=[new Ly({ndim:5})]}computeOutputShape(e){e=Ay(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=tv(t,this.poolSize[0],this.padding,this.strides[0]),n=tv(n,this.poolSize[1],this.padding,this.strides[1]),r=tv(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return ca((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ry(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class bw extends yw{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Eg(s),Rg(r),cw(e,t,n,r,s,"max")}}bw.className="MaxPooling3D",Di(bw);class xw extends yw{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Eg(s),Rg(r),cw(e,t,n,r,s,"avg")}}xw.className="AveragePooling3D",Di(xw);class vw extends Vy{constructor(e){super(e),this.inputSpec=[new Ly({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Qm}}class ww extends vw{constructor(e){super(e||{})}call(e,t){return ca((()=>{const t=Ry(e);return oc(t,1)}))}}ww.className="GlobalAveragePooling1D",Di(ww);class kw extends vw{constructor(e){super(e||{})}call(e,t){return ca((()=>{const t=Ry(e);return vu(t,1)}))}}kw.className="GlobalMaxPooling1D",Di(kw);class Nw extends Vy{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Eg(this.dataFormat),this.inputSpec=[new Ly({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Qm}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Sw extends Nw{call(e,t){return ca((()=>{const t=Ry(e);return"channelsLast"===this.dataFormat?oc(t,[1,2]):oc(t,[2,3])}))}}Sw.className="GlobalAveragePooling2D",Di(Sw);class Iw extends Nw{call(e,t){return ca((()=>{const t=Ry(e);return"channelsLast"===this.dataFormat?vu(t,[1,2]):vu(t,[2,3])}))}}Iw.className="GlobalMaxPooling2D",Di(Iw);class Tw extends Vy{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=xb(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class Cw extends Tw{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Ay(e)).length<3)throw new Ym(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Ay(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return ca((()=>wv(((e,n)=>[Ry(this.layer.call(e,t)),[]]),e=Ry(e),[],!1,null,null,!1,!0)[1]))}}Cw.className="TimeDistributed",Di(Cw);class $w extends Tw{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=xb(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=xb(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,fg(Cg,"BidirectionalMergeMode",s),e.weights)throw new Qm("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):rg(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=vv(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Ym("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new Ly({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Qm("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof zy;for(const l of a)if(l instanceof zy!==o)throw new Ym("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return ca((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Kc(s,1)),"concat"===this.mergeMode?i=Xg([r,s]):"sum"===this.mergeMode?i=wi(r,s):"ave"===this.mergeMode?i=Si(.5,wi(r,s)):"mul"===this.mergeMode?i=Si(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Fg(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Fg(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=xb(t.layer);if(delete t.layer,null!=t.numConstants)throw new Qm("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}$w.className="Bidirectional",Di($w);class Ew extends Vy{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ca((()=>("float32"!==(e=Ry(e)).dtype&&(e=Gg(e,"float32")),wi(Si(e,this.scale),this.offset))))}}Ew.className="Rescaling",Di(Ew);const{resizeBilinear:Rw,cropAndResize:Aw}=ip;class _w extends Vy{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,a,i,o){return ca((()=>{let l,u=!1;const c=[t/a,n/i,(r+t)/a,(s+n)/i],h=[];3===e.rank?(u=!0,l=xh([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(c);const d=aa(h,[h.length,4]),p=Uc(0,h.length,1,"int32"),f=Aw(l,d,p,[r,s],"nearest");return Gg(u?Ry(Mh(f)):f,o)}))}upsize(e,t,n,r){return ca((()=>Gg(Rw(e,[t,n]),r)))}call(e,t){return ca((()=>{const t=Ry(e),n=t.dtype,r=t.shape,s=r[r.length-3],a=r[r.length-2];let i=0;s!==this.height&&(i=Math.floor((s-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,s,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Ay(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}_w.className="CenterCrop",Di(_w);class Fw extends Vy{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Ay(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return ca((()=>{let n;if("int32"!==(e=Ry(e)).dtype&&(e=Gg(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new Ym(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=Ry(t.countWeights)}const r=vu(e),s=wu(e),a=Fu(this.numTokens,r).bufferSync().get(0),i=Du(s,0).bufferSync().get(0);if(!a||!i)throw new Ym(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=Ry(e);if("int32"!==s.dtype&&(s=Gg(s,"int32")),"int"===t)return s;const a=s.shape;if(0===s.rank&&(s=Cu(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=Cu(s,-1)),s.rank>2)throw new Ym(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${s.rank}.`);const i=["multiHot","oneHot"].includes(t),o=s;let l;if(l=Jl(o,"undefined"!==typeof r&&"count"===t?r:[],n,i),"tfIdf"!==t)return l;if(r)return Si(l,r);throw new Ym("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Fw.className="CategoryEncoding",Di(Fw);const Dw=new Set(["bilinear","nearest"]);class Ow extends Vy{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Dw.has(e.interpolation))throw new Ym(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Ay(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ca((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return ip.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return ip.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Dw]} are supported`)}))}}Ow.className="Resizing",Di(Ow);class Mw{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}Mw.className="RandomSeed";class Lw extends Vy{constructor(e){super(e),this.randomGenerator=new Mw(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Lw.className="BaseRandomLayer";const zw=new Set(["bilinear","nearest"]);class Pw extends Lw{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Ym(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Ym(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new Ym(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!zw.has(n))throw new Ym(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Ay(e))[2];return[this.imgHeight,-1,t]}call(e,t){return ca((()=>{const t=Ry(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Wc([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return ip.resizeBilinear(e,s);case"nearest":return ip.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...zw]} are supported`)}}))}}Pw.className="RandomWidth",Di(Pw);var Bw,Ww;ge().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Bw||(Bw={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Ww||(Ww={}));const Vw={};function Uw(e){return Vw[e]}function Gw(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===a.type)return Hw(t.inputNames[o],n,r,s);if("tensors"===a.type){const a=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=a[t])||void 0===n?void 0:n.op)})).map((e=>Hw(e,n,r,s)))}const l=Hw(t.inputNames[o],n,r,s),u=l.dataSync();return"number"===a.type?u[0]:ae(l.shape,u)}const i=t.attrParams[e];return i&&i.value}function Hw(e,t,n,r){const[s,a]=Xw(e,n);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[Kw(s,e)]));return void 0!==i?t[Kw(s,i)][a]:void 0}function jw(e,t,n){return t[Kw(e,n.currentContextId)]}function qw(e,t){const[n,r,s]=Xw(e,t);return[Kw(n,t&&t.currentContextId),r,s]}function Kw(e,t){return t?`${e}-${t}`:e}function Xw(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let s;if(1===r.length)s=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;s=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,s),s}function Yw(e,t,n){let r=Gw("pad",e,t,n);if("explicit"===r){r=Gw("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function Qw(e){return e.kept?e:xi(e)}const Zw=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Jw=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ek=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],tk=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],nk=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],rk=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],sk=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],ak=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],ik=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],ok=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],lk=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],uk=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],ck=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],hk=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],dk=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],pk=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],fk=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],mk=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],gk=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class yk{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[i,o,l,u,c,h,d,p,f,m,g,y,b,x,v,w,k,N,S].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,r=[],s=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=qw(e),a=i[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=qw(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=qw(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:i,inputs:o,outputs:l,weights:s,placeholders:r,signature:t,functions:d};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Uw(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=xk(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=xk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=Ek(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ek(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=wk(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=wk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=$k(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=$k(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=vk(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=vk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=Ak(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ak(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=Ck(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ck(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=Rk(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Rk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=Sk(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Sk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=Ik(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ik(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=Nk(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Nk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=qw(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:kk(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=qw(e),i=r[s];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=qw(i[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function bk(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=ge().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function xk(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e[t];return null!=s?bk(s.s,r):n}function vk(e,t,n){const r=e[t];return r?r.b:n}function wk(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof s?s:parseInt(s,10)}function kk(e){switch("string"===typeof e&&(e=Bw[e]),e){case Bw.DT_FLOAT:case Bw.DT_HALF:return"float32";case Bw.DT_INT32:case Bw.DT_INT64:case Bw.DT_INT8:case Bw.DT_UINT8:return"int32";case Bw.DT_BOOL:return"bool";case Bw.DT_DOUBLE:return"float32";case Bw.DT_STRING:return"string";case Bw.DT_COMPLEX64:case Bw.DT_COMPLEX128:return"complex64";default:return null}}function Nk(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function Sk(e,t,n){const r=e[t];return r&&r.type?kk(r.type):n}function Ik(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>kk(e))):n}function Tk(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function Ck(e,t,n){const r=e[t];return r&&r.shape?Tk(r.shape):n}function $k(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function Ek(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>bk(e,r))):n}function Rk(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>Tk(e))):n}function Ak(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class _k{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Hw(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Hw(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return wk(this.node.rawAttrs,e,t);if(null!=n.s)return xk(this.node.rawAttrs,e,t);if(null!=n.b)return vk(this.node.rawAttrs,e,t);if(null!=n.shape)return Ck(this.node.rawAttrs,e,t);if(null!=n.type)return Sk(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return $k(this.node.rawAttrs,e,t);if(null!=n.list.s)return Ek(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Rk(this.node.rawAttrs,e,t);if(null!=n.list.b)return Ak(this.node.rawAttrs,e,t);if(null!=n.list.type)return Ik(this.node.rawAttrs,e,t)}return t}}function Fk(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){M(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];M(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Dk(e){return"number"!==typeof e&&!e.some((e=>e<0))}function Ok(e,t,n){let r=Mk(e,n);const s=!Dk(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=Mk(e.shape,r)})),!Dk(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Mk(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class Lk{constructor(e,t,n,r,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Ei(0),da(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Fk(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,da(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return aa([],[0].concat(this.elementShape));const n=this.readMany(e);return Fk(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),xh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return aa([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return Fk(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),wl(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Mh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];ca((()=>{t=bl(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],s];a[n]=bl(Sl(t,i,o),this.elementShape)}return a}));const i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,a)}}class zk{get id(){return this.idTensor.id}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Fk(t,e.shape,"TensorList shape mismatch: "),da(e)})),this.idTensor=Ei(0),this.maxNumElements=r,da(this.idTensor)}copy(){return new zk([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Fk(e,this.elementShape,"TensorList shape mismatch: ");const r=Ok(this.elementShape,this.tensors,e);return ca((()=>{const e=this.tensors.map((e=>bl(e,r)));return xh(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Ok(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,Fk(r.shape,e,"TensorList shape mismatch: "),bl(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Fk(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");da(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new zk([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Fk(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Ok(this.elementShape,this.tensors,t);return bl(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Fk(this.elementShape,t.shape,"TensorList shape mismatch: "),da(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Fk(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Ok(this.elementShape,this.tensors,n);return 0===e.length?aa([],[0].concat(r)):ca((()=>{const t=e.map((e=>bl(this.tensors[e],r)));return xh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Fk(this.elementShape,t,"TensorList shape mismatch: ");const n=Ok(this.elementShape,this.tensors,t);return 0===this.size()?aa([],[0].concat(n)):ca((()=>{const e=this.tensors.map((e=>bl(e,n)));return wl(e,0)}))}}const Pk=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Gw("thenBranch",e,t,n),s=Gw("elseBranch",e,t,n),a=Gw("cond",e,t,n),i=Gw("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Gw("body",e,t,n),s=Gw("cond",e,t,n),a=Gw("args",e,t,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=a;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[Qw(Gw("pred",e,t,n))];case"Switch":{const r=Gw("pred",e,t,n);let s=Gw("data",e,t,n);return s.kept||(s=Qw(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==Hw(e,t,n)));if(r){return[Qw(Hw(r,t,n))]}return}case"Enter":{const r=Gw("frameName",e,t,n),s=Gw("tensor",e,t,n);return n.enterFrame(r),[Qw(s)]}case"Exit":{const r=Gw("tensor",e,t,n);return n.exitFrame(),[Qw(r)]}case"NextIteration":{const r=Gw("tensor",e,t,n);return n.nextIteration(),[Qw(r)]}case"TensorArrayV3":{const r=Gw("size",e,t,n),s=Gw("dtype",e,t,n),a=Gw("elementShape",e,t,n),i=Gw("dynamicSize",e,t,n),o=Gw("clearAfterRead",e,t,n),l=Gw("identicalElementShapes",e,t,n),u=Gw("name",e,t,n),c=new Lk(u,s,r,a,l,i,o);return n.addTensorArray(c),[c.idTensor,Ei(1)]}case"TensorArrayWriteV3":{const r=Gw("tensorArrayId",e,t,n),s=Gw("index",e,t,n),a=Gw("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=Gw("tensorArrayId",e,t,n),s=Gw("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=Gw("tensorArrayId",e,t,n),s=Gw("indices",e,t,n),a=Gw("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=Gw("tensorArrayId",e,t,n),s=Gw("indices",e,t,n),a=Gw("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=Gw("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=Gw("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=Gw("tensorArrayId",e,t,n),s=Gw("tensor",e,t,n),a=Gw("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=Gw("tensorArrayId",e,t,n);return[Ei(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=Gw("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=Gw("tensorListId",e,t,n),s=Gw("index",e,t,n),a=Gw("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=Gw("tensorListId",e,t,n),s=Gw("index",e,t,n),a=Gw("elementShape",e,t,n),i=Gw("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Gw("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new zk([],n,e.dtype,r),i=Mh(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(Gw("tensor",e,t,n),r,Gw("elementShape",e,t,n),Gw("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Gw("elementShape",e,t,n),s=Gw("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=Gw(a,e,t,n),o=function(e,t,n,r){return new zk([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=Gw("tensorListId",e,t,n),s=Gw("indices",e,t,n),a=Gw("elementShape",e,t,n),i=Gw("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=Gw("tensorListId",e,t,n),s=Gw("elementShape",e,t,n),a=Gw("elementDType",e,t,n),i=Gw("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Fk(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=Mh(e);return new zk(s,t,r)}(Gw("tensor",e,t,n),Gw("elementShape",e,t,n),Gw("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=Gw("tensorListId",e,t,n),s=n.getTensorList(r.id),a=Gw("dtype",e,t,n),i=Gw("elementShape",e,t,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=Gw("tensorListId",e,t,n),s=Gw("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=Gw("tensorListId",e,t,n),s=Gw("elementShape",e,t,n),a=Gw("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=Gw("tensor",e,t,n),s=Gw("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=Mk(e.shape.slice(1),n),i=0===r?0:e.size/r,o=ca((()=>{const n=[];e=bl(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],l=[1,t[r],i];n[r]=bl(Sl(e,o,l),a)}return e.dispose(),n})),l=new zk([],n,e.dtype,t.length);for(let u=0;u<o.length;u++)l.setItem(u,o[u]);return l}(r,Gw("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=Gw("tensorListId",e,t,n);return[Ei(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=Gw("tensorListId",e,t,n),s=Gw("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Bk(e,t,n){const[r,s]=Gw("fusedOps",e,t,n),a="biasadd"===r,i=!a,o="prelu"===s,l="fusedbatchnorm"===r,u=Gw("numArgs",e,t,n);if(a){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=Gw("strides",e,t,n),h=Yw(e,t,n),d=Gw("dataFormat",e,t,n).toUpperCase(),p=Gw("dilations",e,t,n);let[f,m]=Gw("args",e,t,n);i&&(m=f,f=void 0);return{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:Gw("leakyreluAlpha",e,t,n)}}function Wk(e,t,n){return{boxes:Gw("boxes",e,t,n),scores:Gw("scores",e,t,n),maxOutputSize:Gw("maxOutputSize",e,t,n),iouThreshold:Gw("iouThreshold",e,t,n),scoreThreshold:Gw("scoreThreshold",e,t,n),softNmsSigma:Gw("softNmsSigma",e,t,n)}}class Vk{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ei(0),this.tensorMap=new Map,da(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ei(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),ca((()=>{const e=Mh(t),r=n.length,s=e.length;M(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];da(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return ca((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return xh(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function Uk(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ca;const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(Gw("a",e,t,n),Gw("b",e,t,n))];case"AddN":return[r.addN(Gw("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(Gw("a",e,t,n),Gw("b",e,t,n))];case"Mul":return[r.mul(Gw("a",e,t,n),Gw("b",e,t,n))];case"RealDiv":case"Div":return[r.div(Gw("a",e,t,n),Gw("b",e,t,n))];case"DivNoNan":return[r.divNoNan(Gw("a",e,t,n),Gw("b",e,t,n))];case"FloorDiv":return[r.floorDiv(Gw("a",e,t,n),Gw("b",e,t,n))];case"Sub":return[r.sub(Gw("a",e,t,n),Gw("b",e,t,n))];case"Minimum":return[r.minimum(Gw("a",e,t,n),Gw("b",e,t,n))];case"Maximum":return[r.maximum(Gw("a",e,t,n),Gw("b",e,t,n))];case"Pow":return[r.pow(Gw("a",e,t,n),Gw("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(Gw("a",e,t,n),Gw("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"basic_math":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(Gw("x",e,t,n))];case"Acos":return[r.acos(Gw("x",e,t,n))];case"Acosh":return[r.acosh(Gw("x",e,t,n))];case"Asin":return[r.asin(Gw("x",e,t,n))];case"Asinh":return[r.asinh(Gw("x",e,t,n))];case"Atan":return[r.atan(Gw("x",e,t,n))];case"Atan2":return[r.atan2(Gw("x",e,t,n),Gw("y",e,t,n))];case"Atanh":return[r.atanh(Gw("x",e,t,n))];case"Ceil":return[r.ceil(Gw("x",e,t,n))];case"Complex":return[r.complex(Gw("real",e,t,n),Gw("imag",e,t,n))];case"Cos":return[r.cos(Gw("x",e,t,n))];case"Cosh":return[r.cosh(Gw("x",e,t,n))];case"Elu":return[r.elu(Gw("x",e,t,n))];case"Erf":return[r.erf(Gw("x",e,t,n))];case"Exp":return[r.exp(Gw("x",e,t,n))];case"Expm1":return[r.expm1(Gw("x",e,t,n))];case"Floor":return[r.floor(Gw("x",e,t,n))];case"Log":return[r.log(Gw("x",e,t,n))];case"Log1p":return[r.log1p(Gw("x",e,t,n))];case"Imag":return[r.imag(Gw("x",e,t,n))];case"Neg":return[r.neg(Gw("x",e,t,n))];case"Reciprocal":return[r.reciprocal(Gw("x",e,t,n))];case"Real":return[r.real(Gw("x",e,t,n))];case"Relu":return[r.relu(Gw("x",e,t,n))];case"Round":return[r.round(Gw("x",e,t,n))];case"Selu":return[r.selu(Gw("x",e,t,n))];case"Sigmoid":return[r.sigmoid(Gw("x",e,t,n))];case"Sin":return[r.sin(Gw("x",e,t,n))];case"Sign":return[r.sign(Gw("x",e,t,n))];case"Sinh":return[r.sinh(Gw("x",e,t,n))];case"Softplus":return[r.softplus(Gw("x",e,t,n))];case"Sqrt":return[r.sqrt(Gw("x",e,t,n))];case"Square":return[r.square(Gw("x",e,t,n))];case"Tanh":return[r.tanh(Gw("x",e,t,n))];case"Tan":return[r.tan(Gw("x",e,t,n))];case"ClipByValue":return[r.clipByValue(Gw("x",e,t,n),Gw("clipValueMin",e,t,n),Gw("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(Gw("x",e,t,n))];case"Rsqrt":return[r.rsqrt(Hw(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(Gw("x",e,t,n),Gw("alpha",e,t,n))];case"Prelu":return[r.prelu(Gw("x",e,t,n),Gw("alpha",e,t,n))];case"IsNan":return[r.isNaN(Hw(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(Hw(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(Hw(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"control":return Pk(e,t,n);case"convolution":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Conv1D":{const s=Gw("stride",e,t,n),a=Gw("pad",e,t,n),i=Gw("dataFormat",e,t,n).toUpperCase(),o=Gw("dilation",e,t,n);return[r.conv1d(Gw("x",e,t,n),Gw("filter",e,t,n),s,a,i,o)]}case"Conv2D":{const s=Gw("strides",e,t,n),a=Yw(e,t,n),i=Gw("dataFormat",e,t,n).toUpperCase(),o=Gw("dilations",e,t,n);return[r.conv2d(Gw("x",e,t,n),Gw("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=Bk(e,t,n);return[r.fused.conv2d({x:Gw("x",e,t,n),filter:Gw("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=Bk(e,t,n);return[r.fused.depthwiseConv2d({x:Gw("x",e,t,n),filter:Gw("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=Gw("outputShape",e,t,n),a=Gw("strides",e,t,n),i=Yw(e,t,n);return[r.conv2dTranspose(Gw("x",e,t,n),Gw("filter",e,t,n),s,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=Gw("strides",e,t,n),a=Yw(e,t,n),i=Gw("dilations",e,t,n),o=Gw("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(Gw("input",e,t,n),Gw("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const s=Gw("strides",e,t,n),a=Gw("pad",e,t,n),i=Gw("dataFormat",e,t,n).toUpperCase(),o=Gw("dilations",e,t,n);return[r.conv3d(Gw("x",e,t,n),Gw("filter",e,t,n),[s[1],s[2],s[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const s=Gw("strides",e,t,n),a=Gw("pad",e,t,n),i=Gw("kernelSize",e,t,n);return[r.avgPool(Gw("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=Gw("strides",e,t,n),a=Gw("pad",e,t,n),i=Gw("kernelSize",e,t,n);return[r.maxPool(Gw("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=Gw("strides",e,t,n),a=Gw("pad",e,t,n),i=Gw("kernelSize",e,t,n),o=Gw("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(Gw("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a,o);return[l,u]}case"AvgPool3D":{const s=Gw("strides",e,t,n),a=Gw("pad",e,t,n),i=Gw("kernelSize",e,t,n);return[r.avgPool3d(Gw("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=Gw("strides",e,t,n),a=Gw("pad",e,t,n),i=Gw("kernelSize",e,t,n);return[r.maxPool3d(Gw("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=Gw("strides",e,t,n),a=Gw("pad",e,t,n),i=Gw("dilations",e,t,n),o=s[1],l=s[2],u=i[1],c=i[2];return[r.dilation2d(Gw("x",e,t,n),Gw("filter",e,t,n),[o,l],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"creation":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Fill":{const s=Gw("shape",e,t,n),a=Gw("dtype",e,t,n),i=Gw("value",e,t,n);return[r.fill(s,i,a)]}case"LinSpace":{const s=Gw("start",e,t,n),a=Gw("stop",e,t,n),i=Gw("num",e,t,n);return[r.linspace(s,a,i)]}case"Multinomial":{const s=Gw("logits",e,t,n),a=Gw("numSamples",e,t,n),i=Gw("seed",e,t,n);return[r.multinomial(s,a,i)]}case"OneHot":{const s=Gw("indices",e,t,n),a=Gw("depth",e,t,n),i=Gw("onValue",e,t,n),o=Gw("offValue",e,t,n),l=Gw("dtype",e,t,n);return[r.oneHot(s,a,i,o,l)]}case"Ones":return[r.ones(Gw("shape",e,t,n),Gw("dtype",e,t,n))];case"OnesLike":return[r.onesLike(Gw("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(Gw("shape",e,t,n),Gw("dtype",e,t,n),Gw("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(Gw("shape",e,t,n),Gw("minval",e,t,n),Gw("maxval",e,t,n),Gw("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(Gw("shape",e,t,n),Gw("minval",e,t,n),Gw("maxval",e,t,n),Gw("seed",e,t,n))];case"Range":{const s=Gw("start",e,t,n),a=Gw("stop",e,t,n),i=Gw("step",e,t,n);return[r.range(s,a,i,Gw("dtype",e,t,n))]}case"TruncatedNormal":{const s=Gw("shape",e,t,n),a=Gw("mean",e,t,n),i=Gw("stdDev",e,t,n),o=Gw("seed",e,t,n);return[r.truncatedNormal(s,a,i,Gw("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(Gw("shape",e,t,n),Gw("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(Gw("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"dynamic":return async function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:I;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=Wk(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,i,o,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=Wk(e,t,n),u=Gw("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,i,o,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=Wk(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,i,o,l)]}case"Where":{const r=s.cast(Gw("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(Gw("x",e,t,n),Gw("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n);case"evaluation":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"LowerBound":{const s=Gw("sortedSequence",e,t,n),a=Gw("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=Gw("x",e,t,n),a=Gw("k",e,t,n),i=Gw("sorted",e,t,n),o=r.topk(s,a,i);return[o.values,o.indices]}case"UpperBound":{const s=Gw("sortedSequence",e,t,n),a=Gw("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=Gw("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=Gw("x",e,t,n),a=Gw("axis",e,t,n),i=r.unique(s,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"image":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"ResizeBilinear":{const s=Gw("images",e,t,n),a=Gw("size",e,t,n),i=Gw("alignCorners",e,t,n),o=Gw("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const s=Gw("images",e,t,n),a=Gw("size",e,t,n),i=Gw("alignCorners",e,t,n),o=Gw("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],i,o)]}case"CropAndResize":{const s=Gw("image",e,t,n),a=Gw("boxes",e,t,n),i=Gw("boxInd",e,t,n),o=Gw("cropSize",e,t,n),l=Gw("method",e,t,n),u=Gw("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,i,o,l,u)]}case"ImageProjectiveTransformV3":{const s=Gw("images",e,t,n),a=Gw("transforms",e,t,n),i=Gw("outputShape",e,t,n),o=Gw("fillValue",e,t,n),l=Gw("interpolation",e,t,n),u=Gw("fillMode",e,t,n);return[r.image.transform(s,a,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"graph":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=Gw("default",e,t,n);return[Hw(e.name,t,n)||s];case"Placeholder":return[Hw(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Qw(Gw("x",e,t,n))];case"IdentityN":return Gw("x",e,t,n).map((e=>Qw(e)));case"Shape":return[r.tensor1d(Gw("x",e,t,n).shape,"int32")];case"ShapeN":return Gw("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(Gw("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(Gw("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=Gw("x",e,t,n),i=Gw("data",e,t,n),o=Gw("message",e,t,n),l=Gw("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"logical":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Equal":return[r.equal(Gw("a",e,t,n),Gw("b",e,t,n))];case"NotEqual":return[r.notEqual(Gw("a",e,t,n),Gw("b",e,t,n))];case"Greater":return[r.greater(Gw("a",e,t,n),Gw("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(Gw("a",e,t,n),Gw("b",e,t,n))];case"Less":return[r.less(Gw("a",e,t,n),Gw("b",e,t,n))];case"LessEqual":return[r.lessEqual(Gw("a",e,t,n),Gw("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(Gw("a",e,t,n),Gw("b",e,t,n))];case"LogicalNot":return[r.logicalNot(Gw("a",e,t,n))];case"LogicalOr":return[r.logicalOr(Gw("a",e,t,n),Gw("b",e,t,n))];case"Select":case"SelectV2":return[r.where(Gw("condition",e,t,n),Gw("a",e,t,n),Gw("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(Gw("a",e,t,n),Gw("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"matrices":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(Gw("a",e,t,n),Gw("b",e,t,n),Gw("transposeA",e,t,n),Gw("transposeB",e,t,n))];case"Einsum":return[r.einsum(Gw("equation",e,t,n),...Gw("tensors",e,t,n))];case"Transpose":return[r.transpose(Gw("x",e,t,n),Gw("perm",e,t,n))];case"_FusedMatMul":const[s,a]=Gw("fusedOps",e,t,n),i="biasadd"===s,o="prelu"===a,l=Gw("numArgs",e,t,n),u=Gw("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=Gw("args",e,t,n);return[r.fused.matMul({a:Gw("a",e,t,n),b:Gw("b",e,t,n),transposeA:Gw("transposeA",e,t,n),transposeB:Gw("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(Gw("a",e,t,n),Gw("numLower",e,t,n),Gw("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"normalization":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(Gw("x",e,t,n),Gw("axis",e,t,n),Gw("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(Gw("x",e,t,n),Gw("mean",e,t,n),Gw("variance",e,t,n),Gw("offset",e,t,n),Gw("scale",e,t,n),Gw("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(Gw("x",e,t,n),Gw("radius",e,t,n),Gw("bias",e,t,n),Gw("alpha",e,t,n),Gw("beta",e,t,n))];case"Softmax":return[r.softmax(Gw("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(Gw("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"ragged":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:a}=r.raggedGather(Gw("paramsNestedSplits",e,t,n),Gw("paramsDenseValues",e,t,n),Gw("indices",e,t,n),Gw("outputRaggedRank",e,t,n));return s.concat(a)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:a}=r.raggedRange(Gw("starts",e,t,n),Gw("limits",e,t,n),Gw("splits",e,t,n));return[s,a]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(Gw("shape",e,t,n),Gw("values",e,t,n),Gw("defaultValue",e,t,n),Gw("rowPartitionTensors",e,t,n),Gw("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"reduction":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Max":{const s=Gw("axis",e,t,n),a=Gw("keepDims",e,t,n);return[r.max(Gw("x",e,t,n),s,a)]}case"Mean":{const s=Gw("axis",e,t,n),a=Gw("keepDims",e,t,n);return[r.mean(Gw("x",e,t,n),s,a)]}case"Min":{const s=Gw("axis",e,t,n),a=Gw("keepDims",e,t,n);return[r.min(Gw("x",e,t,n),s,a)]}case"Sum":{const s=Gw("axis",e,t,n),a=Gw("keepDims",e,t,n);return[r.sum(Gw("x",e,t,n),s,a)]}case"All":{const s=Gw("axis",e,t,n),a=Gw("keepDims",e,t,n);return[r.all(Gw("x",e,t,n),s,a)]}case"Any":{const s=Gw("axis",e,t,n),a=Gw("keepDims",e,t,n);return[r.any(Gw("x",e,t,n),s,a)]}case"ArgMax":{const s=Gw("axis",e,t,n);return[r.argMax(Gw("x",e,t,n),s)]}case"ArgMin":{const s=Gw("axis",e,t,n);return[r.argMin(Gw("x",e,t,n),s)]}case"Prod":{const s=Gw("axis",e,t,n),a=Gw("keepDims",e,t,n);return[r.prod(Gw("x",e,t,n),s,a)]}case"Cumprod":{const s=Gw("axis",e,t,n),a=Gw("exclusive",e,t,n),i=Gw("reverse",e,t,n);return[r.cumprod(Gw("x",e,t,n),s,a,i)]}case"Cumsum":{const s=Gw("axis",e,t,n),a=Gw("exclusive",e,t,n),i=Gw("reverse",e,t,n);return[r.cumsum(Gw("x",e,t,n),s,a,i)]}case"Bincount":const s=Gw("x",e,t,n),a=Gw("weights",e,t,n),i=Gw("size",e,t,n);return[r.bincount(s,a,i)];case"DenseBincount":{const s=Gw("x",e,t,n),a=Gw("weights",e,t,n),i=Gw("size",e,t,n),o=Gw("binaryOutput",e,t,n);return[r.denseBincount(s,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"slice_join":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"ConcatV2":case"Concat":{const s=Gw("n",e,t,n),a=Gw("axis",e,t,n);let i=Gw("tensors",e,t,n);return i=i.slice(0,s),[r.concat(i,a)]}case"Gather":{const s=Gw("x",e,t,n),a=Gw("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=Gw("axis",e,t,n),a=Gw("batchDims",e,t,n),i=Gw("x",e,t,n),o=Gw("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),s,a)]}case"Reverse":{const s=Gw("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const i=Gw("x",e,t,n);return[r.reverse(i,a)]}case"ReverseV2":{const s=Gw("axis",e,t,n),a=Gw("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=Gw("begin",e,t,n),a=Gw("size",e,t,n);return[r.slice(Gw("x",e,t,n),s,a)]}case"StridedSlice":{const s=Gw("begin",e,t,n),a=Gw("end",e,t,n),i=Gw("strides",e,t,n),o=Gw("beginMask",e,t,n),l=Gw("endMask",e,t,n),u=Gw("ellipsisMask",e,t,n),c=Gw("newAxisMask",e,t,n),h=Gw("shrinkAxisMask",e,t,n),d=Gw("x",e,t,n);return[r.stridedSlice(d,s,a,i,o,l,u,c,h)]}case"Pack":return ca((()=>{const s=Gw("axis",e,t,n),a=Gw("tensors",e,t,n),i=a[0].shape,o=r.squeeze(a[0]).shape,l=a.map((e=>{const t=B(e.shape,i);if(!t&&!B(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(l,s)]}));case"Unpack":{const s=Gw("axis",e,t,n),a=Gw("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=Gw("reps",e,t,n);return[r.tile(Gw("x",e,t,n),s)]}case"Split":case"SplitV":{const s=Gw("axis",e,t,n),a=Gw("numOrSizeSplits",e,t,n),i=Gw("x",e,t,n);return r.split(i,a,s)}case"ScatterNd":{const s=Gw("indices",e,t,n),a=Gw("values",e,t,n),i=Gw("shape",e,t,n);return[r.scatterND(s,a,i)]}case"GatherNd":{const s=Gw("x",e,t,n),a=Gw("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=Gw("sparseIndices",e,t,n),a=Gw("outputShape",e,t,n),i=Gw("sparseValues",e,t,n),o=Gw("defaultValue",e,t,n);return[r.sparseToDense(s,i,a,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{const s=Gw("indices",e,t,n),a=Gw("values",e,t,n),i=Gw("tensor",e,t,n);return[r.tensorScatterUpdate(i,s,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"sparse":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(Gw("indices",e,t,n),Gw("values",e,t,n),Gw("denseShape",e,t,n),Gw("defaultValue",e,t,n));return[s,a,i,o]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(Gw("inputIndices",e,t,n),Gw("inputShape",e,t,n),Gw("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(Gw("data",e,t,n),Gw("indices",e,t,n),Gw("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(Gw("data",e,t,n),Gw("indices",e,t,n),Gw("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"spectral":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"FFT":return[r.fft(Gw("x",e,t,n))];case"IFFT":return[r.ifft(Gw("x",e,t,n))];case"RFFT":return[r.rfft(Gw("x",e,t,n))];case"IRFFT":return[r.irfft(Gw("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"string":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(Gw("input",e,t,n),Gw("pattern",e,t,n),Gw("rewrite",e,t,n),Gw("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(Gw("data",e,t,n),Gw("dataSplits",e,t,n),Gw("separator",e,t,n),Gw("nGramWidths",e,t,n),Gw("leftPad",e,t,n),Gw("rightPad",e,t,n),Gw("padWidth",e,t,n),Gw("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:i}=r.string.stringSplit(Gw("input",e,t,n),Gw("delimiter",e,t,n),Gw("skipEmpty",e,t,n));return[s,a,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(Gw("input",e,t,n),Gw("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"transformation":return s((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Cast":return[r.cast(Gw("x",e,t,n),Gw("dtype",e,t,n))];case"ExpandDims":{const s=Gw("axis",e,t,n);return[r.expandDims(Gw("x",e,t,n),s)]}case"Squeeze":{const s=Gw("axis",e,t,n);return[r.squeeze(Gw("x",e,t,n),s)]}case"Reshape":return[r.reshape(Gw("x",e,t,n),Gw("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(Gw("x",e,t,n),Gw("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(Gw("x",e,t,n),Gw("padding",e,t,n),Gw("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(Gw("x",e,t,n),Gw("padding",e,t,n),Gw("constantValue",e,t,n))];case"SpaceToBatchND":{const s=Gw("blockShape",e,t,n),a=Gw("paddings",e,t,n);return[r.spaceToBatchND(Gw("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=Gw("blockShape",e,t,n),a=Gw("crops",e,t,n);return[r.batchToSpaceND(Gw("x",e,t,n),s,a)]}case"DepthToSpace":{const s=Gw("blockSize",e,t,n),a=Gw("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(Gw("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo(Gw("x",e,t,n),Gw("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(Gw("s0",e,t,n),Gw("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(e.name);if(null!=s)return[s];{const s=Gw("keyDType",e,t,n),a=Gw("valueDType",e,t,n),i=new Vk(s,a);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=Gw("tableHandle",e,t,n,r),a=Gw("keys",e,t,n),i=Gw("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=Gw("tableHandle",e,t,n,r),a=Gw("keys",e,t,n),i=Gw("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=Gw("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=Uw(e.op);if(a&&a.customExecutor)return a.customExecutor(new _k(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return de(a)?a.then((e=>[].concat(e))):[].concat(a)}class Gk{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Hk(e,t,n,r){const s=new Set,a=[];let i=null,o=null;const l=new Set,u=new Set(Object.keys(e).map((e=>Xw(e)[0])));r=r||[];const c=new Set(r.map((e=>Xw(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();(Qk(e)||Zk(e)||Jk(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&(u.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}function jk(e,t){const{usedNodes:n,inputs:r}=t,s=Object.keys(r).map((e=>Xw(e)[0])).map((t=>e.nodes[t])),a=e.initNodes||[],i=e=>n.has("string"===typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const l=o([...s,...e.weights,...a]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),c=new Map(u.map((e=>[e.name,e]))),h={};for(const m of u){h[m.name]=h[m.name]||0;for(const e of m.children)i(e)||(h[e.name]=Number.POSITIVE_INFINITY),h[e.name]=(h[e.name]||0)+1}const d=Object.entries(h).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),p=[...d];for(;d.length>0;){const e=d.pop(),t=c.get(e);for(const n of t.children.filter(i))0===--h[n.name]&&(p.push(n.name),d.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),s=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const a of t.children)n.has(a.name)&&!s.has(a.name)&&(s.add(a.name),r.push(a.name))}const a=e.filter((e=>s.has(e.name)));return a}(p.map((e=>c.get(e))),l);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),s=e=>r.has("string"===typeof e?e:e.name),a=new Set(e.map((e=>e.name))),i=e=>a.has("string"===typeof e?e:e.name);for(const o of e){for(const e of o.children.filter(i)){if(!n.has(e.name))throw new qk(`Child ${e.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(e.name))throw new qk(`Node ${o.name} is scheduled to run after its child ${e.name}.`)}if(!s(o))for(const e of o.inputs){if(!n.has(e.name))throw new qk(`Input ${e.name} of node ${o.name} is unreachable.`);if(n.get(e.name)>n.get(o.name))throw new qk(`Node ${o.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}class qk extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const Kk=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Xk=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Yk=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Qk(e){return Kk.has(e.op)}function Zk(e){return Xk.has(e.op)}function Jk(e){return Yk.has(e.op)}class eN{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new eN(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=Hk(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}const i=jk(this.graph,n),o=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>Qk(e)?n:t)),s=e=>{const n=r[t.get(e.name)];return null==n?-1:n},a=e.map(((e,t)=>e.children.map(s).reduce(((e,t)=>Math.max(e,t)),r[t]))),i=new Map;for(let o=0;o<e.length;++o){const t=a[o];if(t===n)continue;const r=e[o],s=e[t];i.has(s.name)||i.set(s.name,[]),i.get(s.name).push(r)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return da(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[Xw(e)[0]])),s=t.map((e=>Xw(e)[0])),a=new Set(s);let i=s.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const o=this.getCompilationKey(r,i);let l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=ge().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const u={},c={};return ca((()=>{const n=new Gk(this.weightMap,u,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[s,a]=Xw(t,n),i=[];i[a]=e[t],r[s]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[s]=this.cloneTensorList(i))}));const s=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(const e of i){if(r[e.name])continue;const t=Uk(e,r,n,this._resourceManager);if(de(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,s,a,o.get(e.name))}return null==this.parent&&n.dispose(s),t.map((e=>Hw(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,i){if(!Qk(t)&&!a.has(e)){for(const r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(const e of t.inputs){if(Qk(e))continue;const t=jw(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||s.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,s,a){function i(e){return Qk(e)||s.has(e.name)}if(!Qk(e)&&null!=a)for(const o of a){if(i(o))continue;const e=jw(o.name,t,n);for(const t of e)!t||t.kept||r.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=ge().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const a=new Gk(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,n),o=t.map((e=>Hw(e,i,a))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[Xw(e)[0]])),i=n.map((e=>Xw(e)[0])),o=new Set(i);let l=i.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:h,syncInputs:d}=Hk(e,l,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Xw(t),s=[];s[r]=e[t],f[n]=s}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(a,p,t,f,y,g,o,m,u);await Promise.all(e)}null!=h||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter((e=>!Qk(e)&&!Hw(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,r,s,a,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&Gw("isConstant",e.node,r,n)&&([c]=qw(e.node.name,n)),null==r[e.node.name]){const h=Uk(e.node,r,n,this._resourceManager);c||([c]=qw(e.node.name,n));const d=n.currentContext;de(h)?u.push(h.then((u=>(r[c]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(u)),n.currentContext=d,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,l),u)))):(r[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,l))}else this.processChildNodes(e.node,t,n,r,s,l)}return u}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[i]=qw(e.name,n);!s[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Hw(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Hw(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=Xw(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;M(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&M(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const s in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[s];null!=a?r[a.name]=e[s]:r[s]=e[s]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Xw(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Xw(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class tN{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const nN="?tfjs-format=file",rN="model.json";class sN{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;this.modelUrl=t,this.loadOptions=n,this.version="n/a",this.io=r,null==n&&(this.loadOptions={}),this.resourceManager=new tN}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return de(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await ka(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new eN(yk.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=yk.Instance.transformGraph(e.modelInitializer);this.initializer=new eN(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof Ns?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Ns)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var s,a,i;const o=null===(i=null===(a=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===a?void 0:a[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const s=t[n[r]];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&ha(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function aN(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==n&&(n={}),n.fromTFHub&&"string"===typeof t&&(t=function(e){e.endsWith("/")||(e+="/");return`${e}${rN}${nN}`}(t));const s=new sN(t,n,r);return await s.load(),s}function iN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(cN(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=iN(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function oN(e){return lN(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:uN)}function lN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(cN(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=lN(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function uN(e){return null===e?null:cN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function cN(e){let t=!1;if(ge().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(551);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof Ns)&&!(e instanceof Promise)&&!t)}function hN(e){return function(e,t){return iN(e,t)}(e,dN)}function dN(e){return e instanceof Ns?{value:e.clone(),recurse:!1}:cN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class pN{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class fN extends pN{constructor(){super(fN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function mN(e){return new xN(e)}function gN(e,t){return new RN(e,t)}fN.INITIAL_CAPACITY=32;class yN{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new TN(this,e)}filter(e){return new SN(this,e)}map(e){return new IN(this,e)}mapAsync(e){return new CN(this,e)}serialMapAsync(e){return new CN(this,e).serial()}flatmap(e){return new EN(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new NN(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:uN;return this.rowMajorBatch(e,t).map((e=>oN(e,n)))}concatenate(e,t){return new RN(new bN([this,e]),t)}take(e){return e<0||null==e?this:new kN(this,e)}skip(e){return e<0||null==e?this:new wN(this,e)}prefetch(e){return new _N(this,e)}shuffle(e,t){return new FN(this,e,t)}serial(){return new vN(this)}}class bN extends yN{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:hN(e),done:!1}}}class xN extends yN{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class vN extends yN{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class wN extends yN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;ha(e.value)}return this.upstream.next()}}class kN extends yN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class NN extends yN{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class SN extends yN{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ha(e.value)}}}class IN extends yN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=zs(e.value),n=this.transform(e.value),r=zs(n);for(const s of t)Ls(s,r)||s.dispose();return{value:n,done:!1}}}class TN extends yN{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class CN extends yN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=zs(e.value),n=await this.transform(e.value),r=zs(n);for(const s of t)Ls(s,r)||s.dispose();return{value:n,done:!1}}}class $N extends yN{constructor(){super(),this.outputQueue=new fN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class EN extends $N{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=zs(e.value),n=this.transform(e.value),r=zs(n);this.outputQueue.pushAll(n);for(const s of t)Ls(s,r)||s.dispose();return!0}}class RN extends yN{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var AN;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(AN||(AN={}));class _N extends yN{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new pN(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class FN extends _N{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Dc.alea(n||is().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class DN{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let r;return M(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),ON((async()=>(await n.iterator()).columnMajorBatch(e,t,MN)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,ON((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,ON((async()=>(await t.iterator()).filter((t=>ca((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return ON((async()=>(await t.iterator()).map((t=>ca((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return ON((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return ON((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,ON((async()=>gN(mN((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,ON((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Dc.alea(t||is().toString());return ON((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,ON((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function ON(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends DN{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function MN(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof Ns||us(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ns?xh(e):aa(e)}(e),recurse:!1}}return{value:null,recurse:!0}}DN.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function LN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&M("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const zN=Ph;class PN extends R{nextDataId(){return PN.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new E(this,la())}write(e,t,n){this.firstUse&&(this.firstUse=!1,ge().get("IS_NODE")&&Fr("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Z(n[0])){const s=n.map((e=>os(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return zp(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>ls(e)));return yi(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return yi(e.shape,e.dtype,t)}makeOutput(e,t,n){return la().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=is();e();return{kernelMs:is()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){LN([e],"where");const t=this.readSync(e.dataId);return zN(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}PN.nextDataId=0;function BN(e){return(t,n,r)=>{const s=X(n,t.length);for(let a=0;a<t.length;++a)s[a]=e(t[a],r);return s}}function WN(e,t,n){return VN(e,BN(t),n)}function VN(e,t,n){return r=>{let{inputs:s,attrs:a,backend:i}=r;const{x:o}=s;LN(o,e);const l=i,u=l.data.get(o.dataId).values;let c;if("string"===o.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");c=xf(u)}else c=u;const h=n||o.dtype,d=t(c,h,a);return l.makeTensorInfo(o.shape,h,d)}}pa("cpu",(()=>new PN),1);const UN=WN(xt,(e=>e>=0?e:Math.exp(e)-1)),GN={kernelName:xt,backendName:"cpu",kernelFunc:UN};function HN(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const jN={kernelName:Mt,backendName:"cpu",kernelFunc:HN};function qN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;LN([s],"leakyRelu");const i=P(s.shape),o=n.data.get(s.dataId).values,l=K("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?a*o[u]:o[u];return n.makeTensorInfo(s.shape,"float32",l)}const KN={kernelName:Vt,backendName:"cpu",kernelFunc:qN};function XN(e){return(t,n,r,s,a)=>{const i=Hi(t,n),o=i.length,l=re(i),u=K(a,P(i)),c=t.length,h=n.length,d=re(t),p=re(n),f=Ui(t,i),m=Ui(n,i);if(f.length+m.length===0)for(let g=0;g<u.length;++g)u[g]=e(r[g%r.length],s[g%s.length]);else for(let g=0;g<u.length;++g){const t=he(g,o,l),n=t.slice(-c);f.forEach((e=>n[e]=0));const a=ce(n,c,d),i=t.slice(-h);m.forEach((e=>i[e]=0));const y=ce(i,h,p);u[g]=e(r[a],s[y])}return[u,i]}}const YN=XN(((e,t)=>e<0?t*e:e));function QN(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;LN([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=YN(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const ZN={kernelName:Sn,backendName:"cpu",kernelFunc:QN},JN=WN(_n,(e=>Math.max(0,e))),eS={kernelName:_n,backendName:"cpu",kernelFunc:JN},tS=WN(zn,(e=>Math.min(Math.max(0,e),6))),nS={kernelName:zn,backendName:"cpu",kernelFunc:tS},rS=BN((e=>1/(1+Math.exp(-e)))),sS=WN(Qn,(e=>1/(1+Math.exp(-e)))),aS={kernelName:Qn,backendName:"cpu",kernelFunc:sS};function iS(e,t,n,r,s){if("linear"===n)return HN({inputs:{x:t},backend:e});if("relu"===n)return JN({inputs:{x:t},backend:e});if("elu"===n)return UN({inputs:{x:t},backend:e});if("relu6"===n)return tS({inputs:{x:t},backend:e});if("prelu"===n)return QN({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return qN({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return sS({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function oS(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const lS={kernelName:qe,backendName:"cpu",kernelFunc:oS};function uS(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return oS({inputs:{real:uS(e,t,"float32"),imag:uS(e,t,"float32")},backend:e})}const r=oe(P(t),n);return e.makeTensorInfo(t,n,r)}function cS(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const hS={kernelName:Rn,backendName:"cpu",kernelFunc:cS};function dS(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){const r=as([0],n),[s,a]=XN(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function pS(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return HN({inputs:{x:s},backend:n});const e=uS(n,s.shape,s.dtype),t=pS({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=oS({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=cS({inputs:{input:s},backend:n}),t=pS({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!Y(s.dtype,a)){const e=HN({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(s.dataId).values,[o,l,u]=dS(i,s.shape,s.dtype,a);return n.makeTensorInfo(o,l,u)}const fS={kernelName:Ge,backendName:"cpu",kernelFunc:pS};function mS(e,t,n,r){return null==n?n=>{let{inputs:s,backend:a}=n;const{a:i,b:o}=s,l=a;LN([i,o],e);const u=l.data.get(i.dataId).values,c=l.data.get(o.dataId).values,h="string"===i.dtype?xf(u):u,d="string"===i.dtype?xf(c):c,p=r||i.dtype,[f,m]=t(i.shape,o.shape,h,d,p);return l.makeTensorInfo(m,p,f)}:e=>{let{inputs:s,backend:a}=e;const{a:i,b:o}=s,l=a;if("complex64"===i.dtype||"complex64"===o.dtype){const e=pS({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,a=l.data.get(r.dataId).values,u=l.data.get(s.dataId).values,c=pS({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),h=l.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=l.data.get(d.dataId).values,m=l.data.get(p.dataId).values,[g,y,b]=n(i.shape,o.shape,a,u,f,m),x=l.makeTensorInfo(b,"float32",g),v=l.makeTensorInfo(b,"float32",y),w=oS({inputs:{real:x,imag:v},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(x),l.disposeIntermediateTensorInfo(v),w}{const e=l.data.get(i.dataId).values,n=l.data.get(o.dataId).values,s=r||i.dtype,[a,u]=t(i.shape,o.shape,e,n,s);return l.makeTensorInfo(u,s,a)}}}function gS(e){return(t,n,r,s,a,i)=>{const o=Hi(t,n),l=P(o),u=o.length,c=re(o),h=K("float32",l),d=K("float32",l),p=Ui(t,o),f=Ui(n,o),m=zp(r,s),g=zp(a,i),y=t.length,b=re(t),x=n.length,v=re(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const t=w%m.length,n=w%g.length,r=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);h[w]=r.real,d[w]=r.imag}else for(let w=0;w<h.length;w++){const t=he(w,u,c),n=t.slice(-y);p.forEach((e=>n[e]=0));const r=ce(n,y,b),s=t.slice(-x);f.forEach((e=>s[e]=0));const a=ce(s,x,v),i=e(m[2*r],m[2*r+1],g[2*a],g[2*a+1]);h[w]=i.real,d[w]=i.imag}return[h,d,o]}}const yS=XN(((e,t)=>e+t)),bS=gS(((e,t,n,r)=>({real:e+n,imag:t+r}))),xS=mS(Se,yS,bS),vS={kernelName:Se,backendName:"cpu",kernelFunc:xS};function wS(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=P(s.shape),o=H(a,i),l=P(o);M(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const kS={kernelName:Fn,backendName:"cpu",kernelFunc:wS};function NS(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;LN([s,a],"matMul");const l=s.shape.length,u=a.shape.length,c=i?s.shape[l-2]:s.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],d=i?s.shape[l-1]:s.shape[l-2],p=o?a.shape[u-2]:a.shape[u-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=P(f),y=P(m),b=Hi(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);M(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,p,h]:[y,h,p],v=wS({inputs:{x:s},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),w=wS({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],N=i?v.shape[2]:v.shape[1],S=o?w.shape[1]:w.shape[2],I=Math.max(g,y),T=n.data.get(v.dataId).values,C=n.data.get(w.dataId).values,$=re(v.shape),E=re(w.shape),[R,A,_]=i?[$[0],1,$[1]]:[$[0],$[1],1],[F,D,O]=o?[1,E[1],E[0]]:[E[1],1,E[0]],L=N*S,z=yi([I,N,S],v.dtype),B=z.values,W=n.blockSize;for(let M=0;M<I;M++){const e=M%g,t=M%y;for(let n=0;n<N;n+=W){const r=Math.min(n+W,N);for(let s=0;s<S;s+=W){const a=Math.min(s+W,S);for(let i=0;i<k;i+=W){const o=Math.min(i+W,k);for(let l=n;l<r;l++)for(let n=s;n<a;n++){let r=0;for(let s=i;s<o;s++){r+=T[e*R+l*A+s*_]*C[s*F+n*D+t*O]}B[M*L+(l*S+n)]+=r}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,z.dtype,z.values)}const SS={kernelName:Pe,backendName:"cpu",kernelFunc:NS};const IS={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=NS({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=xS({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=iS(n,d,c,o,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};function TS(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const CS={kernelName:we,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;LN(t,"abs");let r=new Float32Array(P(t.shape));return r=TS(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},$S=WN(ke,(e=>Math.acos(e))),ES={kernelName:ke,backendName:"cpu",kernelFunc:$S},RS=WN(Ne,(e=>Math.acosh(e))),AS={kernelName:Ne,backendName:"cpu",kernelFunc:RS};const _S={kernelName:Ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;LN(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=yi(r[0].shape,r[0].dtype),i=a.values;for(let o=0;o<r.length;o++){const e=s[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function FS(e,t,n,r,s){const a=t.length,i=P(t),o=re(t),l=re(s),u=K(n,P(s));for(let c=0;c<i;++c){const t=he(c,a,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];u[ce(n,a,l)]=e[c]}return u}function DS(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;LN(s,"transpose");const i=s.shape.length,o=new Array(i);for(let u=0;u<o.length;u++)o[u]=s.shape[a[u]];const l=FS(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const OS={kernelName:kr,backendName:"cpu",kernelFunc:DS};const MS={kernelName:Te,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;LN(s,"all");const o=j(a,s.shape);let l=o;const u=yu(l,s.shape.length);let c=s;null!=u&&(c=DS({inputs:{x:s},backend:n,attrs:{perm:u}}),l=xu(l.length,s.shape.length)),gu("all",l,c.shape.length);const[h,d]=fu(c.shape,l),p=P(d),f=oe(P(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const r=m[e+n];t=t&&r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=wS({inputs:{x:g},backend:n,attrs:{shape:mu(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const LS={kernelName:Ce,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;LN(s,"any");const o=j(a,s.shape);let l=o;const u=yu(l,s.shape.length);let c=s;null!=u&&(c=DS({inputs:{x:s},backend:n,attrs:{perm:u}}),l=xu(l.length,s.shape.length)),gu("any",l,c.shape.length);const[h,d]=fu(c.shape,l),p=P(d),f=oe(P(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const r=m[e+n];t=t||r}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=wS({inputs:{x:g},backend:n,attrs:{shape:mu(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const zS={kernelName:$e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;LN(s,"argMax");let i=j(a,s.shape);const o=yu(i,s.shape.length);let l=s;const u=[];null!=o&&(l=DS({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=xu(i.length,l.shape.length)),i=[i[0]],gu("argMax",i,l.shape.length);const[c,h]=fu(l.shape,i),d=oe(P(c),"int32"),p=P(h),f=n.data.get(l.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let r=0;r<p;++r){const s=f[e+r];s>t&&(t=s,n=r)}d[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}};const PS={kernelName:Ee,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;LN(s,"argMin");let i=j(a,s.shape);const o=yu(i,s.shape.length);let l=s;const u=[];null!=o&&(l=DS({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=xu(i.length,l.shape.length)),i=[i[0]],gu("argMin",i,l.shape.length);const[c,h]=fu(l.shape,i),d=oe(P(c),"int32"),p=P(h),f=n.data.get(l.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let r=0;r<p;++r){const s=f[e+r];s<t&&(t=s,n=r)}d[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},BS=WN(Re,(e=>Math.asin(e))),WS={kernelName:Re,backendName:"cpu",kernelFunc:BS},VS=WN(Ae,(e=>Math.asinh(e))),US={kernelName:Ae,backendName:"cpu",kernelFunc:VS},GS=WN(_e,(e=>Math.atan(e))),HS={kernelName:_e,backendName:"cpu",kernelFunc:GS},jS=XN(((e,t)=>Math.atan2(e,t))),qS=mS(De,jS),KS={kernelName:De,backendName:"cpu",kernelFunc:qS},XS=WN(Fe,(e=>Math.atanh(e))),YS={kernelName:Fe,backendName:"cpu",kernelFunc:XS};function QS(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=yi(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let v=0;v<s.batchSize;++v){const t=v*y,n=v*r[0];for(let m=0;m<s.inChannels;++m)for(let y=0;y<s.outHeight;++y){const v=y*i-d,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),N=t+y*b;for(let t=0;t<s.outWidth;++t){const i=t*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let y=f,b=0,v=0;for(let t=w;t<k;t+=l){const s=n+t*r[1];for(let t=c;t<d;t+=u){const n=e[s+t*r[2]+m];"max"===a&&n>y?y=n:"avg"===a&&(b+=n,v++)}if(isNaN(y))break}g[N+t*x+m]="avg"===a?b/v:y}}}return m}function ZS(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=yi(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=yi(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*o-p;let y=n;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=u){const i=t-n;for(let n=p;n<x;n+=c){const o=n-h,l=m.get(g,t,n,e);l>v&&(v=l,w=s?a?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:i*d+o)}}i.set(w,g,t,o,e)}}return i}function JS(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=yi(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],N=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let I=0;I<s.batchSize;++I){const t=I*w,n=I*r[0];for(let x=0;x<s.inChannels;++x)for(let w=0;w<s.outDepth;++w){const I=w*i-m;let T=I;for(;T<0;)T+=u;const C=Math.min(s.inDepth,d+I),$=t+w*k;for(let t=0;t<s.outHeight;++t){const i=t*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(s.inHeight,p+i),w=$+t*N;for(let t=0;t<s.outWidth;++t){const i=t*l-y;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),g=w+t*S;let k=b,N=0,I=0;for(let t=T;t<C;t+=u){const s=n+t*r[1];for(let t=d;t<m;t+=c){const n=s+t*r[2];for(let t=o;t<p;t+=h){const s=e[n+t*r[3]+x];if("max"===a&&s>k?k=s:"avg"===a&&(N+=s,I++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+x]="avg"===a?N/Math.max(I,1):k}}}}return x}const eI={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;LN(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;M(fl(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=sl(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&B(u.inShape,u.outShape))c=HN({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=re(s.shape),r=QS(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}};const tI={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;LN(s,"avgPool3d");const c=al(s.shape,a,i,1,o,l,u),h=JS(n.data.get(s.dataId).values,s.shape,s.dtype,re(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const nI={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;LN([s,a],"avgPool3DGrad");const c=al(a.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,N=v-1-c.padInfo.front,S=k-1-c.padInfo.left,I=w-1-c.padInfo.top,T=yi(a.shape,"float32"),C=1/(f*m*g),$=n.bufferSync(s);for(let E=0;E<c.batchSize;++E)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-N,a=n-I,i=r-S;let o=0;for(let t=0;t<v;t+=y){const n=(s+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=b){const r=(a+t)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=x){const s=(i+t)/p;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;o+=$.get(E,n,r,s,e)}}}T.set(o*C,E,t,n,r,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const rI={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;LN([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=sl(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=yi(i.shape,"float32"),k=1/(p*f),N=n.data.get(s.dataId).values,S=yi(s.shape,"float32",N);for(let I=0;I<c.batchSize;++I)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const r=t-v,s=n-x;let a=0;for(let t=0;t<y;t+=m){const n=(r+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const r=(s+t)/d;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;a+=S.get(I,n,r,e)}}w.set(a*k,I,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const sI={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:l}=t;M(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),M(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),M(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),LN([s,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,b=d.length,x=h.length;let v=0,w=0,k=0,N=0;for(let S=0;S<c.length;++S)m[S]=f[v++]+(c[S]-h[w++])*p[k++]/Math.sqrt(d[N++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),N>=b&&(N=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function aI(e,t,n,r,s){const a=Bo(r,t,n),i=P(n),o=re(r);if(a){const n=Wo(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l=yi(r,s,"string"===s?xf(e):e),u=yi(n,s);for(let c=0;c<u.size;++c){const e=u.indexToLoc(c),n=e.map(((e,n)=>e+t[n]));u.set(l.get(...n),...e)}return"string"===s?vf(u.values):u.values}function iI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;LN(s,"slice");const[o,l]=Vo(s,a,i);$o(s,o,l);const u=aI(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const oI={kernelName:qn,backendName:"cpu",kernelFunc:iI};const lI={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;LN([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=Sp(s.shape,a,o),u=Ip(l.length,a.length),c=Tp(s.shape,a,o),h=Cp(i,a.length),d=$p(c,i,a.length),p=wS({inputs:{x:s},backend:n,attrs:{shape:l}}),f=DS({inputs:{x:p},backend:n,attrs:{perm:u}}),m=wS({inputs:{x:f},backend:n,attrs:{shape:c}}),g=iI({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function uI(e,t,n,r,s){const a=P(r),i=oe(s,n);for(let o=0;o<e.length;o++){const n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(i[n]+=a>0?t[o]:1)}return i}function cI(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e.shape[0],a=e.shape[1],i=yi([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const hI={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=uI(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},dI=XN(((e,t)=>e&t)),pI=mS(Ve,dI),fI={kernelName:Ve,backendName:"cpu",kernelFunc:pI};const mI={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=Hi(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},gI=BN((e=>Math.ceil(e))),yI=VN(He,gI),bI={kernelName:He,backendName:"cpu",kernelFunc:yI},xI=WN(je,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),vI={kernelName:je,backendName:"cpu",kernelFunc:xI},wI={kernelName:Ke,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(P(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){const e=o[u],t=l[u];r[u]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")}};function kI(e,t,n,r){const s=X(n,P(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=P(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?xf(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}function NI(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const SI={kernelName:zt,backendName:"cpu",kernelFunc:NI};function II(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=j(s,t[0].shape)[0];fp(t.map((e=>e.shape)),a);let i=mp(t.map((e=>e.shape)),a);if(0===P(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>P(e.shape)>0));if(1===o.length)return HN({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>cS({inputs:{input:e},backend:n}))),t=o.map((e=>NI({inputs:{input:e},backend:n}))),r=II({inputs:e,backend:n,attrs:{axis:a}}),s=II({inputs:t,backend:n,attrs:{axis:a}}),i=oS({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=P(e.shape.slice(a));return wS({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=mp(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=kI(u,i,t[0].dtype,c),d=mp(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const TI={kernelName:Xe,backendName:"cpu",kernelFunc:II};function CI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;LN([s,a],"conv2d");const h=gl(l),d=il(s.shape,a.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new xs(d.outShape,s.dtype),w=re(s.shape),k=re(a.shape),N=w[0],S=x?w[1]:w[2],I=x?w[2]:1,T=x?1:w[1],C=v.strides[0],$=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,R=x?1:v.strides[1],A=n.data.get(s.dataId).values,_=n.data.get(a.dataId).values,F=v.values;for(let D=0;D<d.batchSize;++D){const e=D*N,t=D*C;for(let n=0;n<d.outHeight;++n){const r=t+n*$,s=n*d.strideHeight-b;for(let t=0;t<p;++t){const n=s+t*m;if(n<0||n>=d.inHeight)continue;const a=t*k[0],i=e+n*S;for(let e=0;e<d.outWidth;++e){const t=r+e*E,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const s=i+r*I;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=A[s+e*T];for(let e=0;e<d.outChannels;++e)F[t+e*R]+=n*_[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const $I={kernelName:Ye,backendName:"cpu",kernelFunc:CI};const EI={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;LN([s,a],"conv2dBackpropFilter");const h=gl(l),d=il(s.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new xs(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,N=new xs(s.shape,s.dtype,w),S=new xs(a.shape,a.dtype,k);for(let I=0;I<m;++I){const e=Math.max(0,Math.ceil((v-I)/p)),t=Math.min(d.outHeight,(d.inHeight+v-I)/p);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((x-n)/f)),s=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let a=0;a<d.inChannels;++a)for(let i=0;i<d.outChannels;++i){let o=0;for(let l=0;l<d.batchSize;++l)for(let u=e;u<t;++u){const e=I+u*p-v;for(let t=r;t<s;++t){const r=n+t*f-x;o+=y?N.get(l,e,r,a)*S.get(l,u,t,i):N.get(l,a,e,r)*S.get(l,i,u,t)}}b.set(o,I,n,a,i)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const RI={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;LN([s,a],"conv2dBackpropInput");const h=re(a.shape),d=re(s.shape);let p=gl(u);const f=il(i,a.shape,o,1,l,c,!1,p),m=new xs(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:N,filterWidth:S,inChannels:I,inHeight:T,inWidth:C,outChannels:$,outHeight:E,outWidth:R,strideHeight:A,strideWidth:_}=f;p=f.dataFormat;const F=N-1-f.padInfo.top,D=S-1-f.padInfo.left,O="channelsLast"===p,M=m.strides[0],L=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,P=O?1:m.strides[1],B=d[0],W=O?d[1]:d[2],V=O?d[2]:1,U=O?1:d[1];for(let G=0;G<k;++G)for(let e=0;e<I;++e)for(let t=0;t<T;++t){const n=t-F,r=Math.max(0,Math.ceil(n/A)),s=Math.min(E,(N+n)/A);for(let a=0;a<C;++a){const i=a-D,o=Math.max(0,Math.ceil(i/_)),l=Math.min(R,(S+i)/_);let u=0;for(let t=r;t<s;++t){const r=t*A-n;for(let n=o;n<l;++n){const s=B*G+W*t+V*n,a=x*(N-1-r)+v*(S-1-(n*_-i))+w*e;for(let e=0;e<$;++e){u+=y[s+U*e]*b[a+e]}}}g[M*G+L*t+z*a+P*e]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const AI={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r;LN([s,a],"conv3d");const u=ol(s.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new xs(u.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,N=v.values,S=re(s.shape),I=re(a.shape);for(let T=0;T<u.batchSize;++T){const e=T*S[0],t=T*v.strides[0];for(let n=0;n<u.outDepth;++n){const r=t+n*v.strides[1],s=n*u.strideDepth-y;for(let t=0;t<c;++t){const n=s+t*p;if(n<0||n>=u.inDepth)continue;const a=t*I[0],i=e+n*S[1];for(let e=0;e<u.outHeight;++e){const t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=a+e*I[1],o=i+r*S[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=u.inWidth)continue;const a=s+e*I[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)N[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const _I={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r;LN([s,a],"conv3dBackpropFilterV2");const u=re(s.shape),c=re(a.shape),h=ol(s.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new xs(h.filterShape,"float32"),x=b.values,[v,w,k,N]=b.strides,S=n.data.get(a.dataId).values,[I,T,C,$]=c,E=n.data.get(s.dataId).values,[R,A,_,F]=u,D=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let L=0;L<m;++L){const e=Math.max(0,Math.ceil((D-L)/d)),t=Math.min(h.outDepth,(h.inDepth+D-L)/d),n=L*v;for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((M-r)/p)),a=Math.min(h.outHeight,(h.inHeight+M-r)/p),i=r*w+n;for(let n=0;n<y;++n){const o=Math.max(0,Math.ceil((O-n)/f)),l=Math.min(h.outWidth,(h.inWidth+O-n)/f),u=n*k+i;for(let i=0;i<h.inChannels;++i){const c=i*N+u;for(let u=0;u<h.outChannels;++u){let m=0;for(let c=0;c<h.batchSize;++c){const h=c*R,g=c*I;for(let c=e;c<t;++c){const e=(L+c*d-D)*A+h,t=c*T+g;for(let c=s;c<a;++c){const s=(r+c*p-M)*_+e,a=c*C+t;for(let e=o;e<l;++e){const t=e*$+a;m+=E[(n+e*f-O)*F+s+i]*S[t+u]}}}}x[c+u]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const FI={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r;LN([s],"conv3dBackpropInputV2");const u=re(s.shape),c=re(a.shape),h=ol(l,a.shape,o,1,i),d=new xs(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(s.dataId).values,[x,v,w,k]=u,N=n.data.get(a.dataId).values,[S,I,T,C]=c,{batchSize:$,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:_,inDepth:F,inHeight:D,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=E-1-h.padInfo.front,G=R-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let j=0;j<$;++j)for(let e=0;e<_;++e)for(let t=0;t<F;++t){const n=t-U,r=Math.max(0,Math.ceil(n/B)),s=Math.min(L,(E+n)/B);for(let a=0;a<D;++a){const i=a-G,o=Math.max(0,Math.ceil(i/W)),l=Math.min(z,(R+i)/W);for(let u=0;u<O;++u){const c=u-H,h=Math.max(0,Math.ceil(c/V)),d=Math.min(P,(A+c)/V);let $=0;for(let t=r;t<s;++t){const r=t*B-n;for(let n=o;n<l;++n){const s=n*W-i;for(let a=h;a<d;++a){const i=x*j+v*t+w*n+k*a,o=S*(E-1-r)+I*(R-1-s)+T*(A-1-(a*V-c))+C*e;for(let e=0;e<M;++e){$+=b[i+e]*N[o+e]}}}}p[f*j+m*t+g*a+y*u+e]=$}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},DI=WN(nt,(e=>Math.cos(e))),OI={kernelName:nt,backendName:"cpu",kernelFunc:DI},MI=WN(rt,(e=>Math.cosh(e))),LI={kernelName:rt,backendName:"cpu",kernelFunc:MI};const zI={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,f=a.shape[0],[m,g]=o,y=yi([f,m,g,p],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(s.dataId).values,w=re(s.shape),k=re(y.shape);for(let N=0;N<f;N++){const e=4*N,t=b[e],n=b[e+1],r=b[e+2],s=b[e+3],a=x[N];if(a>=c)continue;const i=m>1?(r-t)*(h-1)/(m-1):0,o=g>1?(s-n)*(d-1)/(g-1):0;for(let c=0;c<m;c++){const e=m>1?t*(h-1)+c*i:.5*(t+r)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+N*k[0];y.values[n]=u}else if("bilinear"===l){const t=Math.floor(e),r=Math.ceil(e),i=e-t;for(let e=0;e<g;e++){const l=g>1?n*(d-1)+e*o:.5*(n+s)*(d-1);if(l<0||l>d-1){for(let t=0;t<p;t++){const n=t+e*k[2]+c*k[1]+N*k[0];y.values[n]=u}continue}const h=Math.floor(l),f=Math.ceil(l),m=l-h;for(let n=0;n<p;n++){let s=n+h*w[2]+t*w[1]+a*w[0];const o=v[s];s=n+f*w[2]+t*w[1]+a*w[0];const l=v[s];s=n+h*w[2]+r*w[1]+a*w[0];const u=v[s];s=n+f*w[2]+r*w[1]+a*w[0];const d=o+(l-o)*m,p=u+(v[s]-u)*m;s=n+e*k[2]+c*k[1]+N*k[0],y.values[s]=d+(p-d)*i}}}else for(let t=0;t<g;++t){const r=g>1?n*(d-1)+t*o:.5*(n+s)*(d-1);if(r<0||r>d-1){for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+N*k[0];y.values[n]=u}continue}const i=Math.round(r),l=Math.round(e);for(let e=0;e<p;e++){const n=e+i*w[2]+l*w[1]+a*w[0],r=e+t*k[2]+c*k[1]+N*k[0];y.values[r]=v[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const PI={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;LN(s,"cumprod");const l=yu([a],s.shape.length);let u=s;null!=l&&(u=DS({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=xu(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=_s(u.dtype,"int32"),d=ie(P(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=i?1:p[t];else{const n=m(y,e-1);d[t]=i?p[n]*d[n]:p[t]*d[n]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=DS({inputs:{x:g},backend:n,attrs:{perm:bu(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};const BI={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;LN(s,"cumsum");const l=yu([a],s.shape.length);let u=s;null!=l&&(u=DS({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=xu(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=_s(u.dtype,"int32"),d=oe(P(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=i?0:p[t];else{const n=m(y,e-1);d[t]=i?p[n]+d[n]:p[t]+d[n]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=DS({inputs:{x:g},backend:n,attrs:{perm:bu(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};const WI={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=uI(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=cI(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};const VI={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;M("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*a,d=u*a,p=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let y=0;y<o;++y)for(let e=0;e<h;++e){const t=Math.floor(e/a),n=e%a;for(let e=0;e<d;++e){const r=Math.floor(e/a),s=(n*a+e%a)*p;for(let e=0;e<p;++e){const n=e+s+c*(r+u*(t+l*y));m[g++]=f[n]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,m)}};function UI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;LN([s,a],"depthwiseConv2DNative");const c=re(s.shape),h=re(a.shape);let d=l;null==d&&(d=[1,1]),M(fl(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=il(s.shape,a.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,v=b.top,w=p.outChannels/p.inChannels,k=new xs(p.outShape,s.dtype),N=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,I=k.values;for(let T=0;T<p.batchSize;++T){const e=T*c[0],t=T*k.strides[0];for(let n=0;n<p.outHeight;++n){const r=t+n*k.strides[1],s=n*p.strideHeight-v;for(let t=0;t<f;++t){const n=s+t*g;if(n<0||n>=p.inHeight)continue;const a=t*h[0],i=e+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const s=a+e*h[1],o=i+r*p.inChannels;let l=t,u=s;for(let e=0;e<p.inChannels;++e){const t=N[o+e];for(let e=0;e<w;++e)I[l+e]+=t*S[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const GI={kernelName:ut,backendName:"cpu",kernelFunc:UI};const HI={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;LN([s,a],"depthwiseConv2dNativeBackpropFilter");const h=il(s.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new xs(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new xs(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,N=new xs(a.shape,a.dtype,k);for(let S=0;S<f;++S){const e=Math.max(0,Math.ceil((b-S)/d)),t=Math.min(h.outHeight,(h.inHeight+b-S)/d);for(let n=0;n<m;++n){const r=Math.max(0,Math.ceil((y-n)/p)),s=Math.min(h.outWidth,(h.inWidth+y-n)/p);for(let a=0;a<h.outChannels;++a){const i=Math.trunc(a/x),o=a%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let o=e;o<t;++o){const e=S+o*d-b;for(let t=r;t<s;++t){const r=n+t*p-y;l+=w.get(u,e,r,i)*N.get(u,o,t,a)}}g.set(l,S,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const jI={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;LN([s,a],"depthwiseConv2DNativeBackpropInput");const h=re(s.shape),d=re(a.shape),p=il(c,a.shape,i,o,l,u,!0),f=new xs(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=h,N=n.data.get(a.dataId).values,[S,I,T]=d,{batchSize:C,filterHeight:$,filterWidth:E,inChannels:R,inHeight:A,inWidth:_,outChannels:F,outHeight:D,outWidth:O,strideHeight:M,strideWidth:L}=p,z=$-1-p.padInfo.top,P=E-1-p.padInfo.left,B=F/R;for(let W=0;W<C;++W)for(let e=0;e<R;++e)for(let t=0;t<A;++t){const n=t-z,r=Math.max(0,Math.ceil(n/M)),s=Math.min(D,($+n)/M);for(let a=0;a<_;++a){const i=a-P,o=Math.max(0,Math.ceil(i/L)),l=Math.min(O,(E+i)/L);let u=0;for(let t=r;t<s;++t){const r=t*M-n;for(let n=o;n<l;++n){const s=v*W+w*t+k*n,a=S*($-1-r)+I*(E-1-(n*L-i))+T*e;for(let t=0;t<B;++t){u+=x[s+(e*B+t)]*N[a+t]}}}m[g*W+y*t+b*a+e]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const qI={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=P(r.shape),a=n.data.get(r.dataId).values,i=yi([s,s],r.dtype),o=i.values;for(let u=0;u<a.length;u++)o[u*s+u]=a[u];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},KI={kernelName:pt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=n,c=u.data.get(s.dataId).values,h=s.shape.length,d=u.data.get(a.dataId).values,p=a.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:N,filterWidth:S,dilationHeight:I,dilationWidth:T,outShape:C}=rl(s.shape,a.shape,i,o,"NHWC",l),$=P(C),E=C.length,R=X(s.dtype,$);for(let A=0;A<f;++A)for(let e=0;e<b;++e){const t=e*w-v.top;for(let n=0;n<x;++n){const r=n*k-v.left;for(let i=0;i<y;++i){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<N;++e){const n=t+e*I;if(n>=0&&n<m)for(let t=0;t<S;++t){const l=r+t*T;if(l>=0&&l<g){const r=ce([A,n,l,i],h,re(s.shape)),u=ce([e,t,i],p,re(a.shape)),f=c[r]+d[u];f>o&&(o=f)}}}R[ce([A,e,n,i],E,re(C))]=o}}}return{dataId:u.write(as(R,s.dtype),C,s.dtype),shape:C,dtype:s.dtype}}},XI={kernelName:mt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,filter:a,dy:i}=t,{strides:o,pad:l,dilations:u}=r,c=n,h=ae(s.shape,c.data.get(s.dataId).values),d=ae(a.shape,c.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:N,dilationHeight:S,dilationWidth:I,outShape:T}=rl(s.shape,a.shape,o,l,"NHWC",u);M(i.rank===T.length,(()=>`Error in ${mt}, dy must have the same rank as output ${T.length}, but got ${i.rank}`));const C=ae(T,c.data.get(i.dataId).values),$=le(a.shape,a.dtype);for(let E=0;E<p;++E)for(let e=0;e<y;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const r=n*w-x.left;for(let s=0;s<g;++s){let a=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let e=0;e<k;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<N;++t){const l=r+t*I;if(l>=0&&l<m){const r=h[E][n][l][s]+d[e][t][s];r>a&&(a=r,i=e,o=t)}}}$[i][o][s]+=C[E][e][n][s]}}}return{dataId:c.write(as($,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},YI={kernelName:ft,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,filter:a,dy:i}=t,{strides:o,pad:l,dilations:u}=r,c=n,h=ae(s.shape,c.data.get(s.dataId).values),d=ae(a.shape,c.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:N,dilationHeight:S,dilationWidth:I,outShape:T}=rl(s.shape,a.shape,o,l,"NHWC",u);M(i.rank===T.length,(()=>`Error in ${ft}, dy must have the same rank as output ${T.length}, but got ${i.rank}`));const C=ae(T,c.data.get(i.dataId).values),$=le(s.shape,s.dtype);for(let E=0;E<p;++E)for(let e=0;e<y;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const r=n*w-x.left;for(let s=0;s<g;++s){let a=Number.MIN_SAFE_INTEGER,i=t<0?0:t,o=r<0?0:r;for(let e=0;e<k;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<N;++t){const l=r+t*I;if(l>=0&&l<m){const r=h[E][n][l][s]+d[e][t][s];r>a&&(a=r,i=n,o=l)}}}$[E][i][o][s]+=C[E][e][n][s]}}}return{dataId:c.write(as($,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};const QI={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:a,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=(null===l||void 0===l?void 0:l.alpha)||1,c=(null===o||void 0===o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=a.getContext(c,(null===o||void 0===o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],m=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,y=new Uint8ClampedArray(p*d*4);for(let x=0;x<d*p;++x){const e=[0,0,0,255*u];for(let n=0;n<f;n++){const t=m[x*f+n];if("float32"===s.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===s.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*x;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}a.width=p,a.height=d;const b=new ImageData(y,p,d);return h.putImageData(b,0,0),s}},ZI=XN(((e,t)=>e*t)),JI=gS(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),eT=mS(pn,ZI,JI),tT={kernelName:pn,backendName:"cpu",kernelFunc:eT};function nT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;LN(s,"sum"),o="bool"===s.dtype?pS({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):HN({inputs:{x:s},backend:n});const l=o.shape.length,u=j(a,o.shape),c=yu(u,l);let h=u,d=o;null!=c&&(d=DS({inputs:{x:o},backend:n,attrs:{perm:c}}),h=xu(h.length,l)),gu("sum",h,d.shape.length);const[p,f]=fu(d.shape,h);let m=uS(n,p,_s(d.dtype,"int32"));const g=P(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let x=0;x<y.length;++x){const e=x*g;let t=0;for(let n=0;n<g;++n)t+=b[e+n];y[x]=t}if(i){const e=m;m=wS({inputs:{x:m},backend:n,attrs:{shape:mu(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const rT={kernelName:er,backendName:"cpu",kernelFunc:nT};const sT={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Yp(s,a.length);Zp(i.length,l,a);const{path:u,steps:c}=Jp(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:r}=Qp(p,l[e]);let s;ef(t)?s=a[e]:(s=DS({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);B(s.shape,i)||(s=wS({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=eT({inputs:{a:s,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=nT({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}};const aT={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;LN([r,s],"eluGrad");const a=new Float32Array(P(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let l=0;l<i.length;++l){const e=i[l];a[l]=e>=0?o[l]:o[l]*(e+1)}return n.makeTensorInfo(s.shape,"float32",a)}},iT=XN(((e,t)=>e===t?1:0)),oT=mS(kt,iT,null,"bool"),lT={kernelName:kt,backendName:"cpu",kernelFunc:oT},uT=_p,cT=Fp,hT=Dp,dT=Op,pT=Mp,fT=Lp,mT=WN(wt,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+uT*n);return t*(1-((((fT*r+pT)*r+dT)*r+hT)*r+cT)*r*Math.exp(-n*n))})),gT={kernelName:wt,backendName:"cpu",kernelFunc:mT},yT=BN((e=>Math.exp(e))),bT=VN(Nt,yT,"float32"),xT={kernelName:Nt,backendName:"cpu",kernelFunc:bT};function vT(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let l=a;return a<0&&(M(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),wS({inputs:{x:s},backend:n,attrs:{shape:o}})}const wT={kernelName:St,backendName:"cpu",kernelFunc:vT},kT=BN((e=>Math.expm1(e))),NT=VN(It,kT),ST={kernelName:It,backendName:"cpu",kernelFunc:NT},IT=XN(((e,t)=>e/t)),TT=mS(yt,IT),CT={kernelName:yt,backendName:"cpu",kernelFunc:TT},$T=XN(((e,t)=>e-t)),ET=gS(((e,t,n,r)=>({real:e-n,imag:t-r}))),RT=mS(gr,$T,ET),AT={kernelName:gr,backendName:"cpu",kernelFunc:RT};function _T(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[s,a],c=P(u),h=K("float32",c),d=K("float32",c);for(let g=0;g<s;g++){const e=iI({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,a]}}),r=iI({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,a]}}),s=oS({inputs:{real:e,imag:r},backend:n}),{real:i,imag:u}=FT(s,t,n),c=zp(i,u);for(let t=0;t<a;t++){const e=Vp(c,t);h[g*a+t]=e.real,d[g*a+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=oS({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function FT(e,t,n){const r=P(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0===((o=r)&o-1)){const s=DT(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",ss(r,"float32")),i=HN({inputs:{x:a},backend:n}),l=CT.kernelFunc({inputs:{a:e,b:a},backend:n}),u=CT.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=Hp(s*r,t,n),l=Vp(e,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),Up(r,a,i,s)}return r}(zp(a,i),r,t);return Pp(e)}var o}function DT(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=zp(e,t),i=n/2,o=Bp(a),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=oS({inputs:{real:h,imag:d},backend:s}),f=Wp(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),v=oS({inputs:{real:b,imag:x},backend:s}),w=DT(l,u,i,r,s),k=w.real,N=w.imag,S=[k.length],I=s.makeTensorInfo(S,"float32",k),T=s.makeTensorInfo(S,"float32",N),C=oS({inputs:{real:I,imag:T},backend:s}),$=DT(m,g,i,r,s),E=$.real,R=$.imag,A=[E.length],_=s.makeTensorInfo(A,"float32",E),F=s.makeTensorInfo(A,"float32",R),D=oS({inputs:{real:_,imag:F},backend:s}),O=Gp(n,r),M=[O.real.length],L=s.makeTensorInfo(M,"float32",O.real),z=s.makeTensorInfo(M,"float32",O.imag),P=oS({inputs:{real:L,imag:z},backend:s}),B=eT({inputs:{a:P,b:D},backend:s}),W=xS({inputs:{a:C,b:B},backend:s}),V=RT({inputs:{a:C,b:B},backend:s}),U=cS({inputs:{input:W},backend:s}),G=cS({inputs:{input:V},backend:s}),H=NI({inputs:{input:W},backend:s}),j=NI({inputs:{input:V},backend:s}),q=II({inputs:[U,G],backend:s,attrs:{axis:0}}),K=II({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const OT={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=P(r.shape),a=r.shape[r.shape.length-1],i=wS({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=_T(i,!1,n),l=wS({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function MT(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||ee(s),o=X(i,P(r));return function(e,t){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const LT={kernelName:Ct,backendName:"cpu",kernelFunc:MT};const zT={kernelName:$t,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,a=r,i=K(s.dtype,P(s.shape)),[o,l,u,c]=s.shape,h=a.data.get(s.dataId).values;for(let d=0;d<o;d++){const e=d*u*l*c;for(let t=0;t<l;t++){const n=t*(u*c);for(let t=0;t<u;t++){const r=t*c;for(let s=0;s<c;s++){const a=Math.round(u-t-1),o=e+n+r+s;let l=h[o];if(a>=0&&a<u){l=h[e+n+a*c+s]}i[o]=l}}}}return{dataId:a.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},PT=BN((e=>Math.floor(e))),BT=VN(Et,PT),WT={kernelName:Et,backendName:"cpu",kernelFunc:BT},VT=XN(((e,t)=>Math.floor(e/t))),UT=mS(Rt,VT,null,"int32"),GT={kernelName:Rt,backendName:"cpu",kernelFunc:UT};const HT={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=CI({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=wS({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=xS({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=xS({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=wS({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=iS(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=iS(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}};const jT={kernelName:_r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=UI({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=xS({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=iS(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function qT(e,t,n,r,s,a,i,o,l){const u=yi([r,a],n);for(let c=0;c<r;c++){const n=[];let r=0;for(let t=0;t<s;t++){const a=e[c*s+t];r+=a*i[t],n.push(a)}if(r<0||r>=l/a)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<a;e++)u.values[c*a+e]=t.get(...t.indexToLoc(r*a+e))}return u}const KT={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=P(r.shape),i=s.shape,o=i[i.length-1],[l,u,c,h]=Ep(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=qT(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,u,o,c,h,r.shape,a);return n.makeTensorInfo(l,r.dtype,d.values)}};function XT(e,t,n){const r=yi(n,e.dtype);for(let s=0;s<r.size;++s){const n=r.indexToLoc(s).slice(),a=n[0],i=n[2],o=t.locToIndex([a,i]);n[2]=t.values[o];const l=e.locToIndex(n);0<=l&&l<e.values.length&&(r.values[s]=e.values[l])}return r}const YT={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;LN([s,a],"gatherV2");const l=j(i,s.shape)[0],u=n.data.get(a.dataId).values,c=s.shape[l];for(let x=0;x<u.length;++x){const e=u[x];M(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=P(a.shape),p=bf(s,a,l,h),f=wS({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=wS({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=XT(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},QT=XN(((e,t)=>e>t?1:0)),ZT=mS(Dt,QT,null,"bool"),JT={kernelName:Dt,backendName:"cpu",kernelFunc:ZT},eC=XN(((e,t)=>e>=t?1:0)),tC=mS(Ot,eC,null,"bool"),nC={kernelName:Ot,backendName:"cpu",kernelFunc:tC};const rC={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=P(r.shape),a=r.shape[r.shape.length-1],i=wS({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=_T(i,!0,n),l=wS({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},sC=WN(Pt,(e=>Number.isFinite(e)?1:0),"bool"),aC={kernelName:Pt,backendName:"cpu",kernelFunc:sC},iC=WN(Bt,(e=>Math.abs(e)===1/0?1:0),"bool"),oC={kernelName:Bt,backendName:"cpu",kernelFunc:iC},lC=WN(Wt,(e=>Number.isNaN(e)?1:0),"bool"),uC={kernelName:Wt,backendName:"cpu",kernelFunc:lC},cC=XN(((e,t)=>e<t?1:0)),hC=mS(Ut,cC,null,"bool"),dC={kernelName:Ut,backendName:"cpu",kernelFunc:hC},pC=XN(((e,t)=>e<=t?1:0)),fC=mS(Gt,pC,null,"bool"),mC={kernelName:Gt,backendName:"cpu",kernelFunc:fC};function gC(e,t,n){const r=(t-e)/(n-1),s=oe(n,"float32");s[0]=e;for(let a=1;a<s.length;a++)s[a]=s[a-1]+r;return s}const yC={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=gC(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},bC=BN((e=>Math.log(e))),xC=VN(jt,bC),vC={kernelName:jt,backendName:"cpu",kernelFunc:xC},wC=WN(qt,(e=>Math.log1p(e))),kC={kernelName:qt,backendName:"cpu",kernelFunc:wC},NC=XN(((e,t)=>e&&t)),SC=mS(Kt,NC,null,"bool"),IC={kernelName:Kt,backendName:"cpu",kernelFunc:SC},TC=WN(Xt,(e=>e?0:1),"bool"),CC={kernelName:Xt,backendName:"cpu",kernelFunc:TC},$C=XN(((e,t)=>e||t)),EC=mS(Yt,$C,null,"bool"),RC={kernelName:Yt,backendName:"cpu",kernelFunc:EC};const AC={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r;LN(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=P(s.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let m=0;m<d;m++){const e=f(m),t=h[m]*Math.pow(i+o*e,-l);p[m]=t}return n.makeTensorInfo(s.shape,s.dtype,p)}};const _C={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;LN(i,"LRNGrad");const h=P(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const e=b%d,t=b-e+Math.max(0,e-o),n=b-e+Math.min(d,e+o+1);let r=0;for(let s=t;s<n;s++)r+=Math.pow(f[s],2);r=u*r+l;for(let s=t;s<n;s++){let e=-2*u*c*f[s]*m[b]/r;b===s&&(e+=Math.pow(r,-c)),e*=p[b],g[s]+=e}}return n.makeTensorInfo(i.shape,s.dtype,g)}};function FC(e,t,n,r){const s=K(r,P(n));for(let a=0;a<s.length;++a){const n=a*t;let r=e[n];for(let s=0;s<t;++s){const t=e[n+s];(Number.isNaN(t)||t>r)&&(r=t)}s[a]=r}return s}function DC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let l=s.shape;const u=l.length,c=j(a,l);let h=c;const d=yu(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=FS(p,l,s.dtype,d,e),h=xu(h.length,u),l=e}LN(s,"max"),gu("max",h,u);const[f,m]=fu(l,h),g=FC(p,P(m),f,s.dtype),y=o.write(g,f,s.dtype);let b=f;if(i){b=mu(f,c)}return{dataId:y,shape:b,dtype:s.dtype}}const OC={kernelName:Jt,backendName:"cpu",kernelFunc:DC},MC=XN(((e,t)=>Math.max(e,t))),LC=mS(en,MC),zC={kernelName:en,backendName:"cpu",kernelFunc:LC};const PC={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;LN(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;M(fl(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=sl(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&B(u.inShape,u.outShape))c=HN({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=re(s.shape),r=QS(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}};const BC={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;LN(s,"maxPool3d");const c=al(s.shape,a,i,1,o,l,u),h=JS(n.data.get(s.dataId).values,s.shape,s.dtype,re(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const WC={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;LN([s,a],"maxPool3DGrad");const c=al(a.shape,i,o,1,l,u),h=function(e,t){const n=yi(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=l;const N=Math.min(t.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,I=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let r=d;r<w;r+=o){const s=r-u;for(let a=k;a<N;a+=l){const i=a-p,o=e.get(m,t,r,a,g);o>=S&&(S=o,I=n*c*h+s*c+i)}}}n.set(I,m,y,r,s,g)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=v-1-c.padInfo.left,N=x-1-c.padInfo.top,S=yi(a.shape,"float32"),I=n.bufferSync(s);for(let T=0;T<c.batchSize;++T)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-w,a=n-N,i=r-k;let o=0;for(let t=0;t<b;t+=m){const n=(s+t)/d;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let r=0;r<x;r+=g){const s=(a+r)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let a=0;a<v;a+=y){const l=(i+a)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const u=b*x*v-1-h.get(T,n,s,l,e)===t*x*v+r*v+a?1:0;if(0===u)continue;o+=I.get(T,n,s,l,e)*u}}}S.set(o,T,t,n,r,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const VC={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;LN([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=sl(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=yi(d.outShape,o.dtype,ZS(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,N=yi(o.shape,"float32"),S=n.data.get(s.dataId).values,I=yi(s.shape,"float32",S);for(let T=0;T<d.batchSize;++T)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const r=t-k,s=n-w;let a=0;for(let t=0;t<x;t+=y){const n=(r+t)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let r=0;r<v;r+=b){const i=(s+r)/g;if(i<0||i>=d.outWidth||Math.floor(i)!==i)continue;const o=x*v-1-f.get(T,n,i,e)===t*v+r?1:0;if(0===o)continue;a+=I.get(T,n,i,e)*o}}N.set(a,T,t,n,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const UC={kernelName:an,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=n,u=r;LN(s,"MaxPoolWithArgmax");const c=u.data.get(s.dataId).values,h=sl(s.shape,a,i,[1,1],o),[d,p]=function(e,t,n,r,s){const a=QS(e,0,n,re(t),s,"max"),i=ZS(e,t,n,s,!0,r);return[a.values,i.values]}(c,s.shape,s.dtype,l,h),f=u.write(d,h.outShape,s.dtype),m=u.write(p,h.outShape,s.dtype);return[{dataId:f,shape:h.outShape,dtype:s.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};const GC={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=j(a,s.shape),l=P(fu(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=pS({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=TT({inputs:{a:h,b:c},backend:n});u.push(d);const p=nT({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const HC={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;LN(s,"min");const o=j(a,s.shape);let l=o;const u=yu(l,s.shape.length);let c=s;null!=u&&(c=DS({inputs:{x:s},backend:n,attrs:{perm:u}}),l=xu(l.length,s.shape.length)),gu("min",l,c.shape.length);const[h,d]=fu(c.shape,l),p=P(d),f=oe(P(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const r=m[e+n];(Number.isNaN(r)||r<t)&&(t=r)}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=wS({inputs:{x:g},backend:n,attrs:{shape:mu(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},jC=XN(((e,t)=>Math.min(e,t))),qC=mS(un,jC),KC={kernelName:un,backendName:"cpu",kernelFunc:qC};const XC={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;LN(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=re(s.shape),f=P(o),m=o.length,g=re(o),y=K(s.dtype,f);for(let b=0;b<f;b++){let e=he(b,m,g);for(let n=0;n<m;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-c:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+c);e=e.map(((e,t)=>e-l[t]));const t=ce(e,d,p);y[b]=h[t]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},YC=XN(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),QC=mS(hn,YC),ZC={kernelName:hn,backendName:"cpu",kernelFunc:QC};function JC(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=j([o],s.shape),u=DC({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=mu(u.shape,l),h=wS({inputs:{x:u},backend:n,attrs:{shape:c}}),d=RT({inputs:{a:s,b:h},backend:n}),p=bT({inputs:{x:d},backend:n}),f=nT({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=wS({inputs:{x:f},backend:n,attrs:{shape:c}}),g=TT({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const e$={kernelName:rr,backendName:"cpu",kernelFunc:JC};const t$={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;LN(s,"multinomial");const l=o?s:JC({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,a],p=oe(P(d),"int32");for(let f=0;f<u;++f){const e=f*c,t=new Float32Array(c-1);t[0]=h[e];for(let s=1;s<t.length;++s)t[s]=t[s-1]+h[e+s];const n=Dc.alea(i.toString()),r=f*a;for(let s=0;s<a;++s){const e=n();p[r+s]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[r+s]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function n$(e,t,n){const r=ss(-1,n);return ZI([],t,r,e,n)}const r$={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;LN(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=n$(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},s$=vd;const a$={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;LN(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=s$(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},i$=wd;const o$={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;LN(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=i$(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},l$=kd;const u$={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;LN(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=l$(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},c$=XN(((e,t)=>e!==t?1:0)),h$=mS(mn,c$,null,"bool"),d$={kernelName:mn,backendName:"cpu",kernelFunc:h$};const p$={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r;LN(s,"oneHot");const u=P(s.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(s.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<i&&(c[d*i+h[d]]=o);return n.makeTensorInfo([...s.shape,i],a,c)}};function f$(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=cS({inputs:{input:r},backend:n}),t=f$({inputs:{x:e},backend:n}),s=NI({inputs:{input:r},backend:n}),a=f$({inputs:{x:s},backend:n}),i=oS({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return MT({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const m$={kernelName:Tr,backendName:"cpu",kernelFunc:f$};const g$={kernelName:xn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=cS({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=NI({inputs:{input:s},backend:r}),i=f$({inputs:{x:a},backend:r}),o=oS({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return MT({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function y$(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return vT({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{L(a,e.shape,"All tensors passed to stack must have matching shapes"),M(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=II({inputs:t.map((e=>{const t=vT({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const b$={kernelName:wn,backendName:"cpu",kernelFunc:y$};const x$={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;LN(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(s.dataId).values,c=P(s.shape),h=s.shape.length,d=re(s.shape),p=P(o),f=o.length,m=re(o),g=K(s.dtype,p);0!==i&&g.fill(i);for(let y=0;y<c;y++){g[ce(he(y,h,d).map(((e,t)=>e+l[t])),f,m)]=u[y]}return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},v$=XN(((e,t)=>Math.pow(e,t))),w$=mS(Nn,v$),k$={kernelName:Nn,backendName:"cpu",kernelFunc:w$};function N$(e,t,n,r){const[s,a]=fu(e,r),i=_s(t,"int32"),o=oe(P(s),i),l=P(a);for(let u=0;u<o.length;++u){const e=u*l;let t=1;for(let r=0;r<l;++r)t*=n[e+r];o[u]=t}return{outVals:o,outShape:s,outDtype:i}}const S$={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;LN(s,"prod");const o=s.shape.length,l=j(a,s.shape),u=yu(l,o);let c=l,h=s;const d=[];null!=u&&(h=DS({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=xu(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=N$(h.shape,h.dtype,p,c);let y=m;return i&&(y=mu(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function I$(e,t,n,r){const s=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];const e=t[u+1];for(let t=1;t<l+1;++t)o[u].push(t*e)}for(let u=0;u<e.length;++u){let r=e[u],i=e[u]+1;for(let e=0;e<n.length;++e){const s=n[e],a=e+t.length-1;if(a>=0){const e=o[a],t=e[e.length-1]-s[r];for(let n=r;n<i;++n)o[a].push(s[n+1]+t)}r=s[r],i=s[i]}i!==r&&(s.push([r,i]),a+=i-r)}return{outSplits:o,valueSlices:s,numValues:a}}function T$(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function C$(e,t,n,r,s){const a=t.slice();a[0]=s;const i=X(n,P(a)),o=e.length;return function(e,t,n,r,s,a){const i=T$(t,2)[1],o=T$(a,2)[1];let l=0;for(const u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<r;++n)s[l*o+n]=e[t*i+n];++l}}(e,t,r,0===o?0:o/t[0],i,a),[i,a]}function $$(e,t,n,r,s,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=he(r,t.length,re(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:u,valueSlices:c,numValues:h}=I$(a,i,e,l),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=X("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(u),p=C$(n,r,s,c,h);return[d,p[0],p[1]]}const E$={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.data.get(e.dataId).values)),u=s.map((e=>e.shape)),c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,[d,p,f]=$$(l,u,c,a.shape,a.dtype,h,i.shape),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}},R$=2147483647;function A$(e,t,n,r,s,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===s.length,u=0===i.length,c=[];o||c.push(t[0]),l||c.push(s[0]),u||c.push(i[0]);for(let m=1;m<c.length;++m)if(c[m]!==c[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=X("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const t=o?e[0]:e[m],n=l?r[0]:r[m],s=u?a[0]:a[m];if(0===s)throw new Error("Requires delta != 0");let i;if(s>0&&n<t||s<0&&n>t)i=0;else if(i=Math.ceil(Math.abs((n-t)/s)),i>R$)throw new Error(`Requires ((limit - start) / delta) <= ${R$}`);d[m+1]=d[m]+i}const p=X(n,d[h]);let f=0;for(let m=0;m<h;++m){const t=d[m+1]-d[m];let n=o?e[0]:e[m];const r=u?a[0]:a[m];for(let e=0;e<t;++e)p[f++]=n,n+=r}return[d,p]}const _$={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=A$(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};var F$=gp;class D${constructor(e,t,n,r,s,a,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=bp(u),this.raggedRank=xp(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===F$.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===F$.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case F$.VALUE_ROWIDS:return D$.getMaxWidthValueRowID(t);case F$.ROW_SPLITS:return D$.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${F$[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return M$(e,n)}calculateOutputSize(e){const t=this.valuesShape;vp(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=yp(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let s=1;s<=this.raggedRank;++s)r[s]<0&&(r[s]=this.getMaxWidth(s));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let i=0;i<r;++i,a+=t)s.push(a);for(let i=r;i<e;++i)s.push(-1);return M(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let i=0;i<s-1;++i){const s=e[i+1]-e[i];let o=Math.min(r,s),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)a.push(l),l+=n;for(let e=0;e<s-o;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];a.push(l);for(let u=1;u<s;++u){const s=e[u];if(s===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case F$.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case F$.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${F$[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case F$.FIRST_DIM_SIZE:return e[0];case F$.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case F$.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${F$[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let a=n.length-2;a>=0;--a)n[a]=n[a+1]*t[a+1];const r=M$(t,!1),s=X(this.valuesDType,P(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){a=this.calculateOutputIndex(e-1,a,n[e],t[e])}this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let i=r.slice();i=i.slice(e+1);const o=P(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;ca((()=>{const t=bl(u,e),n=Ol(t,i);u=n.dataSync()}))}let c=0,h=0,d=0;for(let p=0;p<=l;++p){let e=p<l?t[p]:-1;if(e!==d){if(h<d){const e=s.subarray(c*o);O$(a.subarray(h*o),e,(d-h)*o)}if(p>=l){const t=n.length;e=Math.floor(t/o)}if(e>d)if(1===this.defaultValue.length)a.subarray(d*o,e*o).fill(this.defaultValue[0]),d=e;else for(;e>d;){O$(a.slice(d*o),u,o),++d}e<0?(c=p+1,h=d):(c=p,h=d,d=h+1)}else++d}}}function O$(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function M$(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function L$(e,t,n,r,s,a,i,o,l,u){return new D$(e,t,n,r,s,a,i,o,l,u).compute()}const z$={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,m]=L$(u,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,m)}};function P$(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return oe(0,r);const s=oe(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let a=1;a<s.length;a++)s[a]=s[a-1]+n;return s}const B$={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=P$(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},W$=WN(An,(e=>1/e)),V$={kernelName:An,backendName:"cpu",kernelFunc:W$};const U$={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;LN(s,"resizeBilinear");const l=re(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(P([h,u,c,f])),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],b=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let k=0;k<h;k++)for(let e=0;e<u;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(d-1,Math.ceil(t)),a=k*l[0]+n*l[1],o=k*l[0]+s*l[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),s=t-n,u=Math.min(p-1,Math.ceil(t)),c=a+n*l[2],h=o+n*l[2],d=a+u*l[2],y=o+u*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[d+e]-t)*s,i=a+(n+(m[y+e]-n)*s-a)*r;g[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}};const G$={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;LN([a,s],"resizeBilinearGrad");const o=re(s.shape),[l,u,c,h]=s.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&d>1?u-1:u,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let v=0;for(let w=0;w<l;w++){const e=w*o[0];for(let t=0;t<d;t++){const n=t*y,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),a=e+r*o[1],i=e+s*o[1],l=n-r,d=1-l;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=a+n*o[2],m=a+r*o[2],g=i+n*o[2],y=i+r*o[2],w=d*u,k=d*s,N=l*u,S=l*s;for(let e=0;e<h;e++){const t=x[v++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*N,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}};const H$={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;LN(s,"resizeNearestNeighbor");const l=re(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*u*c*f),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let k=0;k<h;k++){const e=k*l[0];for(let t=0;t<u;t++){const n=i?x*(t+.5):x*t;let r=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=e+r*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,g)}};const j$={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;LN([a,s],"resizeNearestNeighborGrad");const o=re(s.shape),l=re(a.shape),[u,c,h,d]=s.shape,[,p,f]=a.shape,m=new Float32Array(u*c*h*d),g=n.data.get(a.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?h-1:h],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,N=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let I=0;I<u;I++){const e=I*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],r=Math.floor(t*w),s=Math.floor(r-N/2);for(let a=0;a<h;a++){const r=n+a*o[2],u=Math.floor(a*k),y=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let r=0;r<N;r++){const u=r+s;if(u<0||u>=p)continue;const d=e+u*l[1],m=u*x;if(t===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const r=d+t*l[2],s=t*v;a===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[r+n])}}m[r+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}};const q$={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;LN(s,"reverse");const i=s.shape.length,o=j(a,s.shape);if(0===i)return HN({inputs:{x:s},backend:n});const l=new xs(s.shape,s.dtype),u=n.bufferSync(s);for(let c=0;c<l.size;c++){const e=l.indexToLoc(c),t=e.slice();o.forEach((e=>t[e]=s.shape[e]-1-t[e])),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},K$={kernelName:Er,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,{radians:a,fillValue:i,center:o}=n,l=r,u=K(s.dtype,P(s.shape)),[c,h,d,p]=s.shape,[f,m]=Np(o,h,d),g=Math.sin(a),y=Math.cos(a),b=l.data.get(s.dataId).values;for(let x=0;x<c;x++){const e=x*d*h*p;for(let t=0;t<h;t++){const n=t*(d*p);for(let r=0;r<d;r++){const s=r*p;for(let a=0;a<p;a++){const o=[c,t,r,a],l=o[2],x=o[1];let v=(l-f)*y-(x-m)*g,w=(l-f)*g+(x-m)*y;v=Math.round(v+f),w=Math.round(w+m);let k=i;if("number"!==typeof i&&(k=3===a?255:i[a]),v>=0&&v<d&&w>=0&&w<h){k=b[e+w*(d*p)+v*p+a]}u[e+n+s+a]=k}}}}return{dataId:l.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},X$=WN(Bn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),Y$={kernelName:Bn,backendName:"cpu",kernelFunc:X$},Q$=BN((e=>1/Math.sqrt(e))),Z$=VN(Wn,Q$),J$={kernelName:Wn,backendName:"cpu",kernelFunc:Z$};function eE(e,t,n,r,s,a,i,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return yi(n,t.dtype);const p=l instanceof xs?l:yi(c,t.dtype);"string"===typeof l||"number"===typeof l?p.values.fill(l):"boolean"===typeof l&&p.values.fill(+l);for(let f=0;f<a;f++){const e=[];let a=0;for(let t=0;t<i;t++){const n=h[f*i+t];e.push(n),a+=n*o[t]}if(a<0||a>=r/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[a*s+n]+=d[f*s+n]:p.values[a*s+n]=0===t.rank?d[0]:d[f*s+n]}return p}const tE={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Rh(0,s,i),d=eE(n.bufferSync(s),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function nE(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function rE(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const sE={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=function(e,t,n,r,s,a){const i=X("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),l=o*s;for(let e=0;e<s;++e)i[l+e]="left"===a?nE(n,t[e+l]):rE(n,t[e+l])}return i}(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}};const aE={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;LN([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=_s(s.dtype,a.dtype),h=oe(P(s.shape),c);let d=0;const p=0===i||i>1||1===s.shape.length?1:P(s.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<p;e++)1===o[f]?h[d++]=l[f]:h[d++]=u[f];return n.makeTensorInfo(s.shape,c,h)}},iE=Rp,oE=Ap,lE=WN(jn,(e=>e>=0?oE*e:iE*(Math.exp(e)-1))),uE={kernelName:jn,backendName:"cpu",kernelFunc:lE},cE=WN(Yn,(e=>e<0?-1:e>0?1:0)),hE={kernelName:Yn,backendName:"cpu",kernelFunc:cE},dE=WN(Kn,(e=>Math.sin(e))),pE={kernelName:Kn,backendName:"cpu",kernelFunc:dE},fE=WN(Xn,(e=>Math.sinh(e))),mE={kernelName:Xn,backendName:"cpu",kernelFunc:fE},gE=Math.log(1.1920928955078125e-7)+2,yE=WN(Zn,(e=>{const t=e>-gE,n=e<gE,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),bE={kernelName:Zn,backendName:"cpu",kernelFunc:yE};const xE={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;LN([s],"spaceToBatchND");const o=P(a),l=[[0,0]];l.push(...i);for(let g=1+a.length;g<s.shape.length;++g)l.push([0,0]);const u=x$.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Sp(u.shape,a,o,!1),h=Ip(c.length,a.length,!1),d=Tp(u.shape,a,o,!1),p=wS({inputs:{x:u},backend:n,attrs:{shape:c}}),f=DS({inputs:{x:p},backend:n,attrs:{perm:h}}),m=wS({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function vE(e,t,n,r,s,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(rf(o));return[X(n,0),[0,h],X(s,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let g=0;g<o;++g){const t=e[g*h];if(t<0)throw new Error(sf(g,t));if(t>=l)throw new Error(af(g,t,l));++f[t],d=d&&t>=p,p=t}let m=!0;for(let g=0;g<l;++g){const e=0===f[g];u[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=X(n,t*h),d=X(s,t),p=new Array(l).fill(0);for(let n=0;n<o;++n){const t=e[n*h],s=p[t],i=(0===t?0:f[t-1])+s;p[t]++;for(let r=0;r<h;++r)a[i*h+r]=e[n*h+r];d[i]=r[n],c[n]=i}for(let e=0;e<l;++e){if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}}return[a,[t,h],d,u,c]}}const wE={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=vE(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function kE(e,t,n,r,s){const a=P(r),i=t[0],o=s.length,l=[];let u=1,c=-1;for(let m=0;m<o;++m){const e=s[m];if(-1===e){if(-1!==c)throw new Error(of(c,m));c=m,l.push(1)}else{if(e<0)throw new Error(lf(m,e));u*=e,l.push(e)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(cf(r,l));l[c]=e}if(P(l)!==a)throw new Error(hf(r,l));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const f=X(n,i*o);for(let m=0;m<i;++m){let t=0;for(let n=0;n<h;++n)t+=e[m*h+n]*d[n];for(let e=0;e<o;++e)f[m*o+e]=Math.trunc(t/p[e]),t%=p[e]}return[f,[i,o],l]}const NE={kernelName:ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=kE(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function SE(e,t,n,r,s){let a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const o=r.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=X(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=s[p];for(;;){let t=0;if(f<o){if(t=s[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(ff(g,c));g>m&&d.fill(i,m*u,g*u);for(let n=p;n<f;++n){const t=r[n];if(t<0||t>=l[0])throw new Error(mf(n,r[n],l[0]));for(let n=0;n<u;n++)d[g*u+n]+=e[t*u+n]}if(a)for(let e=0;e<u;e++)d[g*u+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(i,m*u,c*u),[d,h]}const IE={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=SE(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const TE={kernelName:or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=SE(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}};const CE={kernelName:lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Rh(0,s,o),p=!1,f=n.bufferSync(s);let m;switch(a.dtype){case"bool":m=eE(f,n.bufferSync(a),o,d,c,u,l,h,Boolean(n.data.get(i.dataId).values[0]),p);break;case"float32":m=eE(f,n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],p);break;case"int32":m=eE(f,n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],p);break;case"string":m=eE(f,n.bufferSync(a),o,d,c,u,l,h,ls(n.data.get(i.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}};const $E={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=j(i,s.shape)[0],l=nf(s,a,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=iI({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},EE=BN((e=>Math.sqrt(e))),RE=WN(Jn,(e=>Math.sqrt(e))),AE={kernelName:Jn,backendName:"cpu",kernelFunc:RE},_E={kernelName:cr,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:r}=t,s=n;LN(r,"square");const a=s.data.get(r.dataId).values,i=new Float32Array(a.length);for(let o=0;o<a.length;++o){const e=a[o];i[o]=e*e}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},FE=XN(((e,t)=>{const n=e-t;return n*n})),DE=mS(ur,FE),OE={kernelName:ur,backendName:"cpu",kernelFunc:DE},ME=BN(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)})),LE=VN(hr,ME),zE={kernelName:hr,backendName:"cpu",kernelFunc:LE},PE=WN(Cr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),BE={kernelName:Cr,backendName:"cpu",kernelFunc:PE};function WE(e,t,n,r){const s=yi(e,t.dtype);for(let a=0;a<s.size;a++){const e=s.indexToLoc(a),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+r[t];s.set(t.get(...i),...e)}return s}const VE={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;LN(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Uo(s.shape,a,i,o,l,u,c,h,d);let w;if(m)w=wS({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){M(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Ro(b,x,v),t=iI({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=wS({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=WE(p,n.bufferSync(s),v,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};class UE{constructor(e,t,n,r,s,a){this.separator=os(e),this.nGramWidths=t,this.leftPad=os(n),this.rightPad=os(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(s-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length;d+=(l+u+c-1)*this.separator.length,n[r+i]=new Uint8Array(d);const p=n[r+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=X("int32",r);if(0===n||0===r){const e=new Array(n);for(let t=0;t<=s;++t)a[t]=0;return[e,a]}a[0]=0;for(let o=1;o<=s;++o){const e=t[o]-t[o-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),a[o]=a[o-1]+n}const i=new Array(a[s]);for(let o=0;o<s;++o){const n=t[o];let r=a[o];if(this.nGramWidths.forEach((s=>{const a=t[o+1]-t[o],l=this.getNumNGrams(a,s);this.createNGrams(e,n,i,r,l,s),r+=l})),this.preserveShort&&r===a[o]){const s=t[o+1]-t[o];if(0===s)continue;const a=s+2*this.padWidth,l=1;this.createNGrams(e,n,i,r,l,a)}}return[i,a]}}function GE(e,t,n,r,s,a,i,o){return new UE(n,r,s,a,i,o).compute(e,t)}const HE={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=GE(d,p,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function jE(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function qE(e,t,n){const r=e.length,s=[];let a=0,i=0;const o=new Array(r);for(let d=0;d<r;++d){const r=s.length;jE(e[d],t,n,s);const l=s.length-r;o[d]=l,a+=l,i=Math.max(i,l)}const l=X("int32",2*a),u=new Array(a),c=[r,i];let h=0;for(let d=0;d<r;++d)for(let e=0;e<o[d];++e)l[2*h]=d,l[2*h+1]=e,u[h]=s[h],++h;return[l,u,c]}const KE={kernelName:fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=qE(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function XE(e,t){const n=X("int32",e.length);for(let r=0;r<e.length;++r)n[r]=rs(e[r]).modulo(t).getLowBitsUnsigned();return n}const YE={kernelName:mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=XE(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},QE=WN(yr,(e=>Math.tan(e))),ZE={kernelName:yr,backendName:"cpu",kernelFunc:QE},JE=WN(br,(e=>Math.tanh(e)));const eR={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:a}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=Rh(0,s,r.shape),h=n.bufferSync(s),d=n.bufferSync(a),p=n.bufferSync(r),f=eE(h,d,r.shape,c,l,o,i,u,p,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};function tR(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const r=yi(n,e.dtype);for(let s=0;s<r.values.length;++s){const t=r.indexToLoc(s),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const a=e.locToIndex(n);r.values[s]=e.values[a]}return r}const nR={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;LN(s,"tile");const i=tR(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},rR=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function sR(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(a-s/2);sR(e,t,Math.max(n,Math.floor(t-a*o/s+l)),Math.min(r,Math.floor(t+(s-a)*o/s+l)))}const s=e[t];let a=n,i=r;for(O(e,n,t),rR(e[r],s)>0&&O(e,n,r);a<i;){for(O(e,a,i),a++,i--;rR(e[a],s)<0;)a+=1;for(;rR(e[i],s)>0;)i-=1}0===rR(e[n],s)?O(e,n,i):(i+=1,O(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function aR(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],l=K(n,i*r),u=K("int32",i*r);for(let h=0;h<i;h++){const t=h*o,n=e.subarray(t,t+o);let a=new Array(n.length);n.forEach(((e,t)=>a[t]={value:e,index:t})),r<a.length&&(sR(a,r),a=a.slice(0,r)),s&&a.sort(rR);const i=h*r,c=l.subarray(i,i+r),d=u.subarray(i,i+r);for(let e=0;e<r;e++)c[e]=a[e].value,d[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[yi(c,n,l),yi(c,"int32",u)]}const iR={kernelName:vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;LN(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=aR(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};const oR={kernelName:wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],g=[c,f,m,p],y=re(s.shape),b=y[0],x=y[1],v=y[2],w=re(g),k=w[0],N=w[1],S=w[2],I=K(s.dtype,P(g));I.fill(l);const T=r.data.get(s.dataId).values,C=r.data.get(a.dataId).values;for(let $=0;$<c;++$){const e=1===a.shape[0]?C:C.subarray(8*$,8*$+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let r=0;r<p;++r){let s;const a=e[6]*n+e[7]*t+1;if(0===a)continue;const u=(e[0]*n+e[1]*t+e[2])/a,c=(e[3]*n+e[4]*t+e[5])/a,p=lR(u,d,o),f=lR(c,h,o);switch(i){case"nearest":s=cR(T,h,d,b,x,v,$,f,p,r,l);break;case"bilinear":s=hR(T,h,d,b,x,v,$,f,p,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}I[$*k+t*N+n*S+r]=s}return r.makeTensorInfo(g,s.dtype,I)}return{dataId:r.write(I,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function lR(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return F(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return F(0,n,t-1)}(e,t);case"nearest":return function(e,t){return F(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function uR(e,t,n,r,s,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*s+l*a+u]:c}function cR(e,t,n,r,s,a,i,o,l,u,c){return uR(e,t,n,r,s,a,i,Math.round(o),Math.round(l),u,c)}function hR(e,t,n,r,s,a,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*uR(e,t,n,r,s,a,i,h,d,u,c)+(l-d)*uR(e,t,n,r,s,a,i,h,f,u,c))+(o-h)*((f-l)*uR(e,t,n,r,s,a,i,p,d,u,c)+(l-d)*uR(e,t,n,r,s,a,i,p,f,u,c))}function dR(e,t,n,r){const s=j(t,n)[0],a=[1,n[0],1];for(let f=0;f<s;f++)a[0]*=n[f];a[1]=n[s];for(let f=s+1;f<n.length;f++)a[2]*=n[f];const i=new Map,o=new Int32Array(n[s]),l=new xs(a,r,e),u=[],c=1===a[0]&&1===a[2];for(let f=0;f<n[s];f++){let t;if(c)t=e[f].toString();else{const e=[];for(let t=0;t<a[0];t++)for(let n=0;n<a[2];n++)e.push(l.get(t,f,n));t=e.join(",")}const n=i.get(t);if(null!=n)o[f]=n;else{const e=i.size;i.set(t,e),o[f]=e,u.push(f)}}const h=a.slice();h[1]=i.size;const d=new xs(h,r);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const pR={kernelName:Nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;LN(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=dR(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};const fR={kernelName:Sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==a&&(l[u++]=s.shape[p]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[a]=p;const e=iI({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[p]=wS({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}};const mR={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;LN(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-a.shape.length;let c=a;for(let d=0;d<u;++d){const e=vT({inputs:{input:c},backend:n,attrs:{dim:d+1}});c=e,l.push(e)}for(let d=0;d<i;++d){const e=ss(d,"int32"),t=n.makeTensorInfo([],"int32",e),r=oT({inputs:{a:t,b:c},backend:n}),a=pS({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),i=eT({inputs:{a:a,b:s},backend:n}),u=nT({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});o.push(u),l.push(t),l.push(r),l.push(a),l.push(i),l.push(u)}const h=y$({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},gR=[IS,CS,ES,AS,vS,_S,MS,LS,zS,PS,WS,US,HS,KS,YS,eI,tI,nI,rI,SS,sI,lI,hI,fI,mI,fS,bI,vI,lS,wI,TI,$I,EI,RI,AI,_I,FI,OI,LI,zI,PI,BI,WI,VI,GI,HI,jI,qI,KI,XI,YI,QI,sT,GN,aT,lT,gT,xT,wT,ST,OT,LT,zT,WT,GT,HT,jT,KT,YT,JT,nC,jN,rC,SI,aC,oC,uC,KN,dC,mC,yC,vC,kC,IC,CC,RC,AC,_C,OC,zC,PC,BC,WC,VC,UC,GC,HC,KC,XC,ZC,t$,tT,r$,a$,o$,u$,d$,p$,g$,b$,x$,k$,ZN,S$,E$,_$,z$,B$,hS,CT,V$,eS,nS,kS,U$,G$,H$,j$,q$,K$,Y$,J$,tE,sE,aE,uE,aS,hE,pE,mE,oI,e$,bE,xE,wE,NE,IE,TE,CE,$E,AE,_E,OE,zE,BE,VE,HE,KE,YE,AT,rT,ZE,{kernelName:br,backendName:"cpu",kernelFunc:JE},eR,nR,iR,oR,OS,pR,fR,mR,m$];for(const n of gR)Br(n);const yR={},bR={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function xR(e,t){if(!(e in yR)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(ge().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete yR[e]}),!1),ge().getBool("SOFTWARE_WEBGL_ENABLED")&&(bR.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",bR)||n.getContext("experimental-webgl",bR);return n.getContext("webgl2",bR)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;yR[e]=n}const n=yR[e];return null==n||n.isContextLost()?(delete yR[e],xR(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),yR[e])}var vR,wR,kR;function NR(e,t){return[t,e]}function SR(e){const t=P(e);return V(Math.ceil(t/4))}function IR(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function TR(e,t){const n=e;let r,s,a,i,o,l,u,c,h,d;return 2===ge().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function CR(e,t){const n=t();return ge().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(vR||(vR={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(wR||(wR={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(kR||(kR={}));function $R(e){return!!(ge().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function ER(e,t){return zR(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const RR=/ERROR: [0-9]+:([0-9]+):/g;function AR(e,t){const n=RR.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>U((t+1).toString(),a)+e));let o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),c=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${U(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function _R(e,t){if(CR(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function FR(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(CR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),CR(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),CR(e,(()=>e.enableVertexAttribArray(o))),!0)}function DR(e,t,n,r){CR(e,(()=>function(e,t,n){PR(e,n),CR(e,(()=>e.activeTexture(e.TEXTURE0+n))),CR(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),CR(e,(()=>e.uniform1i(n,r)))}function OR(e,t,n){CR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),CR(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function MR(e,t){CR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),CR(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function LR(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function zR(e,t,n){const r=CR(e,(()=>t()));if(null==r)throw new Error(n);return r}function PR(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function BR(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return P(e.slice(0,e.length-t))}function WR(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function VR(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[BR(e),...WR(e)]),t}function UR(e){return e%2===0}function GR(e,t){if(B(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(UR(n)&&UR(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&UR(e[0])&&UR(t[0])}let HR,jR;function qR(e,t){return null!=e.getExtension(t)}function KR(e){try{if(null!=xR(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function XR(e){if(0===e)return!1;const t=xR(e);if(1!==e){if(qR(t,"EXT_color_buffer_float"))return YR(t);const e="EXT_color_buffer_half_float";if(qR(t,e)){const n=t.getExtension(e);return function(e,t){const n=TR(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const s=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!qR(t,"OES_texture_float"))return!1;if(!qR(t,"WEBGL_color_buffer_float"))return!1;return YR(t)}function YR(e){const t=TR(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function QR(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&M("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const ZR=ge();function JR(){let e,t,n,r,s,a,i,o,l,u;return 2===ge().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o=ge().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function eA(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=re(t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${t}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function tA(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=re(t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / outShapeStrides[${s}]`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function nA(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let a=n-3;a>=0;--a)s[a]=`(${s[a+1]} * ${r[a+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${r[s]}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}function rA(e){const t=re(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}ZR.registerFlag("HAS_WEBGL",(()=>ZR.getNumber("WEBGL_VERSION")>0)),ZR.registerFlag("WEBGL_VERSION",(()=>KR(2)?2:KR(1)?1:0)),ZR.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),ZR.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===ZR.get("WEBGL_VERSION"))),ZR.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),ZR.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),ZR.registerFlag("WEBGL_PACK",(()=>ZR.getBool("HAS_WEBGL"))),ZR.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>ZR.getBool("WEBGL_PACK"))),ZR.registerFlag("WEBGL_PACK_CLIP",(()=>ZR.getBool("WEBGL_PACK"))),ZR.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>ZR.getBool("WEBGL_PACK"))),ZR.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>ZR.getBool("WEBGL_PACK"))),ZR.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>ZR.getBool("WEBGL_PACK"))),ZR.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>ZR.getBool("WEBGL_PACK"))),ZR.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>ZR.getBool("WEBGL_PACK"))),ZR.registerFlag("WEBGL_PACK_REDUCE",(()=>ZR.getBool("WEBGL_PACK"))),ZR.registerFlag("WEBGL_LAZILY_UNPACK",(()=>ZR.getBool("WEBGL_PACK"))),ZR.registerFlag("WEBGL_CONV_IM2COL",(()=>ZR.getBool("WEBGL_PACK"))),ZR.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>ZR.getBool("WEBGL_PACK"))),ZR.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==HR){const t=xR(e);HR=t.getParameter(t.MAX_TEXTURE_SIZE)}return HR}(ZR.getNumber("WEBGL_VERSION")))),ZR.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==jR){const t=xR(e);jR=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,jR)}(ZR.getNumber("WEBGL_VERSION")))),ZR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=ZR.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=xR(e);return t=qR(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:qR(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),ZR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>ZR.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!qs())),ZR.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=xR(e);if(1===e){if(!qR(t,"OES_texture_float"))return!1}else if(!qR(t,"EXT_color_buffer_float"))return!1;return YR(t)}(ZR.getNumber("WEBGL_VERSION")))),ZR.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!ZR.getBool("WEBGL_FORCE_F16_TEXTURES")&&ZR.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),ZR.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>XR(ZR.getNumber("WEBGL_VERSION")))),ZR.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=ZR.getNumber("WEBGL_VERSION"))&&null!=xR(e).fenceSync;var e})),ZR.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>ZR.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),ZR.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),ZR.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>qs()?1:-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),ZR.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),ZR.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),ZR.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),ZR.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),ZR.registerFlag("WEBGL_EXP_CONV",(()=>!1)),ZR.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>ZR.getBool("IS_TEST"))),ZR.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),ZR.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),ZR.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),ZR.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const sA="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:aA}=a;function iA(e,t,n){const r=[];if(e.forEach((e=>{const t=P(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=yA(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3?arguments[3]:void 0,s="";s+=n?lA(e,r):oA(e,r);const a=e.shapeInfo.logicalShape,i=t.logicalShape;a.length<=i.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=aA(e.shapeInfo.logicalShape,t.logicalShape),l=gA(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===P(e.shapeInfo.logicalShape),m=P(t.logicalShape),g=1===m;if(1!==a||f||g){if(f&&!g)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&B(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=gA(l),c=aA(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");return`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t));return s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=JR(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${uA}\n    ${cA}\n    ${hA}\n  `;return t}(o);t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return pA();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(B(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`\n      int b${u} = index / ${i};\n      index -= b${u} * ${i};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return pA();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(B(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${tA(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=eA(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${tA(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=eA(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=eA(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=eA(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=dA);return[h,l,c,s,u,a,n.userCode].join("\n")}function oA(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=fA(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${mA(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=fA(n);if(1===i)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===a)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&B(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=q(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${oA(bA(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${xA(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${mA(e)}\n      }\n    `;const u=a[0],c=a[1],h=fA(r);if(1===c)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===u)return t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(t)return`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=q(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${oA(bA(e,u),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${xA(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${mA(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=fA(r);if(t)return`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=q(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${oA(bA(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${xA(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${mA(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=fA(r);if(t)return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=q(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${oA(bA(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${xA(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${mA(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=fA(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=q(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${oA(bA(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${xA(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${mA(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=fA(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function lA(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=JR();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=JR();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=JR();if(null!=a&&B(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${lA(bA(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${xA(a,r)});\n        }\n      `}const o=JR();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=JR();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[i-1]/2);let d=h*Math.ceil(a[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)p=`int b${m}, `+p,d*=a[i-m-1],f=`b${m} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const uA="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",cA="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",hA="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",dA="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function pA(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function fA(e){return`offset${e}`}function mA(e){const t=e.name,n=P(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function gA(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function yA(e,t,n){const{newShape:r,keptDims:s}=q(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):r,l=!e&&a>1&&!B(t,n)&&r.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:s}}function bA(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function xA(e,t){return t.map((t=>e[t])).join(", ")}function vA(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=iA(s,i,t),l=function(e,t){const n=zR(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(CR(e,(()=>e.shaderSource(n,t))),CR(e,(()=>e.compileShader(n))),ge().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw AR(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return ge().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i},wA(e,t,u)))}function wA(e,t,n){const r=[],s=[];let a,i,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===ge().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const h of t.variableNames){const s={name:h,uniform:e.getUniformLocation(n,h,c),offset:e.getUniformLocation(n,`offset${h}`,c)};t.enableShapeUniforms&&(s.shape=e.getUniformLocation(n,`${h}Shape`,c),s.texShape=e.getUniformLocation(n,`${h}TexShape`,c)),r.push(s)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const h of t.customUniforms)s.push(e.getUniformLocation(n,h.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:l,nanLoc:u,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:i}}function kA(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!B(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!B(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function NA(e){return ge().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class SA{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=vR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=JR();this.outputShape=e,this.enableShapeUniforms=NA(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?tA(["r","c","d"],e):eA(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class IA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=vR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=JR();this.outputShape=e,this.enableShapeUniforms=NA(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?tA(["r","c","d"],e):eA(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class TA{constructor(e){this.variableNames=["A"],this.outTexUsage=wR.DOWNLOAD;const t=JR();this.outputShape=e,this.userCode=`\n      ${sA}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class CA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=wR.DOWNLOAD;const t=JR();this.outputShape=e,this.userCode=`\n      ${sA}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const $A={R:0,G:1,B:2,A:3};class EA{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=JR();this.outputShape=e,this.enableShapeUniforms=NA(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let i=0;i<n.length;i++){const e=n[i];a+=`\n          if(offset == ${i}) {\n            result = values[${$A[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":rA(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${a}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class RA{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=JR();this.outputShape=e,this.enableShapeUniforms=NA(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let t=0;t<=1;t++){const s=2*a+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${a};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":rA(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function AA(e){const t=JR();return function(e,t){const n=zR(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(CR(e,(()=>e.shaderSource(n,t))),CR(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function _A(e){return function(e,t){const n=zR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return CR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),CR(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function FA(e){return function(e,t){const n=zR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return CR(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),CR(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function DA(e,t,n,r,s,a){!function(e,t){const n=ge().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return zR(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return CR(e,(()=>e.bindTexture(o,i))),CR(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),CR(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),CR(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),CR(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===ge().getNumber("WEBGL_VERSION")?CR(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))):CR(e,(()=>e.texStorage2D(o,1,r,t,n))),CR(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function OA(e){return e.internalFormatFloat}function MA(e){return e.internalFormatHalfFloat}function LA(e){return e.downloadTextureFormat}function zA(e){return e.internalFormatPackedFloat}function PA(e){return e.internalFormatPackedHalfFloat}function BA(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=IR(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}class WA{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=ge().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){yR[e]=t}(t,e)):this.gl=xR(t),e=this.gl,2===ge().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>CR(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>CR(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>CR(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>CR(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>CR(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>CR(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>CR(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>CR(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===ge().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=ER(this.gl,e),qR(this.gl,t))this.textureHalfFloatExtension=ER(this.gl,t);else if(ge().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),qR(this.gl,r))this.colorBufferHalfFloatExtension=ER(this.gl,r);else if(ge().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",qR(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!qR(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=_A(this.gl),this.indexBuffer=FA(this.gl),this.framebuffer=function(e){return zR(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=TR(this.gl,this.textureHalfFloatExtension)}get debug(){return ge().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;CR(e,(()=>e.finish())),CR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),CR(e,(()=>e.deleteFramebuffer(this.framebuffer))),CR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),CR(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),CR(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=NR(t,n);return DA(e,s,a,OA(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=NR(t,n);return DA(e,s,a,MA(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=NR(t,n);return DA(e,s,a,LA(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){CR(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===ge().getNumber("WEBGL_VERSION")?CR(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):CR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===ge().getNumber("WEBGL_VERSION")?CR(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):CR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),CR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,l;CR(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),2===ge().getNumber("WEBGL_VERSION")?CR(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):CR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),CR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=IR(t,n);return DA(e,s,a,PA(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=IR(t,n);return DA(e,s,a,zA(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(MR(this.gl,this.framebuffer),this.outputTexture=null),CR(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=NR(t,n),i=new Uint8Array(t*n*4);return CR(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return BA(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n){const r=e.createBuffer();CR(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const s=16*t*n;return CR(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),CR(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),CR(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(ge().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return CR(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=AA(t));const n=function(e){return zR(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);CR(t,(()=>t.attachShader(n,this.vertexShader))),CR(t,(()=>t.attachShader(n,e))),function(e,t){if(CR(e,(()=>e.linkProgram(t))),!ge().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&_R(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;CR(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){CR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),FR(e,t,"clipSpacePos",n,3,20,0)&&FR(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(CR(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&_R(this.gl,this.program),CR(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return zR(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),CR(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),DR(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=IR(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&_R(this.gl,this.program),LR(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}CR(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),CR(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=ER(this.gl,2===ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await G((()=>this.disposed||this.isQueryAvailable(e,ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in ge().platform&&(n=ge().platform.setTimeoutCustom.bind(ge().platform)),G((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),OR(this.gl,e,this.framebuffer),this.debug&&LR(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(OR(this.gl,this.outputTexture,this.framebuffer),this.debug&&LR(this.gl)):MR(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;OR(r,e,this.framebuffer),this.debug&&LR(r),this.outputTexture=e,CR(r,(()=>r.viewport(0,0,t,n))),CR(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),CR(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:VA,XI:UA,Nk:GA,f6:HA,ct:jA,YG:qA,hH:KA,z3:XA,sG:YA,uM:QA,vS:ZA,qB:JA,GG:e_,rq:t_,lg:n_,WR:r_,cu:s_,GE:a_,px:i_,jC:o_,He:l_,hE:u_,BF:c_,Dk:h_,cl:d_,_B:p_,ub:f_,_f:m_,Ku:g_,qy:y_,Zy:b_,bu:x_,zv:v_,dH:w_,HS:k_,yH:N_,l3:S_,z9:I_,x6:T_,_m:C_,eW:$_,GK:E_,SP:R_,yr:A_,dl:__,Dw:F_,xT:D_,_X:O_,wz:M_}=T;function L_(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function z_(e,t){return 1===t?[e]:L_(e,t)}class P_{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=NA(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=z_("rc",this.rank),t=gA(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class B_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=NA(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?nA(["r","c","d"],"inputShape"):eA(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":rA(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class W_{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=U_(t,n),s=G_(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=V_(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let i;return r===kR.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===kR.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===kR.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===kR.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===kR.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=U_(n,r),a=G_(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=V_(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=ge().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function V_(e,t,n,r,s){const a=function(e,t){switch(e){case kR.PACKED_2X2_FLOAT32:return zA(t);case kR.PACKED_2X2_FLOAT16:return PA(t);case kR.UNPACKED_FLOAT32:return OA(t);case kR.UNPACKED_FLOAT16:return MA(t);case kR.PACKED_4X1_UNSIGNED_BYTE:return LA(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=IR(e[0],e[1]);i=t*n}else{const[t,n]=NR(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function U_(e,t){if(e===wR.UPLOAD)return kR.PACKED_2X2_FLOAT32;if(e===wR.RENDER||null==e)return function(e){return ge().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?kR.PACKED_2X2_FLOAT32:kR.UNPACKED_FLOAT32:e?kR.PACKED_2X2_FLOAT16:kR.UNPACKED_FLOAT16}(t);if(e===wR.DOWNLOAD||e===wR.PIXELS)return kR.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function G_(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class H_{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=NA(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const j_="if (isnan(x)) return x;",q_="return abs(x);";const K_=j_+"\n  return (x < 0.0) ? 0.0 : x;\n",X_=j_+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Y_="return x;";class Q_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=NA(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Z_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=NA(this.outputShape.length);const t=e.length,n=z_("rc",t),r=gA(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const J_=Ph,eF={};const tF=ge().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class nF extends R{nextDataId(){return nF.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ge().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof WA)t=e;else{const n=xR(ge().getNumber("WEBGL_VERSION"),e);t=new WA(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=xR(ge().getNumber("WEBGL_VERSION"));t=new WA(e),this.binaryCache=((n=ge().getNumber("WEBGL_VERSION"))in eF||(eF[n]={}),eF[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new W_(this.gpgpu),this.numMBBeforeWarning=null==ge().global.screen?1024:ge().global.screen.height*ge().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new E(this,la())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const l=VR(t),u=new EA(l,!1,a),c=this.runWebGLProgram(u,[i],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((ge().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ge().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:wR.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,s){if(ge().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:wR.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new Q_(i,Y_):new H_(i,Y_);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=is()),"complex64"===r){c=zp(this.readSync(s.real.dataId),this.readSync(s.imag.dataId))}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=is()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new Q_(r,Y_):new H_(r,Y_);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(ge().getBool("DEBUG")&&!ge().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ge().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&ge().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...SR(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=zp(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=P(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;CR(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&la().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new Q_(s,Y_):new H_(s,Y_);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=la().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>ls(e)));return yi(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return yi(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!$R(n)){if(ge().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=P(t);if(ge().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...SR(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=ge().getBool("WEBGL_PACK")&&!0===r,i=a?VR(t):t,o=a?new CA(i):new TA(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=cs(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=cs(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:is(),endMs:null}}endTimer(e){return ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=is(),e)}async getQueryTime(e){if(ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:tF;return ge().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&P(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Fr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return J_(e.shape,t)}packedUnaryOp(e,t,n){const r=new Q_(e.shape,t),s=this.compileAndRun(r,[e],n);return la().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=w_(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(ge().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,q_,e.dtype);const t=new H_(e.shape,q_),n=this.compileAndRun(t,[e]);return la().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Z(n[0])){const s=n.map((e=>os(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return la().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new Z_(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new P_(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[BR(e.shape),...WR(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[BR(t),...WR(t)],a=new B_(s,n),i=[n],o=this.runWebGLProgram(a,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;if(null!=t){M(P(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=VR(s);let o;o=r?new IA(i):new SA(i);const l=[null!=t?t:SR(i)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5?arguments[5]:void 0;const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===vR.DENSE){const t=null!=a?a:SR(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===P(i.shape))return o.values=K(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&P(t.shape)<=ge().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!GR(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=yA(e.packedInputs,t.shape,a);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=re(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&B(t.shape,a),f=1===P(t.shape),m=Ui(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&B(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${d}_${g}_${i?l:""}_${o.length}_${f}_${m}_${p}_${u}_${c}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${ge().getNumber("WEBGL_VERSION")}`,a}(e,u,c),d=this.getAndSaveBinary(h,(()=>vA(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),ge().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(kA(t.inShapeInfos,n),kA([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===ge().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){const r=n[l],{uniform:s,offset:a,shape:i,texShape:o}=t.variablesLocations[l];if(i){const{uniformShape:n}=yA(t.program.packedInputs,r.shape,r.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n))}}if(o&&e.gl.uniform2i(o,r.texData.texShape[0],r.texData.texShape[1]),null!=s)if(r.isUniform)if(P(r.shape)<2)e.gl.uniform1f(s,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=r.texData.slice&&null!=a&&e.gl.uniform1i(a,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,s,l)}const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=re(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let l=0;l<t.program.customUniforms.length;++l){const n=t.program.customUniforms[l],r=t.customUniformLocations[l],a=s[l];if("float"===n.type)e.gl.uniform1fv(r,a);else if("vec2"===n.type)e.gl.uniform2fv(r,a);else if("vec3"===n.type)e.gl.uniform3fv(r,a);else if("vec4"===n.type)e.gl.uniform4fv(r,a);else if("int"===n.type)e.gl.uniform1iv(r,a);else if("ivec2"===n.type)e.gl.uniform2iv(r,a);else if("ivec3"===n.type)e.gl.uniform3iv(r,a);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(r,a)}}e.executeProgram()}(this.gpgpu,d,u,c,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=ge().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=is();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!ge().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!ge().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ca((()=>{if(!ge().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=ge().getBool("DEBUG");ge().set("DEBUG",!1);const t=this.abs(Ei(1e-8)).dataSync()[0];if(ge().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=is());let c=t.texShape;if(null==c&&(c=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=ge().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=ge().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&ge().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?D(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=q(e);e=t.newShape}let s=P(e),a=null;e.length<=1&&s<=n?a=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>r&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=BR(e);let n=2,r=2;e.length&&([n,r]=WR(e)),s=t*(n/2)*(r/2),a=V(s).map((e=>2*e))}else a=V(s);return a}(n,o),t.texShape=c),null!=s){const e=VR(n);let a,i=c[1],h=c[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([i,h]=IR(c[0],c[1])),a=o?new RA(e,d):new EA(e,d);const p=d?[h,i]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?wR.PIXELS:wR.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,s);const g=[[h,i]],y=!0,b=this.runWebGLProgram(a,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,ge().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=is()-u)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Q(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await pp(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw AR(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}=wA(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:a,channels:i}=e,o=la().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(r,t,n,s,a,i);return la().makeTensorFromDataId(l,t,n,o)}}nF.nextDataId=0;Ks()&&pa("webgl",(()=>new nF),2);const rF="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class sF{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Hi(t,n),this.enableShapeUniforms=NA(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const aF="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class iF{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Hi(t,n);const s=this.outputShape.length;this.enableShapeUniforms=NA(s);let a="";if(r)if(0===s||1===P(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${gA(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=z_("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function oF(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const lF={kernelName:Mt,backendName:"webgl",kernelFunc:oF};function uF(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=oF({inputs:{x:r},backend:n}),l=oF({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const cF={kernelName:qe,backendName:"webgl",kernelFunc:uF},hF="return (a < 0.) ? b * a : a;",dF="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const pF={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",ss(a,"float32")),o=ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new iF(dF,s.shape,i.shape):new sF(hF,s.shape,i.shape),l=n.runWebGLProgram(o,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},fF="return (a < 0.) ? b * a : a;",mF="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const gF={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new iF(mF,r.shape,s.shape):new sF(fF,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}},yF="if (isnan(x)) return x;";function bF(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:r,dtype:s}=e;return e=>{let{inputs:a,backend:i}=e;const{x:o}=a,l=i,u=s||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=r){const e=l.texData.get(o.dataId),t=r(e.values,u);return l.makeTensorInfo(o.shape,u,t)}let c;return c=ge().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new Q_(o.shape,n):new H_(o.shape,t),l.runWebGLProgram(c,[o],u)}}function xF(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:r=!1,supportsComplex:s=!1,cpuKernelImpl:a,dtype:i}=e;return e=>{let{inputs:o,backend:l}=e;const{a:u,b:c}=o,h=l;if(s&&"complex64"===u.dtype){const e=h.texData.get(u.dataId),n=h.texData.get(c.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:c.shape},i=new sF(t,u.shape,c.shape);return h.runWebGLProgram(i,[s,a],_s(n.dtype,r.dtype))})),a=uF({inputs:{real:r,imag:s},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(s),a}const d=i||_s(u.dtype,c.dtype);if(("string"===u.dtype||"string"===c.dtype||h.shouldExecuteOnCPU([u,c]))&&null!=a){const e=h.texData.get(u.dataId).values,t=h.texData.get(c.dataId).values,n="string"===u.dtype?xf(e):e,r="string"===u.dtype?xf(t):t,[s,i]=a(u.shape,c.shape,n,r,d),o=h.makeTensorInfo(i,d);return h.texData.get(o.dataId).values=s,o}let p;return p=ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new iF(n,u.shape,c.shape,r):new sF(t,u.shape,c.shape),h.runWebGLProgram(p,[u,c],d)}}function vF(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":K_;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":X_;if("prelu"===e)return t?mF:fF;if("leakyrelu"===e)return t?dF:hF;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class wF{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=NA(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const kF="return areal * breal - aimag * bimag;",NF="return areal * bimag + aimag * breal;";class SF{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Hi(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const IF="return a * b;";function TF(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=_s(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new SF(kF,r.shape,s.shape),i=new SF(NF,r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=uF({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=c_(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new iF(IF,r.shape,s.shape):new sF(IF,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const CF={kernelName:pn,backendName:"webgl",kernelFunc:TF};function $F(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=P(s.shape),l=H(a,o),u=P(l);M(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||GR(s.shape,l)||null!==c.texture&&GR(c.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[BR(e.shape),...WR(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[BR(t),...WR(t)],i=new B_(a,r),o=[r],l=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(s,l,i)}const EF={kernelName:Fn,backendName:"webgl",kernelFunc:$F};class RF{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${W(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class AF{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function _F(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=kp(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,h;c="mean"===n?0===i?new RF({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new RF({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new AF({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class FF{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const r=gA(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class DF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=gA(this.rank),s=L_("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=s[u];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function OF(e,t,n){const r=ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new DF(e.shape,t):new FF(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function MF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=j(s,e.shape);let o=i;const l=yu(o,a),u=null!=l;let c=e;u&&(c=OF(e,l,r),o=xu(o.length,a)),gu("sum",o,a);const[h,d]=fu(c.shape,o);let p=h;n&&(p=mu(h,i));const f=P(d),m=$F({inputs:{x:c},attrs:{shape:[P(e.shape)/f,f]},backend:r}),g=_F(m,Fs(e.dtype),"sum",r),y=$F({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),y}(s,a,i,n)}const LF={kernelName:er,backendName:"webgl",kernelFunc:MF};function zF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=s.shape[a[c]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=O_(e,s.shape,s.dtype,a,l);u=i.makeTensorInfo(l,s.dtype);i.texData.get(u.dataId).values=t}else u=OF(s,a,i);return u}const PF={kernelName:kr,backendName:"webgl",kernelFunc:zF};function BF(e){let{a:t,b:n,transposeA:r,transposeB:s,backend:a,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e;const c=t.shape.length,h=n.shape.length,d=r?t.shape[c-2]:t.shape[c-1],p=s?n.shape[h-1]:n.shape[h-2],f=r?t.shape[c-1]:t.shape[c-2],m=s?n.shape[h-2]:n.shape[h-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=P(g),x=P(y),v=Hi(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);M(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${r} and transposeB=${s} must match.`));const w=r?[b,d,f]:[b,f,d],k=s?[x,m,p]:[x,p,m],N=$F({inputs:{x:t},backend:a,attrs:{shape:w}}),S=$F({inputs:{x:n},backend:a,attrs:{shape:k}}),I=[N,S],T=Math.max(b,x),C=r?N.shape[1]:N.shape[2],$=null!=i,E=null!=o,R="leakyrelu"===u,A=null!=u?vF(u,!0):null;let _;if((1===f||1===m)&&C>1e3&&!1===($||E||R||null!=A)){let e=N,t=S;r&&(e=zF({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),I.push(e)),s&&(t=zF({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),I.push(t));const n=1===m;let i=e;1!==m&&(i=$F({inputs:{x:e},backend:a,attrs:{shape:[T,C,1]}}),I.push(i));const o=1===m?2:1;let l=t;n&&(l=$F({inputs:{x:t},backend:a,attrs:{shape:[T,1,C]}}),I.push(l));const u=TF({inputs:{a:i,b:l},backend:a});_=MF({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),I.push(u)}else{const e=_s(t.dtype,n.dtype),u=new wF(w,k,[T,f,m],r,s,$,A,E,R),c=[N,S];if(null!=i&&c.push(i),E&&c.push(o),R){const e=a.makeTensorInfo([],"float32",ss(l,"float32"));c.push(e),I.push(e)}_=a.runWebGLProgram(u,c,e)}const F=$F({inputs:{x:_},backend:a,attrs:{shape:v}});I.push(_);for(const D of I)a.disposeIntermediateTensorInfo(D);return F}const WF={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return BF({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},VF="return abs(x);";const UF={kernelName:we,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=w_(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=ge().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Q_(r.shape,VF):new H_(r.shape,VF),n.runWebGLProgram(s,[r],r.dtype)}},GF=bF({opSnippet:j_+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),HF={kernelName:ke,backendName:"webgl",kernelFunc:GF},jF=bF({opSnippet:j_+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),qF={kernelName:Ne,backendName:"webgl",kernelFunc:jF},KF="return a + b;",XF=xF({opSnippet:KF,packedOpSnippet:KF,supportsComplex:!0,cpuKernelImpl:VA}),YF={kernelName:Se,backendName:"webgl",kernelFunc:XF};class QF{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class ZF{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const JF={kernelName:Ie,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return oF({inputs:{x:s[0]},backend:r});if(s.length>ge().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>_s(e,t))),i=s.map((e=>e.shape)),o=ge().getBool("WEBGL_PACK")?new ZF(s[0].shape,i):new QF(s[0].shape,i);return r.runWebGLProgram(o,s,a)}};const eD={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=j(a,s.shape);let u=l;const c=yu(u,o);let h=s;null!=c&&(h=zF({inputs:{x:s},backend:n,attrs:{perm:c}}),u=xu(u.length,o)),gu("all",u,o);const[d,p]=fu(h.shape,u),f=$F({inputs:{x:h},backend:n,attrs:{shape:[-1,P(p)]}}),m=_F(f,f.dtype,"all",n);let g;if(i){g=$F({inputs:{x:m},backend:n,attrs:{shape:mu(d,l)}})}else g=$F({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};const tD={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=j(a,s.shape);let u=l;const c=yu(u,o);let h=s;null!=c&&(h=zF({inputs:{x:s},backend:n,attrs:{perm:c}}),u=xu(u.length,o)),gu("any",u,o);const[d,p]=fu(h.shape,u),f=$F({inputs:{x:h},backend:n,attrs:{shape:[-1,P(p)]}}),m=_F(f,f.dtype,"any",n);let g;if(i){g=$F({inputs:{x:m},backend:n,attrs:{shape:mu(d,l)}})}else g=$F({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class nD{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class rD{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,M(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=gA(o),u=z_("coords",o);let c,h;if(1===a){h=o+1;const e=gA(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=z_("sourceLocR",h-1).concat("inIdx.r"),g=z_("sourceLocG",h-1).concat("inIdx.g"),y=z_("sourceLocB",h-1).concat("inIdx.b"),b=z_("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function sD(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=kp(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new nD(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=sD(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function aD(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const s=null!=r?r.shape:t.shape,a=kp(s[s.length-1]),i=new rD(s,a,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const r=aD(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function iD(e,t,n,r){const s=[n];if(gu("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!ge().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=fu(i.shape,s),u=P(l),c=$F({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=sD(e,c,r);n.push(h);const d=$F({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return aD(e,t,r)}const oD={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=j(a,s.shape);const o=yu(i,s.shape.length);let l=s;const u=[];null!=o&&(l=zF({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=xu(i.length,l.shape.length)),gu("argMax",[i[0]],l.shape.length);const c=iD(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};const lD={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=j(a,s.shape);const o=yu(i,s.shape.length);let l=s;const u=[];null!=o&&(l=zF({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=xu(i.length,l.shape.length)),gu("argMin",[i[0]],l.shape.length);const c=iD(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},uD=bF({opSnippet:j_+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),cD={kernelName:Re,backendName:"webgl",kernelFunc:uD},hD=bF({opSnippet:j_+"return log(x + sqrt(x * x + 1.0));"}),dD={kernelName:Ae,backendName:"webgl",kernelFunc:hD},pD=bF({opSnippet:j_+"\n  return atan(x);\n"}),fD={kernelName:_e,backendName:"webgl",kernelFunc:pD},mD=xF({opSnippet:rF+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+aF+"\n  return result;\n"}),gD={kernelName:De,backendName:"webgl",kernelFunc:mD},yD=bF({opSnippet:j_+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),bD={kernelName:Fe,backendName:"webgl",kernelFunc:yD};class xD{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class vD{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(a/4),k=a%4,N=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${N}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${N}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}}const wD={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;QR(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;M(fl(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=sl(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&B(u.inShape,u.outShape))return oF({inputs:{x:s},backend:n});const c=new xD(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}};const kD={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=al(s.shape,a,i,[1,1,1],o,l,u),h=new vD(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class ND{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class SD{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ID={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=al(i.shape,o,l,[1,1,1],u,c),d=new SD(h);return n.runWebGLProgram(d,[s],i.dtype)}};const TD={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;QR([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=sl(i.shape,o,l,1,u),h=new ND(c);return n.runWebGLProgram(h,[s],i.dtype)}};const CD={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return BF({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class $D{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Hi(e,t),Hi(e,n);let i="0.0";null!=r&&(Hi(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Hi(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class ED{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Hi(e,t),Hi(e,n);let i="vec4(0.0)";null!=r&&(Hi(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Hi(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const RD={kernelName:At,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s,mean:a,variance:i,offset:o,scale:l}=t;M(a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),M(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),M(null==l||a.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=[s,a,i];let h=null;null!=o&&(h=o.shape,c.push(o));let d=null;null!=l&&(d=l.shape,c.push(l));const p=ge().getBool("WEBGL_PACK_NORMALIZATION")?new ED(s.shape,a.shape,i.shape,h,d,u):new $D(s.shape,a.shape,i.shape,h,d,u);return n.runWebGLProgram(p,c,c[0].dtype)}};class AD{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=gA(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return _D.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${_D[t]} = start[${t}] + coords.${_D[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const _D=["x","y","z","w","u","v"];class FD{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=gA(this.rank),n=z_("coords",this.rank),r=z_("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function DD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,l]=Vo(s,a,i);if($o(s,o,l),0===P(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=k_(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=Bo(s.shape,o,l);if(u||!c){const e=ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FD(l):new AD(l),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Wo(t,re(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),a}(s,o,l,n)}const OD={kernelName:qn,backendName:"webgl",kernelFunc:DD},MD={kernelName:Be,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;M(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=Sp(s.shape,a,o),u=Ip(l.length,a.length),c=Tp(s.shape,a,o),h=Cp(i,a.length),d=$p(c,i,a.length),p=[],f=$F({inputs:{x:s},backend:n,attrs:{shape:l}}),m=zF({inputs:{x:f},backend:n,attrs:{perm:u}}),g=$F({inputs:{x:m},backend:n,attrs:{shape:c}}),y=DD({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const LD={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=UA(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}};const zD={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=ge().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=ge().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===i){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,i]=HA(r.shape,s.shape,e,t,r.dtype),o=n.makeTensorInfo(i,r.dtype);return n.texData.get(o.dataId).values=a,o}let o;return o=a?new iF("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new sF("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(o,[r,s],r.dtype)}};const PD={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),i=n.readSync(s.dataId),o=Hi(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},BD=xF({opSnippet:"return float(a != b);",cpuKernelImpl:d_,dtype:"bool"}),WD={kernelName:mn,backendName:"webgl",kernelFunc:BD};function VD(e){const{inputs:t,backend:n}=e,{input:r}=t;return oF({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const UD={kernelName:Rn,backendName:"webgl",kernelFunc:VD};const GD={kernelName:Ge,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return oF({inputs:{x:a},backend:r});const t=lc(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=uF({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=VD({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!Y(a.dtype,i)){const e=oF({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,s]=jA(e,a.shape,a.dtype,i);return r.makeTensorInfo(t,n,s)}if("int32"===i)return function(e,t){const n=new H_(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",K("bool",1)),t=BD({inputs:{a:a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},HD="return ceil(x);",jD=bF({opSnippet:HD,packedOpSnippet:HD,cpuKernelImpl:qA}),qD={kernelName:He,backendName:"webgl",kernelFunc:jD};class KD{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class XD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const YD={kernelName:je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=ge().getBool("WEBGL_PACK_CLIP")?new XD(s.shape):new KD(s.shape);const l=[[a],[i]];return n.runWebGLProgram(o,[s],s.dtype,l)}};class QD{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function ZD(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const JD={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new QD(r.shape),i=[ZD(r,s.complexTensorInfos.real),ZD(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class eO{constructor(e){this.outputShape=[],this.outputShape=mp(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const e=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${e}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class tO{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=mp(e,t);const n=this.outputShape,r=n.length,s=gA(r),a=z_("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){const e=o[f-1];h+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${nO(i,l,e)}),\n            vec2(${nO(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${nO(i,l,p)}),\n          vec2(${nO(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function nO(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function rO(e){const{inputs:t,backend:n}=e,{input:r}=t;return oF({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const sO={kernelName:zt,backendName:"webgl",kernelFunc:rO};function aO(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>VD({inputs:{input:e},backend:n}))),s=e.map((e=>rO({inputs:{input:e},backend:n}))),a=aO(r,t,n),i=aO(s,t,n),o=uF({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=P(e.shape.slice(t));return $F({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=mp(s.map((e=>e.shape)),1),o=1===s[0].shape[0],l=KA(a,i,r,o),u=mp(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>P(e.shape)>0)),i=ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=i?new H_(e[0].shape,Y_):new Q_(e[0].shape,Y_);return n.runWebGLProgram(t,e,r)}const o=ge().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>o){const e=[];for(let s=0;s<a.length;s+=o){const r=a.slice(s,s+o);e.push(aO(r,t,n))}const r=aO(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){const e=new tO(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,r)}const{tensors2D:l,outShape:u}=function(e,t,n){const r=mp(e.map((e=>e.shape)),t),s=e.map((e=>$F({inputs:{x:e},attrs:{shape:[-1,P(e.shape.slice(t))]},backend:n})));return{tensors2D:s,outShape:r}}(a,t,n),c=new eO(l.map((e=>e.shape))),h=n.runWebGLProgram(c,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=$F({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function iO(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=j(s,t[0].shape)[0];fp(t.map((e=>e.shape)),a);const i=mp(t.map((e=>e.shape)),a);if(0===P(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>P(e.shape)>0));return 1===o.length?oF({inputs:{x:o[0]},backend:n}):aO(o,a,n)}const oO={kernelName:Xe,backendName:"webgl",kernelFunc:iO};class lO{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class uO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class cO{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=NA(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<u;m++)h+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let m=0;m<u;m++)h+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(c+1)/2;m++){const t=2*m;if(h+=`\n           xC = xCCorner + ${t*o};\n           `,1===i){if(t<u&&(a%2===1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,h+=1===o&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<u)){const e=a%2===0?D(o):o;o%2===0&&a%2===1||o%2!==0&&a%2!==1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):h+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<u&&(a%2===1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<u&&(h+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<u&&(h+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<u&&(h+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}class hO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=NA(this.outputShape.length);const{dataFormat:n}=t,r=JR(),s="channelsLast"===n,a=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function dO(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function pO(e){let{x:t,filter:n,convInfo:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}=e;const u=t.shape,c=s.texData.get(t.dataId),h=r.inChannels,d=u[0]*u[1]*u[2],p=r.outChannels,f="channelsLast"===r.dataFormat,m=!1;let g;const y=[];if(null!=i){const e=dO(i.shape,f);null!=e&&(i=$F({inputs:{x:i},backend:s,attrs:{shape:e}}),y.push(i))}if(null!=a){const e=dO(a.shape,f);null!=e&&(a=$F({inputs:{x:a},backend:s,attrs:{shape:e}}),y.push(a))}if(!((1===d||1===p)&&h>1e3)&&c.isPacked&&f&&null!=c.texture&&u[2]%2!==0&&B(c.shape.slice(-3),u.slice(-3))){const e=u[0]*u[1]*(u[2]+1),h={dataId:t.dataId,shape:[1,e,r.inChannels],dtype:t.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,M(GR(c.shape,h.shape),(()=>`packed reshape ${c.shape} to ${h.shape} isn't free`));const p=$F({inputs:{x:n},backend:s,attrs:{shape:[1,r.inChannels,r.outChannels]}});y.push(p);const f=BF({a:h,b:p,backend:s,transposeA:false,transposeB:m,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o}),b=s.texData.get(f.dataId);M(b.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=d,b.shape=r.outShape,g=oF({inputs:{x:f},backend:s}),g.shape=r.outShape,y.push(f)}else{const e=r.outHeight*r.outWidth,u=$F({inputs:{x:t},backend:s,attrs:{shape:f?[r.batchSize,e,r.inChannels]:[r.batchSize,r.inChannels,e]}}),c=$F({inputs:{x:n},backend:s,attrs:{shape:[1,r.inChannels,r.outChannels]}}),h=BF({a:f?u:c,b:f?c:u,transposeA:!f,transposeB:m,backend:s,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o});g=$F({inputs:{x:h},backend:s,attrs:{shape:r.outShape}}),y.push(u),y.push(c),y.push(h)}for(const b of y)s.disposeIntermediateTensorInfo(b);return g}function fO(e){let{x:t,filter:n,convInfo:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}=e;const{filterWidth:u,filterHeight:c,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=r,m="channelsLast"===f,g=u*c*h,y=p*d,b=[r.batchSize,g,y],x=[];if(null!=i){const e=dO(i.shape,m);null!=e&&(i=$F({inputs:{x:i},backend:s,attrs:{shape:e}}),x.push(i))}if(null!=a){const e=dO(a.shape,m);null!=e&&(a=$F({inputs:{x:a},backend:s,attrs:{shape:e}}),x.push(a))}const v=$F({inputs:{x:n},backend:s,attrs:{shape:[1,g,P(n.shape)/g]}});x.push(v);const w=new hO(b,r),k=[t.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],N=s.runWebGLProgram(w,[t],"float32",k),S=$F({inputs:{x:N},backend:s,attrs:{shape:b}});x.push(N),x.push(S);const I=null!=a,T=null!=i,C="leakyrelu"===l,$=l?vF(l,!0):null,E=new wF(m?S.shape:v.shape,m?v.shape:S.shape,m?[r.batchSize,y,r.outChannels]:[r.batchSize,r.outChannels,y],!0,!1,I,$,T,C),R=m?[S,v]:[v,S];if(a&&R.push(a),T&&R.push(i),C){const e=s.makeTensorInfo([],"float32",ss(o,"float32"));R.push(e),x.push(e)}const A=s.runWebGLProgram(E,R,"float32"),_=$F({inputs:{x:A},backend:s,attrs:{shape:r.outShape}});x.push(A);for(const F of x)s.disposeIntermediateTensorInfo(F);return _}const mO={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=gl(l),d=il(s.shape,a.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&ge().getBool("WEBGL_EXP_CONV")){const e=new cO(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[s,a],"float32",t)}else if(ge().getBool("WEBGL_CONV_IM2COL"))p=fO({x:s,filter:a,convInfo:d,backend:n});else{const e=new lO(d);p=n.runWebGLProgram(e,[s,a],"float32")}else p=pO({x:s,filter:a,convInfo:d,backend:n});const f=$F({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class gO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const vO={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=gl(l),d=il(s.shape,c,i,1,o,u,!1,h),p=new gO(d);return n.runWebGLProgram(p,[s,a],"float32")}};class wO{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=NA(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const kO={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=gl(u),d=il(i,a.shape,o,1,l,c,!1,h);if(ge().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new wO(d);return n.runWebGLProgram(t,[s,a],"float32",e)}{const e=new yO(d);return n.runWebGLProgram(e,[s,a],"float32")}}};const NO={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=ol(s.shape,a.shape,i,l,o),c=new uO(u);return n.runWebGLProgram(c,[s,a],"float32")}};const SO={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,u=ol(s.shape,l,i,1,o),c=new bO(u);return n.runWebGLProgram(c,[s,a],"float32")}};const IO={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,u=ol(l,a.shape,o,1,i),c=new xO(u);return n.runWebGLProgram(c,[s,a],"float32")}},TO=bF({opSnippet:yF+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${aF}\n  return result;\n`}),CO={kernelName:nt,backendName:"webgl",kernelFunc:TO},$O=bF({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),EO={kernelName:rt,backendName:"webgl",kernelFunc:$O};class RO{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const AO={kernelName:it,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new RO(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};var _O;!function(e){e.Prod="*",e.Sum="+"}(_O||(_O={}));class FO{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===_O.Prod?"1.0":"0.0",i=n?a:`getX(${DO(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${gA(s)} coords = getOutputCoords();\n        int end = ${OO(s,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${OO(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${DO(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function DO(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function OO(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function MO(e,t,n,r,s,a){const i=t.shape.length,o=yu([r],i);let l=t;null!=o&&(l=zF({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=xu(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=oF({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const t=new FO(e,l.shape,!1,a),r=[[d]],s=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(s)}if(s){const t=new FO(e,l.shape,s,a),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=zF({inputs:{x:h},backend:n,attrs:{perm:bu(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const LO={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return MO(_O.Prod,s,n,a,i,o)}};const zO={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return MO(_O.Sum,s,n,a,i,o)}};const PO={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=UA(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=GA(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class BO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const WO={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],l=("NHWC"===i?s.shape[1]:s.shape[2])*a,u=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new BO("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(h,[s],s.dtype)}};class VO{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=NA(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class UO{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=NA(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<c;g++)d+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let g=0;g<c;g++)d+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){const e=2*g;if(d+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<c&&(i%2===1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,d+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=i%2===0?D(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):d+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(i%2===1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(d+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(d+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(d+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const GO={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),M(fl(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=il(s.shape,a.shape,i,c,o,u,!0);let d;d=ge().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new UO(h):new VO(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,a],"float32",p)}};class HO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const qO={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=il(s.shape,c,i,o,l,u,!0),d=new HO(h);return n.runWebGLProgram(d,[s,a],"float32")}};const KO={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=il(c,a.shape,i,o,l,u,!0),d=new jO(h);return n.runWebGLProgram(d,[s,a],"float32")}};class XO{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const YO={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=P(r.shape),i=$F({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new XO(a),l=n.runWebGLProgram(o,[i],i.dtype),u=$F({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class QO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const ZO={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=rl(s.shape,a.shape,i,o,"NHWC",l);let c;const h=new QO(u);c=n.runWebGLProgram(h,[s,a],"float32");const d=$F({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}};const JO={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Yp(s,a.length);Zp(i.length,l,a);const{path:u,steps:c}=Jp(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:r}=Qp(p,l[e]);let s;ef(t)?s=a[e]:(s=zF({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);B(s.shape,i)||(s=$F({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=TF({inputs:{a:s,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=MF({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},eM=bF({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),tM={kernelName:xt,backendName:"webgl",kernelFunc:eM},nM={kernelName:vt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new iF("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new sF("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},rM=xF({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:XA}),sM={kernelName:kt,backendName:"webgl",kernelFunc:rM},aM=bF({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${_p};\n  float a1 = ${Fp};\n  float a2 = ${Dp};\n  float a3 = ${Op};\n  float a4 = ${Mp};\n  float a5 = ${Lp};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),iM={kernelName:wt,backendName:"webgl",kernelFunc:aM},oM=bF({opSnippet:yF+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:YA,dtype:"float32"}),lM={kernelName:Nt,backendName:"webgl",kernelFunc:oM};function uM(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=s;return s<0&&(M(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),$F({inputs:{x:a},backend:r,attrs:{shape:o}})}const cM={kernelName:St,backendName:"webgl",kernelFunc:uM},hM="return exp(x) - 1.0;",dM=bF({opSnippet:hM,packedOpSnippet:hM,cpuKernelImpl:QA}),pM={kernelName:It,backendName:"webgl",kernelFunc:dM};class fM{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function mM(e,t,n){const r=n.texData.get(e.dataId),s=P(e.shape),a=e.shape[e.shape.length-1],i=$F({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,l=new fM("real",o,t),u=new fM("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=uF({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=$F({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const gM={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return mM(r,!1,n)}};class yM{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function bM(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||ee(s),"string"===a){const e=X(a,P(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new yM(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const xM={kernelName:Ct,backendName:"webgl",kernelFunc:bM};class vM{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const wM={kernelName:$t,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:r}=t,s=n,a=new vM(r.shape);return s.runWebGLProgram(a,[r],r.dtype)}},kM="return floor(x);",NM=bF({opSnippet:kM,packedOpSnippet:kM,cpuKernelImpl:ZA}),SM={kernelName:Et,backendName:"webgl",kernelFunc:NM},IM=xF({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),TM={kernelName:Rt,backendName:"webgl",kernelFunc:IM};class CM{constructor(e){this.variableNames=["A"];const t=JR(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class $M{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=JR(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const EM={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!==typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,a];if(o||i){const e=ge().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=RM&&e===AM||(AM=e,RM=document.createElement("canvas").getContext("2d",{willReadFrequently:AM})),RM.canvas.width=l,RM.canvas.height=u,RM.drawImage(s,0,0,l,u),s=RM.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=wR.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=ge().getBool("WEBGL_PACK")?new $M(h):new CM(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let RM,AM=ge().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const _M={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=gl(c),g=il(s.shape,a.shape,l,h,u,d,!1,m);let y;const b=[],x=null!=i,v=null!=o,w="leakyrelu"===p,k=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=$F({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(i,c)),v&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",ss(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&ge().getBool("WEBGL_EXP_CONV")){const e=p?vF(p,!0):null,t=new cO(g,x,e,v,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=k();y=n.runWebGLProgram(t,s,"float32",r)}else if(ge().getBool("WEBGL_CONV_IM2COL"))y=fO({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?vF(p,!1):null,t=new lO(g,x,e,v,w),r=k();y=n.runWebGLProgram(t,r,"float32")}else y=pO({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const N=$F({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};const FM={kernelName:_r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),M(fl(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=il(s.shape,a.shape,l,m,u,h,!0),y=ge().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?vF(d,y):null,x=[s,a],v=null!=i,w=null!=o,k="leakyrelu"===d;if(v&&x.push(i),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",ss(p,"float32"));x.push(e),f.push(e)}let N;N=y?new UO(g,v,b,w,k):new VO(g,v,b,w,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],I=n.runWebGLProgram(N,x,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};class DM{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=gA(n.length);let a="\n    int index;";for(let i=0;i<this.sliceDim;i++)a+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const OM={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=P(r.shape),[l,u,c,h]=Ep(r,s),d=$F({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),p=$F({inputs:{x:r},backend:n,attrs:{shape:[P(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=JA(e,t,r.dtype,u,i,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,a.values)}const f=new DM(i,h,[u,c],r.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=$F({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class MM{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=gA(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function LM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,l=j(i,s.shape)[0];if(ge().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];M(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const u=bf(s,a,l,o),c=P(a.shape),h=[],d=$F({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=$F({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=e_(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const m=new MM(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=$F({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const zM={kernelName:_t,backendName:"webgl",kernelFunc:LM},PM=xF({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:t_,dtype:"bool"}),BM={kernelName:Dt,backendName:"webgl",kernelFunc:PM},WM=xF({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:n_}),VM={kernelName:Ot,backendName:"webgl",kernelFunc:WM};const UM={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return mM(r,!0,n)}},GM=bF({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),HM={kernelName:Pt,backendName:"webgl",kernelFunc:GM},jM=bF({opSnippet:"return float(isinf(x));",dtype:"bool"}),qM={kernelName:Bt,backendName:"webgl",kernelFunc:jM},KM=bF({opSnippet:"return float(isnan(x));",dtype:"bool"}),XM={kernelName:Wt,backendName:"webgl",kernelFunc:KM},YM=xF({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:r_,dtype:"bool"}),QM={kernelName:Ut,backendName:"webgl",kernelFunc:YM},ZM=xF({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:s_,dtype:"bool"}),JM={kernelName:Gt,backendName:"webgl",kernelFunc:ZM};const eL={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=a_(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},tL=bF({opSnippet:yF+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:i_}),nL={kernelName:jt,backendName:"webgl",kernelFunc:tL},rL=bF({opSnippet:yF+"\n  return log(1.0 + x);\n"}),sL={kernelName:qt,backendName:"webgl",kernelFunc:rL},aL=xF({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),iL={kernelName:Kt,backendName:"webgl",kernelFunc:aL},oL=bF({opSnippet:"return float(!(x >= 1.0));"}),lL={kernelName:Xt,backendName:"webgl",kernelFunc:oL},uL=xF({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),cL={kernelName:Yt,backendName:"webgl",kernelFunc:uL};class hL{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class dL{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const pL={kernelName:Qt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,u=ge().getBool("WEBGL_PACK_NORMALIZATION")?new dL(s.shape,a,i,o,l):new hL(s.shape,a,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class fL{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const mL={kernelName:Zt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new fL(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function gL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,l=j(a,s.shape);let u=l;const c=yu(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let n=0;n<t.length;n++)t[n]=s.shape[c[n]];const r=O_(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype);n.texData.get(p.dataId).values=r}else p=OF(s,c,n);u=xu(u.length,o)}gu("max",u,o);const[f,m]=fu(p.shape,u);let g,y=f;if(i&&(y=mu(f,l)),d){const e=n.texData.get(p.dataId).values,t=o_(e,P(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=P(t),a=$F({inputs:{x:e},attrs:{shape:[P(e.shape)/s,s]},backend:r}),i=_F(a,e.dtype,"max",r),o=$F({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const yL={kernelName:Jt,backendName:"webgl",kernelFunc:gL},bL=xF({opSnippet:rF+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+aF+"\n  return result;\n",cpuKernelImpl:l_}),xL={kernelName:en,backendName:"webgl",kernelFunc:bL};const vL={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;QR(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;M(fl(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=sl(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&B(u.inShape,u.outShape))return oF({inputs:{x:s},backend:n});const c=new xD(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}};const wL={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=al(s.shape,a,i,[1,1,1],o,u,l),h=new vD(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class kL{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class NL{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const SL={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=al(i.shape,o,l,[1,1,1],u,c),d=new vD(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new NL(h),m=n.runWebGLProgram(f,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}};const IL={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;QR([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=sl(o.shape,l,u,1,c,h),p=new xD(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new kL(d),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};const TL={kernelName:an,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=n,u=r;M(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const c=[1,1];M(fl(i,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=sl(s.shape,a,i,c,o),[d,p]=function(e,t,n,r){let s=new xD(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new xD(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(s,l,h,u);return[d,p]}};const CL={kernelName:on,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,{keepDims:a,axis:i}=n,o=r,l=s.shape.length,u=j(i,s.shape);let c=u;const h=yu(c,l),d=null!=h,p=o.shouldExecuteOnCPU([s]),f=[];let m=s;if(d){if(p){const e=o.texData.get(m.dataId).values,t=new Array(l);for(let r=0;r<t.length;r++)t[r]=s.shape[h[r]];const n=O_(e,s.shape,s.dtype,h,t);m=o.makeTensorInfo(t,s.dtype);o.texData.get(m.dataId).values=n}else m=OF(s,h,o);f.push(m),c=xu(c.length,l)}gu("sum",c,l);const[g,y]=fu(m.shape,c);let b=g;a&&(b=mu(g,u));const x=function(e,t,n,r){const s=P(t),a=$F({inputs:{x:e},attrs:{shape:[P(e.shape)/s,s]},backend:r}),i=_F(a,"float32","mean",r),o=$F({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(m,y,b,o);for(const v of f)o.disposeIntermediateTensorInfo(v);return x}};const $L={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=j(a,s.shape);let u=l;const c=yu(u,o);let h=s;null!=c&&(h=zF({inputs:{x:s},backend:n,attrs:{perm:c}}),u=xu(u.length,s.shape.length)),gu("min",u,o);const[d,p]=fu(h.shape,u),f=$F({inputs:{x:h},backend:n,attrs:{shape:[-1,P(p)]}}),m=_F(f,f.dtype,"min",n);let g;if(i){g=$F({inputs:{x:m},backend:n,attrs:{shape:mu(d,l)}})}else g=$F({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},EL=xF({opSnippet:rF+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+aF+"\n  return result;\n",cpuKernelImpl:u_}),RL={kernelName:un,backendName:"webgl",kernelFunc:EL};class AL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=gA(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class _L{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=gA(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=z_("rc",r),l=z_("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const FL={kernelName:cn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:s}=t,{paddings:a,mode:i}=r,o=ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _L(s.shape,a,i):new AL(s.shape,a,i);return n.runWebGLProgram(o,[s],s.dtype)}},DL=xF({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+aF+"\n  return result;\n"}),OL={kernelName:hn,backendName:"webgl",kernelFunc:DL};class ML{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const LL=xF({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),zL={kernelName:yt,backendName:"webgl",kernelFunc:LL},PL="return a - b;",BL=xF({opSnippet:PL,packedOpSnippet:PL,supportsComplex:!0,cpuKernelImpl:__}),WL={kernelName:gr,backendName:"webgl",kernelFunc:BL};function VL(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=j([a],s.shape),o=gL({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=mu(o.shape,i),u=$F({inputs:{x:o},backend:n,attrs:{shape:l}}),c=BL({inputs:{a:s,b:u},backend:n}),h=oM({inputs:{x:c},backend:n}),d=MF({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=$F({inputs:{x:d},backend:n,attrs:{shape:l}}),f=LL({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const UL={kernelName:rr,backendName:"webgl",kernelFunc:VL};const GL={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:VL({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new ML(u,c,a),d=[[i]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},HL=j_+"\n  return -x;\n";const jL={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=h_(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=ge().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Q_(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new H_(r.shape,HL),n.runWebGLProgram(s,[r],r.dtype)}},qL=vd;const KL={kernelName:gn,backendName:"webgl",kernelFunc:function(e){Fr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=qL(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},XL=wd;const YL={kernelName:yn,backendName:"webgl",kernelFunc:function(e){Fr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=XL(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},QL=kd;const ZL={kernelName:bn,backendName:"webgl",kernelFunc:function(e){Fr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=QL(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class JL{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const ez={kernelName:vn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r,u=P(s.shape),c=new JL(u,i,o,l),h=$F({inputs:{x:s},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const p=$F({inputs:{x:d},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function tz(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=VD({inputs:{input:r},backend:n}),t=tz({inputs:{x:e},backend:n}),s=rO({inputs:{input:r},backend:n}),a=tz({inputs:{x:s},backend:n}),i=uF({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return bM({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const nz={kernelName:Tr,backendName:"webgl",kernelFunc:tz};const rz={kernelName:xn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=VD({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=rO({inputs:{input:s},backend:r}),i=tz({inputs:{x:a},backend:r}),o=uF({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return bM({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}};const sz={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return uM({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{L(a,e.shape,"All tensors passed to stack must have matching shapes"),M(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=iO({inputs:t.map((e=>{const t=uM({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class az{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=gA(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class iz{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=gA(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=z_("rc",r),l=z_("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const oz=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===P(s.shape)){const e=a.map(((e,t)=>e[0]+s.shape[t]+e[1]));return bM({backend:n,attrs:{shape:e,value:i,dtype:s.dtype}})}const o=ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iz(s.shape,a,i):new az(s.shape,a,i),l=[[i]];return n.runWebGLProgram(o,[s],s.dtype,l)},lz={kernelName:kn,backendName:"webgl",kernelFunc:oz},uz=xF({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+aF+"\n  return result;\n"}),cz={kernelName:Nn,backendName:"webgl",kernelFunc:uz};const hz={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=[],u=j(a,s.shape);let c=u;const h=yu(c,o);let d,p=s;if(null!=h&&(p=zF({inputs:{x:s},backend:n,attrs:{perm:h}}),c=xu(c.length,o),l.push(p)),gu("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=p_(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=fu(p.shape,c),r=P(t),a=$F({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=_F(a,Fs(s.dtype),"prod",n);d=$F({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(d);const e=mu(d.shape,u);d=$F({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const dz={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.readSync(e.dataId))),u=s.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[d,p,f]=f_(l,u,c,a.shape,a.dtype,h,i.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}};const pz={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=m_(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};const fz={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,m]=g_(u,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,m)}},mz=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=y_(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},gz={kernelName:En,backendName:"webgl",kernelFunc:mz},yz=bF({opSnippet:"return 1.0 / x;"}),bz={kernelName:An,backendName:"webgl",kernelFunc:yz},xz=bF({opSnippet:j_+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),vz={kernelName:_n,backendName:"webgl",kernelFunc:xz},wz=bF({opSnippet:j_+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),kz={kernelName:zn,backendName:"webgl",kernelFunc:wz};class Nz{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Sz{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Iz={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=ge().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Sz(s.shape,l,u,a,i):new Nz(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],"float32")}};class Tz{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Cz={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new Tz(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class $z{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Ez{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const Rz={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=ge().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ez(s.shape,l,u,a,i):new $z(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class Az{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const _z={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new Az(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class Fz{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=gA(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Dz{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=z_("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=gA(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Oz={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=j(a,s.shape);if(0===i)return oF({inputs:{x:s},backend:n});const l=ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Dz(s.shape,o):new Fz(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class Mz{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Lz={kernelName:Er,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:s}=t,{radians:a,fillValue:i,center:o}=n,l=r,u=new Mz(s.shape,i),[c,h]=Np(o,s.shape[1],s.shape[2]),d=[[c,h,Math.sin(a),Math.cos(a)]];return l.runWebGLProgram(u,[s],s.dtype,d)}},zz=bF({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Pz={kernelName:Bn,backendName:"webgl",kernelFunc:zz},Bz=bF({opSnippet:"return inversesqrt(x);",cpuKernelImpl:b_}),Wz={kernelName:Wn,backendName:"webgl",kernelFunc:Bz};class Vz{constructor(e,t,n,r,s,a){let i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=gA(s.length),l=gA(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`;let p="";i&&(p="coords[0], coords[1]");const f=`getDefaultValue(${p})`,m=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${m};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(${f}, sum, float(found)));\n        }\n      `}}class Uz{constructor(e,t,n,r,s,a){let i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const o=gA(s.length),l=gA(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`;let p="";i&&(p="coords[0], coords[1]");const f=`getDefaultValue(${p})`,m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${c});\n              flattenedIndex += index.xz * ${m};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${g};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${d};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${f}, sum, found));\n        }\n      `}}const Gz={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Rh(0,s,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const p=$F({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=$F({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=ge().getBool("WEBGL_PACK")?new Uz(l,o,p.shape.length,f.shape.length,c,d):new Vz(l,o,p.shape.length,f.shape.length,c,d);const y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=$F({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class Hz{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===ge().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const jz={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=new Hz(s.shape[0],s.shape[1],a.shape[1],i),l=[[s.shape[1]]];return n.runWebGLProgram(o,[s,a],"int32",l)}};class qz{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=gA(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const Kz={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new qz(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],_s(s.dtype,a.dtype))}},Xz=bF({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Rp};\n  float scale = ${Ap};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Yz={kernelName:jn,backendName:"webgl",kernelFunc:Xz},Qz=bF({opSnippet:yF+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:v_}),Zz={kernelName:Qn,backendName:"webgl",kernelFunc:Qz},Jz=bF({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),eP={kernelName:Yn,backendName:"webgl",kernelFunc:Jz},tP=bF({opSnippet:yF+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${aF}\n  return result;\n`}),nP={kernelName:Kn,backendName:"webgl",kernelFunc:tP},rP=bF({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),sP={kernelName:Xn,backendName:"webgl",kernelFunc:rP},aP=bF({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),iP={kernelName:Zn,backendName:"webgl",kernelFunc:aP},oP={kernelName:tr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;M(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let y=1+a.length;y<s.shape.length;++y)l.push([0,0]);const u=[],c=oz({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=Sp(c.shape,a,o,!1),d=Ip(h.length,a.length,!1),p=Tp(c.shape,a,o,!1),f=$F({inputs:{x:c},backend:n,attrs:{shape:h}}),m=zF({inputs:{x:f},backend:n,attrs:{perm:d}}),g=$F({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const lP={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=N_(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const uP={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=S_(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};const cP={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=I_(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const hP={kernelName:or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=I_(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}};const dP={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Rh(0,s,o),p=!1;if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=ls(n.readSync(i.dataId)[0]),f=x_(e,t,o,d,c,u,l,h,r,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new Vz(u,l,s.shape.length,a.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[a,s,i],a.dtype),g=$F({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}};const pP={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=j(i,s.shape)[0],l=nf(s,a,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=DD({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},fP="return sqrt(x);",mP=bF({opSnippet:fP,packedOpSnippet:fP,cpuKernelImpl:T_}),gP={kernelName:Jn,backendName:"webgl",kernelFunc:mP},yP={kernelName:cr,backendName:"webgl",kernelFunc:bF({opSnippet:"return x * x;"})},bP="return (a - b) * (a - b);",xP=xF({opSnippet:bP,packedOpSnippet:bP}),vP={kernelName:ur,backendName:"webgl",kernelFunc:xP};const wP={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const a=xf(n.readSync(s.dataId)),i=C_(a,"string",r);return n.makeTensorInfo(s.shape,"string",i)}};const kP={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e;const{x:s}=t,a=j_+`\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,i=new H_(s.shape,a);return r.runWebGLProgram(i,[s],s.dtype)}};class NP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=gA(n.length),a=gA(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const SP={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Uo(s.shape,a,i,o,l,u,c,h,d);let w;if(m)w=$F({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){M(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Ro(b,x,v),t=DD({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=$F({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=yi(s.shape,s.dtype,e),r=$_(p,t,v,b);w=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new NP(b,v,p);w=n.runWebGLProgram(e,[s],s.dtype)}}const k=$F({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};const IP={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=E_(d,p,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const TP={kernelName:fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=R_(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const CP={kernelName:mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=A_(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},$P=bF({opSnippet:"return tan(x);"}),EP={kernelName:yr,backendName:"webgl",kernelFunc:$P},RP=bF({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),AP={kernelName:br,backendName:"webgl",kernelFunc:RP};const _P={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:a,updates:i}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Rh(0,a,s.shape),d=[h/u,u];if(0===h)return n.makeTensorInfo(s.shape,a.dtype);const p=$F({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=$F({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=$F({inputs:{x:s},backend:n,attrs:{shape:d}}),g=new Vz(l,o,p.shape.length,f.shape.length,c,d,!1,!0),y=n.runWebGLProgram(g,[f,p,m],m.dtype),b=$F({inputs:{x:y},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class FP{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const r=gA(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function DP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>ls(e))):e,r=yi(s.shape,s.dtype,t),i=F_(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new FP(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const OP={kernelName:xr,backendName:"webgl",kernelFunc:DP};class MP{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class LP{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function zP(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function PP(e){let t=1;for(;t<e;)t*=2;return t}const BP={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=ge().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=ge().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([s])||c<o||a>l){const e=n.readSync(s.dataId),[t,r]=D_(e,u,s.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[s,bM({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=P(u)/c,m=$F({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&zP(n,p);const g=PP(a),y=PP(c);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,r)=>{const s=x(),a=new MP(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(a,s,"int32",i),zP(n,o)};for(let I=1;I<g;I*=2){const e=2*I;for(let t=I;t>=1;t/=2)v(e,t,[f,y])}for(let I=y;I>g;I/=2){const e=x(),t=new LP([f,I/2]),r=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(t,e,"int32",r),zP(n,s);const a=g/2,i=2*a;for(let n=a;n>=1;n/=2)v(i,n,b.shape)}let w=b;b=DD({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),zP(n,w);let k=LM({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});zP(n,m);const N=u.slice(0,-1);N.push(a),w=b,b=$F({inputs:{x:b},attrs:{shape:N},backend:n}),zP(n,w);const S=k;return k=$F({inputs:{x:k},attrs:{shape:N},backend:n}),zP(n,S),[k,b]}};class WP{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const VP={kernelName:wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],g=new WP(h,d,i,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[s,a],"float32")}};const UP={kernelName:Nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;QR(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=M_(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};const GP={kernelName:Sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==a&&(u[c++]=i.shape[m]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[a]=m;const e=DD({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),t=$F({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class HP{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const jP={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,l=[];let u=0;const c=yu([u],o);let h=s;null!=c&&(h=zF({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=xu(1,o)[0]);const d=yf(h.shape,u,i),p=P([h.shape[u]]),f=$F({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=Fs(s.dtype),g=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],u=gf(o,a),c=new HP({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(l.push(h),h.shape[1]===a)return h;const d=mz({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=DP({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});l.push(d),l.push(p);return g(h,t,p,s,a)},y=$F({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:d}});let b=y;if(null!=c){l.push(y);const e=bu(c);b=zF({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},qP=[WF,UF,HF,qF,YF,JF,eD,tD,oD,lD,cD,dD,fD,gD,bD,wD,kD,ID,TD,CD,RD,MD,LD,zD,PD,GD,qD,YD,cF,JD,oO,mO,vO,kO,NO,SO,IO,CO,EO,AO,LO,zO,PO,WO,GO,qO,KO,YO,ZO,JO,tM,nM,sM,iM,lM,cM,pM,gM,xM,wM,SM,TM,EM,_M,FM,OM,zM,BM,VM,lF,UM,sO,HM,qM,XM,pF,QM,JM,eL,nL,sL,iL,lL,cL,pL,mL,yL,xL,vL,wL,SL,IL,TL,CL,$L,RL,FL,OL,GL,CF,jL,KL,YL,ZL,WD,ez,rz,sz,lz,cz,gF,hz,dz,pz,fz,gz,UD,zL,bz,vz,kz,EF,Iz,Cz,Rz,_z,Oz,Lz,Pz,Wz,Gz,jz,Kz,Yz,Zz,eP,nP,sP,OD,UL,iP,oP,lP,uP,cP,hP,dP,pP,gP,yP,vP,wP,kP,SP,IP,TP,CP,WL,LF,EP,AP,_P,OP,BP,VP,PF,UP,GP,jP,nz];for(const n of qP)Br(n);function KP(e,t,n,r){return new(n||(n=Promise))((function(s,a){function i(e){try{l(r.next(e))}catch(e){a(e)}}function o(e){try{l(r.throw(e))}catch(e){a(e)}}function l(e){e.done?s(e.value):new n((function(t){t(e.value)})).then(i,o)}l((r=r.apply(e,t||[])).next())}))}function XP(e,t){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}}var YP=[[0,0,0],[120,120,120],[180,120,120],[6,230,230],[80,50,50],[4,200,3],[120,120,80],[140,140,140],[204,5,255],[230,230,230],[4,250,7],[224,5,255],[235,255,7],[150,5,61],[120,120,70],[8,255,51],[255,6,82],[143,255,140],[204,255,4],[255,51,7],[204,70,3],[0,102,200],[61,230,250],[255,6,51],[11,102,255],[255,7,71],[255,9,224],[9,7,230],[220,220,220],[255,9,92],[112,9,255],[8,255,214],[7,255,224],[255,184,6],[10,255,71],[255,41,10],[7,255,255],[224,255,8],[102,8,255],[255,61,6],[255,194,7],[255,122,8],[0,255,20],[255,8,41],[255,5,153],[6,51,255],[235,12,255],[160,150,20],[0,163,255],[140,140,140],[250,10,15],[20,255,0],[31,255,0],[255,31,0],[255,224,0],[153,255,0],[0,0,255],[255,71,0],[0,235,255],[0,173,255],[31,0,255],[11,200,200],[255,82,0],[0,255,245],[0,61,255],[0,255,112],[0,255,133],[255,0,0],[255,163,0],[255,102,0],[194,255,0],[0,143,255],[51,255,0],[0,82,255],[0,255,41],[0,255,173],[10,0,255],[173,255,0],[0,255,153],[255,92,0],[255,0,255],[255,0,245],[255,0,102],[255,173,0],[255,0,20],[255,184,184],[0,31,255],[0,255,61],[0,71,255],[255,0,204],[0,255,194],[0,255,82],[0,10,255],[0,112,255],[51,0,255],[0,194,255],[0,122,255],[0,255,163],[255,153,0],[0,255,10],[255,112,0],[143,255,0],[82,0,255],[163,255,0],[255,235,0],[8,184,170],[133,0,255],[0,255,92],[184,0,255],[255,0,31],[0,184,255],[0,214,255],[255,0,112],[92,255,0],[0,224,255],[112,224,255],[70,184,160],[163,0,255],[153,0,255],[71,255,0],[255,0,163],[255,204,0],[255,0,143],[0,255,235],[133,255,0],[255,0,235],[245,0,255],[255,0,122],[255,245,0],[10,190,212],[214,255,0],[0,204,255],[20,0,255],[255,255,0],[0,153,255],[0,41,255],[0,255,204],[41,0,255],[41,255,0],[173,0,255],[0,245,255],[71,0,255],[122,0,255],[0,255,184],[0,92,255],[184,255,0],[0,133,255],[255,214,0],[25,194,194],[102,255,0],[92,0,255]],QP=[[128,64,128],[244,35,232],[70,70,70],[102,102,156],[190,153,153],[153,153,153],[250,170,30],[220,220,0],[107,142,35],[152,251,152],[70,130,180],[220,20,60],[255,0,0],[0,0,142],[0,0,70],[0,60,100],[0,80,100],[0,0,230],[119,11,32]],ZP=[[0,0,0],[128,0,0],[0,128,0],[128,128,0],[0,0,128],[128,0,128],[0,128,128],[128,128,128],[64,0,0],[192,0,0],[64,128,0],[192,128,0],[64,0,128],[192,0,128],[64,128,128],[192,128,128],[0,64,0],[128,64,0],[0,192,0],[128,192,0],[0,64,128],[128,64,128],[0,192,128],[128,192,128],[64,64,0],[192,64,0],[64,192,0],[192,192,0],[64,64,128],[192,64,128],[64,192,128],[192,192,128],[0,0,64],[128,0,64],[0,128,64],[128,128,64],[0,0,192],[128,0,192],[0,128,192],[128,128,192],[64,0,64],[192,0,64],[64,128,64],[192,128,64],[64,0,192],[192,0,192],[64,128,192],[192,128,192],[0,64,64],[128,64,64],[0,192,64],[128,192,64],[0,64,192],[128,64,192],[0,192,192],[128,192,192],[64,64,64],[192,64,64],[64,192,64],[192,192,64],[64,64,192],[192,64,192],[64,192,192],[192,192,192],[32,0,0],[160,0,0],[32,128,0],[160,128,0],[32,0,128],[160,0,128],[32,128,128],[160,128,128],[96,0,0],[224,0,0],[96,128,0],[224,128,0],[96,0,128],[224,0,128],[96,128,128],[224,128,128],[32,64,0],[160,64,0],[32,192,0],[160,192,0],[32,64,128],[160,64,128],[32,192,128],[160,192,128],[96,64,0],[224,64,0],[96,192,0],[224,192,0],[96,64,128],[224,64,128],[96,192,128],[224,192,128],[32,0,64],[160,0,64],[32,128,64],[160,128,64],[32,0,192],[160,0,192],[32,128,192],[160,128,192],[96,0,64],[224,0,64],[96,128,64],[224,128,64],[96,0,192],[224,0,192],[96,128,192],[224,128,192],[32,64,64],[160,64,64],[32,192,64],[160,192,64],[32,64,192],[160,64,192],[32,192,192],[160,192,192],[96,64,64],[224,64,64],[96,192,64],[224,192,64],[96,64,192],[224,64,192],[96,192,192],[224,192,192],[0,32,0],[128,32,0],[0,160,0],[128,160,0],[0,32,128],[128,32,128],[0,160,128],[128,160,128],[64,32,0],[192,32,0],[64,160,0],[192,160,0],[64,32,128],[192,32,128],[64,160,128],[192,160,128],[0,96,0],[128,96,0],[0,224,0],[128,224,0],[0,96,128],[128,96,128],[0,224,128],[128,224,128],[64,96,0],[192,96,0],[64,224,0],[192,224,0],[64,96,128],[192,96,128],[64,224,128],[192,224,128],[0,32,64],[128,32,64],[0,160,64],[128,160,64],[0,32,192],[128,32,192],[0,160,192],[128,160,192],[64,32,64],[192,32,64],[64,160,64],[192,160,64],[64,32,192],[192,32,192],[64,160,192],[192,160,192],[0,96,64],[128,96,64],[0,224,64],[128,224,64],[0,96,192],[128,96,192],[0,224,192],[128,224,192],[64,96,64],[192,96,64],[64,224,64],[192,224,64],[64,96,192],[192,96,192],[64,224,192],[192,224,192],[32,32,0],[160,32,0],[32,160,0],[160,160,0],[32,32,128],[160,32,128],[32,160,128],[160,160,128],[96,32,0],[224,32,0],[96,160,0],[224,160,0],[96,32,128],[224,32,128],[96,160,128],[224,160,128],[32,96,0],[160,96,0],[32,224,0],[160,224,0],[32,96,128],[160,96,128],[32,224,128],[160,224,128],[96,96,0],[224,96,0],[96,224,0],[224,224,0],[96,96,128],[224,96,128],[96,224,128],[224,224,128],[32,32,64],[160,32,64],[32,160,64],[160,160,64],[32,32,192],[160,32,192],[32,160,192],[160,160,192],[96,32,64],[224,32,64],[96,160,64],[224,160,64],[96,32,192],[224,32,192],[96,160,192],[224,160,192],[32,96,64],[160,96,64],[32,224,64],[160,224,64],[32,96,192],[160,96,192],[32,224,192],[160,224,192],[96,96,64],[224,96,64],[96,224,64],[224,224,64],[96,96,192],[224,96,192],[96,224,192],[224,224,192]],JP=["background","aeroplane","bicycle","bird","boat","bottle","bus","car","cat","chair","cow","dining table","dog","horse","motorbike","person","potted plant","sheep","sofa","train","TV"],eB=["road","sidewalk","building","wall","fence","pole","traffic light","traffic sign","vegetation","terrain","sky","person","rider","car","truck","bus","train","motorcycle","bicycle"],tB=["background","wall","building","sky","floor","tree","ceiling","road","bed","windowpane","grass","cabinet","sidewalk","person","earth","door","table","mountain","plant","curtain","chair","car","water","painting","sofa","shelf","house","sea","mirror","rug","field","armchair","seat","fence","desk","rock","wardrobe","lamp","bathtub","railing","cushion","base","box","column","signboard","chest","counter","sand","sink","skyscraper","fireplace","refrigerator","grandstand","path","stairs","runway","case","pool","pillow","screen","stairway","river","bridge","bookcase","blind","coffee","toilet","flower","book","hill","bench","countertop","stove","palm","kitchen","computer","swivel","boat","bar","arcade","hovel","bus","towel","light","truck","tower","chandelier","awning","streetlight","booth","television","airplane","dirt","apparel","pole","land","bannister","escalator","ottoman","bottle","buffet","poster","stage","van","ship","fountain","conveyer","canopy","washer","plaything","swimming","stool","barrel","basket","waterfall","tent","bag","minibike","cradle","oven","ball","food","step","tank","trade","microwave","pot","animal","bicycle","lake","dishwasher","screen","blanket","sculpture","hood","sconce","vase","traffic","tray","ashcan","fan","pier","screen","plate","monitor","bulletin","shower","radiator","glass","clock","flag"];function nB(e,t){return"https://tfhub.dev/tensorflow/tfjs-model/deeplab/"+(4===t?e+"/1/default/1/model.json":e+"/1/quantized/"+t+"/1/model.json")+"?tfjs-format=file"}function rB(e){if("pascal"===e)return ZP;if("ade20k"===e)return YP;if("cityscapes"===e)return QP;throw new Error("SemanticSegmentation cannot be constructed with an invalid base model "+e+". Try one of 'pascal', 'cityscapes' and 'ade20k'.")}function sB(e){if("pascal"===e)return JP;if("ade20k"===e)return tB;if("cityscapes"===e)return eB;throw new Error("SemanticSegmentation cannot be constructed with an invalid base model "+e+". Try one of 'pascal', 'cityscapes' and 'ade20k'.")}function aB(e,t,n,r){return KP(this,void 0,void 0,(function(){var s,a,i,o,l,u,c,h,d,p,f,m,g,y;return XP(this,(function(b){switch(b.label){case 0:if(e.length<t.length)throw new Error("The colormap must be expansive enough to encode each label. Aborting, since the given colormap has length "+e.length+", but there are "+t.length+" labels.");return s=n.shape,a=s[0],i=s[1],o=yi([a,i,3],"int32"),[4,n.array()];case 1:for(l=b.sent(),u=new Set,c=0;c<a;++c)for(h=0;h<i;++h)y=l[c][h],u.add(y),o.set(e[y][0],c,h,0),o.set(e[y][1],c,h,1),o.set(e[y][2],c,h,2);return[4,So(d=o.toTensor(),r)];case 2:for(p=b.sent(),ha(d),f={},m=0,g=Array.from(u);m<g.length;m++)y=g[m],f[t[y]]=e[y];return[2,{legend:f,segmentationMap:p}]}}))}))}var iB=function(){function e(e,t){this.model=e,this.base=t}return e.prototype.predict=function(e){var t=this;return ca((function(){var n=bi(function(e){return ca((function(){var t=e instanceof Ns?e:Io(e),n=t.shape,r=n[0],s=n[1],a=513/Math.max(s,r),i=Math.round(r*a),o=Math.round(s*a);return Cu(ip.resizeBilinear(t,[i,o]))}))}(e),"int32");return bh(t.model.execute(n))}))},e.prototype.segment=function(e,t){return void 0===t&&(t={}),KP(this,void 0,void 0,(function(){var n,r,s,a,i,o,l,u,c,h,d=this;return XP(this,(function(p){switch(p.label){case 0:if(!(t.colormap&&t.labels||this.base))throw new Error("Calling the 'segment' method requires either the 'base' attribute to be defined (e.g. 'pascal', 'cityscapes' or'ade20k'), or 'colormap' and 'labels' options to be set. Aborting, since neither has been provided.");return t.colormap&&t.labels||(t.colormap=rB(this.base),t.labels=sB(this.base)),n=t.colormap,r=t.labels,s=t.canvas,a=ca((function(){return d.predict(e)})),i=a.shape,o=i[0],l=i[1],[4,aB(n,r,a,s)];case 1:return u=p.sent(),c=u.legend,h=u.segmentationMap,ha(a),[2,{legend:c,height:o,width:l,segmentationMap:h}]}}))}))},e.prototype.dispose=function(){return KP(this,void 0,void 0,(function(){return XP(this,(function(e){return this.model&&this.model.dispose(),[2]}))}))},e}(),oB=n(579);const lB=()=>{const[e,t]=(0,C.useState)(null),[n,r]=(0,C.useState)(!0),[s,a]=(0,C.useState)(null),[i,o]=(0,C.useState)(null),[l,u]=(0,C.useState)([]),[c,h]=(0,C.useState)(!1),d=(0,C.useRef)(null),p="pascal";(0,C.useEffect)((()=>{(async()=>{try{const e=nB(p,2),n=await aN(e),r=new iB(n);t(r),console.log("Loaded the model successfully!")}catch(e){console.error("Error loading the model:",e)}finally{r(!1)}})()}),[]);const f=e=>{const t=d.current,n=t.getContext("2d");t.width=s.width,t.height=s.height;const r=new ImageData(e.segmentationMap,e.width,e.height);n.putImageData(r,0,0),o(t.toDataURL()),m(e.legend)},m=e=>{const t=Object.keys(e).map((t=>{const[n,r,s]=e[t];return{name:t,color:`rgb(${n}, ${r}, ${s})`}}));u(t)};return n?(0,oB.jsx)("div",{className:"alert alert-info",children:"Loading model..."}):(0,oB.jsxs)("div",{className:"container mt-5",children:[(0,oB.jsx)("h1",{className:"text-center",children:"DeepLab Model Loaded"}),(0,oB.jsx)("div",{className:"mb-3",children:(0,oB.jsx)("input",{type:"file",accept:"image/*",className:"form-control",onChange:e=>{const t=e.target.files[0],n=document.createElement("img");n.src=URL.createObjectURL(t),n.onload=()=>{a(n),o(null)}}})}),s&&(0,oB.jsxs)("div",{className:"row justify-content-center mb-3",children:[l.length>0&&(0,oB.jsxs)("div",{id:"legends",className:"mt-4",children:[(0,oB.jsx)("h3",{children:"Legends:"}),(0,oB.jsx)("div",{className:"d-flex flex-wrap",children:l.map(((e,t)=>(0,oB.jsx)("span",{style:{backgroundColor:e.color,color:"#ffffff",padding:"5px",margin:"2px"},children:e.name},t)))})]}),(0,oB.jsxs)("div",{className:"col-md-6 text-center",children:[(0,oB.jsx)("h2",{children:"Uploaded Image"}),(0,oB.jsx)("img",{src:s.src,alt:"Uploaded",className:"img-fluid rounded border",style:{width:"100%",height:"auto"}}),(0,oB.jsx)("button",{onClick:async()=>{if(e&&s)try{h(!0);const t=Io(s),n=rB(p),r=sB(p);let a=await e.segment(t,{colormap:n,labels:r});f(a)}catch(t){console.error("Error during prediction:",t)}finally{h(!1)}else console.log("Model or image is not ready for prediction")},className:"btn btn-primary mt-2",children:"Segment Image"})]}),i&&!c&&(0,oB.jsxs)("div",{className:"col-md-6 text-center",children:[(0,oB.jsx)("h2",{children:"Segmented Image"}),(0,oB.jsx)("img",{src:i,alt:"Segmented",style:{width:"3500px"}})]})]}),(0,oB.jsx)("canvas",{ref:d,style:{display:"none"}}),c&&(0,oB.jsx)("div",{className:"text-center mt-4",children:(0,oB.jsx)("h2",{children:"Segmenting..."})})]})},uB=e=>{e&&e instanceof Function&&n.e(453).then(n.bind(n,453)).then((t=>{let{getCLS:n,getFID:r,getFCP:s,getLCP:a,getTTFB:i}=t;n(e),r(e),s(e),a(e),i(e)}))};$.createRoot(document.getElementById("root")).render((0,oB.jsx)(C.StrictMode,{children:(0,oB.jsx)(lB,{})})),uB()})()})();
//# sourceMappingURL=main.719605dc.js.map